ARM GAS  /tmp/cckeTtPn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"system_stm32f4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SystemCoreClock
  20              		.section	.data.SystemCoreClock,"aw",%progbits
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 0024F400 		.word	16000000
  26              		.global	AHBPrescTable
  27              		.section	.data.AHBPrescTable,"aw",%progbits
  28              		.align	2
  31              	AHBPrescTable:
  32 0000 00       		.byte	0
  33 0001 00       		.byte	0
  34 0002 00       		.byte	0
  35 0003 00       		.byte	0
  36 0004 00       		.byte	0
  37 0005 00       		.byte	0
  38 0006 00       		.byte	0
  39 0007 00       		.byte	0
  40 0008 01       		.byte	1
  41 0009 02       		.byte	2
  42 000a 03       		.byte	3
  43 000b 04       		.byte	4
  44 000c 06       		.byte	6
  45 000d 07       		.byte	7
  46 000e 08       		.byte	8
  47 000f 09       		.byte	9
  48              		.section	.text.SystemInit,"ax",%progbits
  49              		.align	2
  50              		.global	SystemInit
  51              		.thumb
  52              		.thumb_func
  54              	SystemInit:
  55              	.LFB125:
  56              		.file 1 "Src/system_stm32f4xx.c"
   1:Src/system_stm32f4xx.c **** /**
   2:Src/system_stm32f4xx.c ****   ******************************************************************************
   3:Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f4xx.c ****   * @version V1.2.3
   6:Src/system_stm32f4xx.c ****   * @date    09-October-2015 
ARM GAS  /tmp/cckeTtPn.s 			page 2


   7:Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:Src/system_stm32f4xx.c ****   *
   9:Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
  10:Src/system_stm32f4xx.c ****   *   user application:
  11:Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  12:Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  13:Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  14:Src/system_stm32f4xx.c ****   *
  15:Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  17:Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  18:Src/system_stm32f4xx.c ****   *                                     
  19:Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  21:Src/system_stm32f4xx.c ****   *                                 during program execution.
  22:Src/system_stm32f4xx.c ****   *
  23:Src/system_stm32f4xx.c ****   *
  24:Src/system_stm32f4xx.c ****   ******************************************************************************
  25:Src/system_stm32f4xx.c ****   * @attention
  26:Src/system_stm32f4xx.c ****   *
  27:Src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
  28:Src/system_stm32f4xx.c ****   *
  29:Src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  30:Src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  31:Src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  32:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  33:Src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  34:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  35:Src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  36:Src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  37:Src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  38:Src/system_stm32f4xx.c ****   *      without specific prior written permission.
  39:Src/system_stm32f4xx.c ****   *
  40:Src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  41:Src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  42:Src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  43:Src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  44:Src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  45:Src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  46:Src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  47:Src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  48:Src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  49:Src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  50:Src/system_stm32f4xx.c ****   *
  51:Src/system_stm32f4xx.c ****   ******************************************************************************
  52:Src/system_stm32f4xx.c ****   */
  53:Src/system_stm32f4xx.c **** 
  54:Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  55:Src/system_stm32f4xx.c ****   * @{
  56:Src/system_stm32f4xx.c ****   */
  57:Src/system_stm32f4xx.c **** 
  58:Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  59:Src/system_stm32f4xx.c ****   * @{
  60:Src/system_stm32f4xx.c ****   */  
  61:Src/system_stm32f4xx.c ****   
  62:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  63:Src/system_stm32f4xx.c ****   * @{
ARM GAS  /tmp/cckeTtPn.s 			page 3


  64:Src/system_stm32f4xx.c ****   */
  65:Src/system_stm32f4xx.c **** 
  66:Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  67:Src/system_stm32f4xx.c **** 
  68:Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  69:Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz */
  70:Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  71:Src/system_stm32f4xx.c **** 
  72:Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  73:Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  74:Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  75:Src/system_stm32f4xx.c **** 
  76:Src/system_stm32f4xx.c **** /**
  77:Src/system_stm32f4xx.c ****   * @}
  78:Src/system_stm32f4xx.c ****   */
  79:Src/system_stm32f4xx.c **** 
  80:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  81:Src/system_stm32f4xx.c ****   * @{
  82:Src/system_stm32f4xx.c ****   */
  83:Src/system_stm32f4xx.c **** 
  84:Src/system_stm32f4xx.c **** /**
  85:Src/system_stm32f4xx.c ****   * @}
  86:Src/system_stm32f4xx.c ****   */
  87:Src/system_stm32f4xx.c **** 
  88:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  89:Src/system_stm32f4xx.c ****   * @{
  90:Src/system_stm32f4xx.c ****   */
  91:Src/system_stm32f4xx.c **** 
  92:Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  93:Src/system_stm32f4xx.c **** 
  94:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  95:Src/system_stm32f4xx.c ****      Internal SRAM. */
  96:Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
  97:Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
  98:Src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
  99:Src/system_stm32f4xx.c **** /******************************************************************************/
 100:Src/system_stm32f4xx.c **** 
 101:Src/system_stm32f4xx.c **** /**
 102:Src/system_stm32f4xx.c ****   * @}
 103:Src/system_stm32f4xx.c ****   */
 104:Src/system_stm32f4xx.c **** 
 105:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 106:Src/system_stm32f4xx.c ****   * @{
 107:Src/system_stm32f4xx.c ****   */
 108:Src/system_stm32f4xx.c **** 
 109:Src/system_stm32f4xx.c **** /**
 110:Src/system_stm32f4xx.c ****   * @}
 111:Src/system_stm32f4xx.c ****   */
 112:Src/system_stm32f4xx.c **** 
 113:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 114:Src/system_stm32f4xx.c ****   * @{
 115:Src/system_stm32f4xx.c ****   */
 116:Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 117:Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 118:Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 119:Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 120:Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
ARM GAS  /tmp/cckeTtPn.s 			page 4


 121:Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 122:Src/system_stm32f4xx.c ****                variable is updated automatically.
 123:Src/system_stm32f4xx.c ****   */
 124:Src/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 16000000;
 125:Src/system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 126:Src/system_stm32f4xx.c **** 
 127:Src/system_stm32f4xx.c **** /**
 128:Src/system_stm32f4xx.c ****   * @}
 129:Src/system_stm32f4xx.c ****   */
 130:Src/system_stm32f4xx.c **** 
 131:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 132:Src/system_stm32f4xx.c ****   * @{
 133:Src/system_stm32f4xx.c ****   */
 134:Src/system_stm32f4xx.c **** 
 135:Src/system_stm32f4xx.c **** /**
 136:Src/system_stm32f4xx.c ****   * @}
 137:Src/system_stm32f4xx.c ****   */
 138:Src/system_stm32f4xx.c **** 
 139:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 140:Src/system_stm32f4xx.c ****   * @{
 141:Src/system_stm32f4xx.c ****   */
 142:Src/system_stm32f4xx.c **** 
 143:Src/system_stm32f4xx.c **** /**
 144:Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 145:Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 146:Src/system_stm32f4xx.c ****   *         configuration.
 147:Src/system_stm32f4xx.c ****   * @param  None
 148:Src/system_stm32f4xx.c ****   * @retval None
 149:Src/system_stm32f4xx.c ****   */
 150:Src/system_stm32f4xx.c **** void SystemInit(void)
 151:Src/system_stm32f4xx.c **** {
  57              		.loc 1 151 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0000 80B4     		push	{r7}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI1:
  68              		.cfi_def_cfa_register 7
 152:Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 153:Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 154:Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  69              		.loc 1 154 0
  70 0004 164B     		ldr	r3, .L2
  71 0006 164A     		ldr	r2, .L2
  72 0008 D2F88820 		ldr	r2, [r2, #136]
  73 000c 42F47002 		orr	r2, r2, #15728640
  74 0010 C3F88820 		str	r2, [r3, #136]
 155:Src/system_stm32f4xx.c ****   #endif
 156:Src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 157:Src/system_stm32f4xx.c ****   /* Set HSION bit */
 158:Src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  75              		.loc 1 158 0
ARM GAS  /tmp/cckeTtPn.s 			page 5


  76 0014 134B     		ldr	r3, .L2+4
  77 0016 134A     		ldr	r2, .L2+4
  78 0018 1268     		ldr	r2, [r2]
  79 001a 42F00102 		orr	r2, r2, #1
  80 001e 1A60     		str	r2, [r3]
 159:Src/system_stm32f4xx.c **** 
 160:Src/system_stm32f4xx.c ****   /* Reset CFGR register */
 161:Src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  81              		.loc 1 161 0
  82 0020 104B     		ldr	r3, .L2+4
  83 0022 0022     		movs	r2, #0
  84 0024 9A60     		str	r2, [r3, #8]
 162:Src/system_stm32f4xx.c **** 
 163:Src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 164:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  85              		.loc 1 164 0
  86 0026 0F4A     		ldr	r2, .L2+4
  87 0028 0E4B     		ldr	r3, .L2+4
  88 002a 1B68     		ldr	r3, [r3]
  89 002c 23F08473 		bic	r3, r3, #17301504
  90 0030 23F48033 		bic	r3, r3, #65536
  91 0034 1360     		str	r3, [r2]
 165:Src/system_stm32f4xx.c **** 
 166:Src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 167:Src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  92              		.loc 1 167 0
  93 0036 0B4B     		ldr	r3, .L2+4
  94 0038 0B4A     		ldr	r2, .L2+8
  95 003a 5A60     		str	r2, [r3, #4]
 168:Src/system_stm32f4xx.c **** 
 169:Src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 170:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  96              		.loc 1 170 0
  97 003c 094B     		ldr	r3, .L2+4
  98 003e 094A     		ldr	r2, .L2+4
  99 0040 1268     		ldr	r2, [r2]
 100 0042 22F48022 		bic	r2, r2, #262144
 101 0046 1A60     		str	r2, [r3]
 171:Src/system_stm32f4xx.c **** 
 172:Src/system_stm32f4xx.c ****   /* Disable all interrupts */
 173:Src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 102              		.loc 1 173 0
 103 0048 064B     		ldr	r3, .L2+4
 104 004a 0022     		movs	r2, #0
 105 004c DA60     		str	r2, [r3, #12]
 174:Src/system_stm32f4xx.c **** 
 175:Src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 176:Src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 177:Src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 178:Src/system_stm32f4xx.c **** #else
 179:Src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 106              		.loc 1 179 0
 107 004e 044B     		ldr	r3, .L2
 108 0050 4FF00062 		mov	r2, #134217728
 109 0054 9A60     		str	r2, [r3, #8]
 180:Src/system_stm32f4xx.c **** #endif
 181:Src/system_stm32f4xx.c **** }
ARM GAS  /tmp/cckeTtPn.s 			page 6


 110              		.loc 1 181 0
 111 0056 BD46     		mov	sp, r7
 112              		@ sp needed
 113 0058 5DF8047B 		ldr	r7, [sp], #4
 114 005c 7047     		bx	lr
 115              	.L3:
 116 005e 00BF     		.align	2
 117              	.L2:
 118 0060 00ED00E0 		.word	-536810240
 119 0064 00380240 		.word	1073887232
 120 0068 10300024 		.word	603992080
 121              		.cfi_endproc
 122              	.LFE125:
 124              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 125              		.align	2
 126              		.global	SystemCoreClockUpdate
 127              		.thumb
 128              		.thumb_func
 130              	SystemCoreClockUpdate:
 131              	.LFB126:
 182:Src/system_stm32f4xx.c **** 
 183:Src/system_stm32f4xx.c **** /**
 184:Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 185:Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 186:Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 187:Src/system_stm32f4xx.c ****   *         other parameters.
 188:Src/system_stm32f4xx.c ****   *           
 189:Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 190:Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 191:Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 192:Src/system_stm32f4xx.c ****   *     
 193:Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 194:Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 195:Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 196:Src/system_stm32f4xx.c ****   *             
 197:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 198:Src/system_stm32f4xx.c ****   *                                              
 199:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 200:Src/system_stm32f4xx.c ****   *                          
 201:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 202:Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 203:Src/system_stm32f4xx.c ****   *         
 204:Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 205:Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 206:Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 207:Src/system_stm32f4xx.c ****   *    
 208:Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 209:Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 210:Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 211:Src/system_stm32f4xx.c ****   *              may have wrong result.
 212:Src/system_stm32f4xx.c ****   *                
 213:Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 214:Src/system_stm32f4xx.c ****   *           value for HSE crystal.
 215:Src/system_stm32f4xx.c ****   *     
 216:Src/system_stm32f4xx.c ****   * @param  None
 217:Src/system_stm32f4xx.c ****   * @retval None
 218:Src/system_stm32f4xx.c ****   */
ARM GAS  /tmp/cckeTtPn.s 			page 7


 219:Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 220:Src/system_stm32f4xx.c **** {
 132              		.loc 1 220 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 24
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137 0000 80B4     		push	{r7}
 138              	.LCFI2:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 7, -4
 141 0002 87B0     		sub	sp, sp, #28
 142              	.LCFI3:
 143              		.cfi_def_cfa_offset 32
 144 0004 00AF     		add	r7, sp, #0
 145              	.LCFI4:
 146              		.cfi_def_cfa_register 7
 221:Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 147              		.loc 1 221 0
 148 0006 0023     		movs	r3, #0
 149 0008 3B61     		str	r3, [r7, #16]
 150 000a 0023     		movs	r3, #0
 151 000c 7B61     		str	r3, [r7, #20]
 152 000e 0223     		movs	r3, #2
 153 0010 FB60     		str	r3, [r7, #12]
 154 0012 0023     		movs	r3, #0
 155 0014 BB60     		str	r3, [r7, #8]
 156 0016 0223     		movs	r3, #2
 157 0018 7B60     		str	r3, [r7, #4]
 222:Src/system_stm32f4xx.c ****   
 223:Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 224:Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 158              		.loc 1 224 0
 159 001a 324B     		ldr	r3, .L13
 160 001c 9B68     		ldr	r3, [r3, #8]
 161 001e 03F00C03 		and	r3, r3, #12
 162 0022 3B61     		str	r3, [r7, #16]
 225:Src/system_stm32f4xx.c **** 
 226:Src/system_stm32f4xx.c ****   switch (tmp)
 163              		.loc 1 226 0
 164 0024 3B69     		ldr	r3, [r7, #16]
 165 0026 042B     		cmp	r3, #4
 166 0028 07D0     		beq	.L6
 167 002a 082B     		cmp	r3, #8
 168 002c 09D0     		beq	.L7
 169 002e 002B     		cmp	r3, #0
 170 0030 3FD1     		bne	.L12
 227:Src/system_stm32f4xx.c ****   {
 228:Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 229:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 171              		.loc 1 229 0
 172 0032 2D4B     		ldr	r3, .L13+4
 173 0034 2D4A     		ldr	r2, .L13+8
 174 0036 1A60     		str	r2, [r3]
 230:Src/system_stm32f4xx.c ****       break;
 175              		.loc 1 230 0
 176 0038 3FE0     		b	.L9
ARM GAS  /tmp/cckeTtPn.s 			page 8


 177              	.L6:
 231:Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 232:Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 178              		.loc 1 232 0
 179 003a 2B4B     		ldr	r3, .L13+4
 180 003c 2C4A     		ldr	r2, .L13+12
 181 003e 1A60     		str	r2, [r3]
 233:Src/system_stm32f4xx.c ****       break;
 182              		.loc 1 233 0
 183 0040 3BE0     		b	.L9
 184              	.L7:
 234:Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 235:Src/system_stm32f4xx.c **** 
 236:Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 237:Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 238:Src/system_stm32f4xx.c ****          */    
 239:Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 185              		.loc 1 239 0
 186 0042 284B     		ldr	r3, .L13
 187 0044 5B68     		ldr	r3, [r3, #4]
 188 0046 03F48003 		and	r3, r3, #4194304
 189 004a 9B0D     		lsrs	r3, r3, #22
 190 004c BB60     		str	r3, [r7, #8]
 240:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 191              		.loc 1 240 0
 192 004e 254B     		ldr	r3, .L13
 193 0050 5B68     		ldr	r3, [r3, #4]
 194 0052 03F03F03 		and	r3, r3, #63
 195 0056 7B60     		str	r3, [r7, #4]
 241:Src/system_stm32f4xx.c ****       
 242:Src/system_stm32f4xx.c ****       if (pllsource != 0)
 196              		.loc 1 242 0
 197 0058 BB68     		ldr	r3, [r7, #8]
 198 005a 002B     		cmp	r3, #0
 199 005c 0DD0     		beq	.L10
 243:Src/system_stm32f4xx.c ****       {
 244:Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 245:Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 200              		.loc 1 245 0
 201 005e 244A     		ldr	r2, .L13+12
 202 0060 7B68     		ldr	r3, [r7, #4]
 203 0062 B2FBF3F2 		udiv	r2, r2, r3
 204 0066 1F4B     		ldr	r3, .L13
 205 0068 5968     		ldr	r1, [r3, #4]
 206 006a 47F6C073 		movw	r3, #32704
 207 006e 0B40     		ands	r3, r3, r1
 208 0070 9B09     		lsrs	r3, r3, #6
 209 0072 03FB02F3 		mul	r3, r3, r2
 210 0076 7B61     		str	r3, [r7, #20]
 211 0078 0CE0     		b	.L11
 212              	.L10:
 246:Src/system_stm32f4xx.c ****       }
 247:Src/system_stm32f4xx.c ****       else
 248:Src/system_stm32f4xx.c ****       {
 249:Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 250:Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 213              		.loc 1 250 0
ARM GAS  /tmp/cckeTtPn.s 			page 9


 214 007a 1C4A     		ldr	r2, .L13+8
 215 007c 7B68     		ldr	r3, [r7, #4]
 216 007e B2FBF3F2 		udiv	r2, r2, r3
 217 0082 184B     		ldr	r3, .L13
 218 0084 5968     		ldr	r1, [r3, #4]
 219 0086 47F6C073 		movw	r3, #32704
 220 008a 0B40     		ands	r3, r3, r1
 221 008c 9B09     		lsrs	r3, r3, #6
 222 008e 03FB02F3 		mul	r3, r3, r2
 223 0092 7B61     		str	r3, [r7, #20]
 224              	.L11:
 251:Src/system_stm32f4xx.c ****       }
 252:Src/system_stm32f4xx.c **** 
 253:Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 225              		.loc 1 253 0
 226 0094 134B     		ldr	r3, .L13
 227 0096 5B68     		ldr	r3, [r3, #4]
 228 0098 03F44033 		and	r3, r3, #196608
 229 009c 1B0C     		lsrs	r3, r3, #16
 230 009e 0133     		adds	r3, r3, #1
 231 00a0 5B00     		lsls	r3, r3, #1
 232 00a2 FB60     		str	r3, [r7, #12]
 254:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 233              		.loc 1 254 0
 234 00a4 7A69     		ldr	r2, [r7, #20]
 235 00a6 FB68     		ldr	r3, [r7, #12]
 236 00a8 B2FBF3F2 		udiv	r2, r2, r3
 237 00ac 0E4B     		ldr	r3, .L13+4
 238 00ae 1A60     		str	r2, [r3]
 255:Src/system_stm32f4xx.c ****       break;
 239              		.loc 1 255 0
 240 00b0 03E0     		b	.L9
 241              	.L12:
 256:Src/system_stm32f4xx.c ****     default:
 257:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 242              		.loc 1 257 0
 243 00b2 0D4B     		ldr	r3, .L13+4
 244 00b4 0D4A     		ldr	r2, .L13+8
 245 00b6 1A60     		str	r2, [r3]
 258:Src/system_stm32f4xx.c ****       break;
 246              		.loc 1 258 0
 247 00b8 00BF     		nop
 248              	.L9:
 259:Src/system_stm32f4xx.c ****   }
 260:Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 261:Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 262:Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 249              		.loc 1 262 0
 250 00ba 0A4B     		ldr	r3, .L13
 251 00bc 9B68     		ldr	r3, [r3, #8]
 252 00be 03F0F003 		and	r3, r3, #240
 253 00c2 1B09     		lsrs	r3, r3, #4
 254 00c4 0B4A     		ldr	r2, .L13+16
 255 00c6 D35C     		ldrb	r3, [r2, r3]
 256 00c8 DBB2     		uxtb	r3, r3
 257 00ca 3B61     		str	r3, [r7, #16]
 263:Src/system_stm32f4xx.c ****   /* HCLK frequency */
ARM GAS  /tmp/cckeTtPn.s 			page 10


 264:Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 258              		.loc 1 264 0
 259 00cc 064B     		ldr	r3, .L13+4
 260 00ce 1A68     		ldr	r2, [r3]
 261 00d0 3B69     		ldr	r3, [r7, #16]
 262 00d2 DA40     		lsrs	r2, r2, r3
 263 00d4 044B     		ldr	r3, .L13+4
 264 00d6 1A60     		str	r2, [r3]
 265:Src/system_stm32f4xx.c **** }
 265              		.loc 1 265 0
 266 00d8 1C37     		adds	r7, r7, #28
 267 00da BD46     		mov	sp, r7
 268              		@ sp needed
 269 00dc 5DF8047B 		ldr	r7, [sp], #4
 270 00e0 7047     		bx	lr
 271              	.L14:
 272 00e2 00BF     		.align	2
 273              	.L13:
 274 00e4 00380240 		.word	1073887232
 275 00e8 00000000 		.word	SystemCoreClock
 276 00ec 0024F400 		.word	16000000
 277 00f0 00127A00 		.word	8000000
 278 00f4 00000000 		.word	AHBPrescTable
 279              		.cfi_endproc
 280              	.LFE126:
 282              		.text
 283              	.Letext0:
 284              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 285              		.file 3 "/usr/include/newlib/stdint.h"
 286              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 287              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
ARM GAS  /tmp/cckeTtPn.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
     /tmp/cckeTtPn.s:24     .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cckeTtPn.s:21     .data.SystemCoreClock:0000000000000000 $d
     /tmp/cckeTtPn.s:31     .data.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/cckeTtPn.s:28     .data.AHBPrescTable:0000000000000000 $d
     /tmp/cckeTtPn.s:49     .text.SystemInit:0000000000000000 $t
     /tmp/cckeTtPn.s:54     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cckeTtPn.s:118    .text.SystemInit:0000000000000060 $d
     /tmp/cckeTtPn.s:125    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cckeTtPn.s:130    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cckeTtPn.s:274    .text.SystemCoreClockUpdate:00000000000000e4 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
