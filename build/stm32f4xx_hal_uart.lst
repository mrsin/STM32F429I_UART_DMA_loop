ARM GAS  /tmp/ccfrOaPN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_UART_Init
  22              		.thumb
  23              		.thumb_func
  25              	HAL_UART_Init:
  26              	.LFB125:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @version V1.4.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @date    09-October-2015
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
ARM GAS  /tmp/ccfrOaPN.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
ARM GAS  /tmp/ccfrOaPN.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/ccfrOaPN.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #define UART_TIMEOUT_VALUE  22000
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccfrOaPN.s 			page 5


 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  28              		.loc 1 241 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
ARM GAS  /tmp/ccfrOaPN.s 			page 6


  44              		.loc 1 243 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  48              		.loc 1 245 0
  49 000e 0123     		movs	r3, #1
  50 0010 3BE0     		b	.L3
  51              	.L2:
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
  52              		.loc 1 262 0
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F83930 		ldrb	r3, [r3, #57]
  55 0018 DBB2     		uxtb	r3, r3
  56 001a 002B     		cmp	r3, #0
  57 001c 06D1     		bne	.L4
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  58              		.loc 1 265 0
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 83F83820 		strb	r2, [r3, #56]
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  62              		.loc 1 267 0
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  65              	.L4:
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
  66              		.loc 1 270 0
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 0222     		movs	r2, #2
  69 0030 83F83920 		strb	r2, [r3, #57]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  70              		.loc 1 273 0
ARM GAS  /tmp/ccfrOaPN.s 			page 7


  71 0034 7B68     		ldr	r3, [r7, #4]
  72 0036 1B68     		ldr	r3, [r3]
  73 0038 7A68     		ldr	r2, [r7, #4]
  74 003a 1268     		ldr	r2, [r2]
  75 003c D268     		ldr	r2, [r2, #12]
  76 003e 22F40052 		bic	r2, r2, #8192
  77 0042 DA60     		str	r2, [r3, #12]
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  78              		.loc 1 276 0
  79 0044 7868     		ldr	r0, [r7, #4]
  80 0046 FFF7FEFF 		bl	UART_SetConfig
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
  81              		.loc 1 281 0
  82 004a 7B68     		ldr	r3, [r7, #4]
  83 004c 1B68     		ldr	r3, [r3]
  84 004e 7A68     		ldr	r2, [r7, #4]
  85 0050 1268     		ldr	r2, [r2]
  86 0052 1269     		ldr	r2, [r2, #16]
  87 0054 22F49042 		bic	r2, r2, #18432
  88 0058 1A61     		str	r2, [r3, #16]
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
  89              		.loc 1 282 0
  90 005a 7B68     		ldr	r3, [r7, #4]
  91 005c 1B68     		ldr	r3, [r3]
  92 005e 7A68     		ldr	r2, [r7, #4]
  93 0060 1268     		ldr	r2, [r2]
  94 0062 5269     		ldr	r2, [r2, #20]
  95 0064 22F02A02 		bic	r2, r2, #42
  96 0068 5A61     		str	r2, [r3, #20]
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  97              		.loc 1 285 0
  98 006a 7B68     		ldr	r3, [r7, #4]
  99 006c 1B68     		ldr	r3, [r3]
 100 006e 7A68     		ldr	r2, [r7, #4]
 101 0070 1268     		ldr	r2, [r2]
 102 0072 D268     		ldr	r2, [r2, #12]
 103 0074 42F40052 		orr	r2, r2, #8192
 104 0078 DA60     		str	r2, [r3, #12]
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 105              		.loc 1 288 0
 106 007a 7B68     		ldr	r3, [r7, #4]
 107 007c 0022     		movs	r2, #0
 108 007e DA63     		str	r2, [r3, #60]
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 109              		.loc 1 289 0
 110 0080 7B68     		ldr	r3, [r7, #4]
 111 0082 0122     		movs	r2, #1
ARM GAS  /tmp/ccfrOaPN.s 			page 8


 112 0084 83F83920 		strb	r2, [r3, #57]
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 113              		.loc 1 291 0
 114 0088 0023     		movs	r3, #0
 115              	.L3:
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 116              		.loc 1 292 0
 117 008a 1846     		mov	r0, r3
 118 008c 0837     		adds	r7, r7, #8
 119 008e BD46     		mov	sp, r7
 120              		@ sp needed
 121 0090 80BD     		pop	{r7, pc}
 122              		.cfi_endproc
 123              	.LFE125:
 125 0092 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 126              		.align	2
 127              		.global	HAL_HalfDuplex_Init
 128              		.thumb
 129              		.thumb_func
 131              	HAL_HalfDuplex_Init:
 132              	.LFB126:
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 133              		.loc 1 302 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 82B0     		sub	sp, sp, #8
 143              	.LCFI4:
 144              		.cfi_def_cfa_offset 16
 145 0004 00AF     		add	r7, sp, #0
 146              	.LCFI5:
 147              		.cfi_def_cfa_register 7
 148 0006 7860     		str	r0, [r7, #4]
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 149              		.loc 1 304 0
 150 0008 7B68     		ldr	r3, [r7, #4]
 151 000a 002B     		cmp	r3, #0
 152 000c 01D1     		bne	.L6
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 153              		.loc 1 306 0
ARM GAS  /tmp/ccfrOaPN.s 			page 9


 154 000e 0123     		movs	r3, #1
 155 0010 43E0     		b	.L7
 156              	.L6:
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 157              		.loc 1 314 0
 158 0012 7B68     		ldr	r3, [r7, #4]
 159 0014 93F83930 		ldrb	r3, [r3, #57]
 160 0018 DBB2     		uxtb	r3, r3
 161 001a 002B     		cmp	r3, #0
 162 001c 06D1     		bne	.L8
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 163              		.loc 1 317 0
 164 001e 7B68     		ldr	r3, [r7, #4]
 165 0020 0022     		movs	r2, #0
 166 0022 83F83820 		strb	r2, [r3, #56]
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 167              		.loc 1 319 0
 168 0026 7868     		ldr	r0, [r7, #4]
 169 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 170              	.L8:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 171              		.loc 1 322 0
 172 002c 7B68     		ldr	r3, [r7, #4]
 173 002e 0222     		movs	r2, #2
 174 0030 83F83920 		strb	r2, [r3, #57]
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 175              		.loc 1 325 0
 176 0034 7B68     		ldr	r3, [r7, #4]
 177 0036 1B68     		ldr	r3, [r3]
 178 0038 7A68     		ldr	r2, [r7, #4]
 179 003a 1268     		ldr	r2, [r2]
 180 003c D268     		ldr	r2, [r2, #12]
 181 003e 22F40052 		bic	r2, r2, #8192
 182 0042 DA60     		str	r2, [r3, #12]
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 183              		.loc 1 328 0
 184 0044 7868     		ldr	r0, [r7, #4]
 185 0046 FFF7FEFF 		bl	UART_SetConfig
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
ARM GAS  /tmp/ccfrOaPN.s 			page 10


 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 186              		.loc 1 333 0
 187 004a 7B68     		ldr	r3, [r7, #4]
 188 004c 1B68     		ldr	r3, [r3]
 189 004e 7A68     		ldr	r2, [r7, #4]
 190 0050 1268     		ldr	r2, [r2]
 191 0052 1269     		ldr	r2, [r2, #16]
 192 0054 22F49042 		bic	r2, r2, #18432
 193 0058 1A61     		str	r2, [r3, #16]
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_IREN | USART_CR3_SCEN);
 194              		.loc 1 334 0
 195 005a 7B68     		ldr	r3, [r7, #4]
 196 005c 1B68     		ldr	r3, [r3]
 197 005e 7A68     		ldr	r2, [r7, #4]
 198 0060 1268     		ldr	r2, [r2]
 199 0062 5269     		ldr	r2, [r2, #20]
 200 0064 22F02202 		bic	r2, r2, #34
 201 0068 5A61     		str	r2, [r3, #20]
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 |= USART_CR3_HDSEL;
 202              		.loc 1 337 0
 203 006a 7B68     		ldr	r3, [r7, #4]
 204 006c 1B68     		ldr	r3, [r3]
 205 006e 7A68     		ldr	r2, [r7, #4]
 206 0070 1268     		ldr	r2, [r2]
 207 0072 5269     		ldr	r2, [r2, #20]
 208 0074 42F00802 		orr	r2, r2, #8
 209 0078 5A61     		str	r2, [r3, #20]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 210              		.loc 1 340 0
 211 007a 7B68     		ldr	r3, [r7, #4]
 212 007c 1B68     		ldr	r3, [r3]
 213 007e 7A68     		ldr	r2, [r7, #4]
 214 0080 1268     		ldr	r2, [r2]
 215 0082 D268     		ldr	r2, [r2, #12]
 216 0084 42F40052 		orr	r2, r2, #8192
 217 0088 DA60     		str	r2, [r3, #12]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 218              		.loc 1 343 0
 219 008a 7B68     		ldr	r3, [r7, #4]
 220 008c 0022     		movs	r2, #0
 221 008e DA63     		str	r2, [r3, #60]
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 222              		.loc 1 344 0
 223 0090 7B68     		ldr	r3, [r7, #4]
 224 0092 0122     		movs	r2, #1
 225 0094 83F83920 		strb	r2, [r3, #57]
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 226              		.loc 1 346 0
 227 0098 0023     		movs	r3, #0
ARM GAS  /tmp/ccfrOaPN.s 			page 11


 228              	.L7:
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 229              		.loc 1 347 0
 230 009a 1846     		mov	r0, r3
 231 009c 0837     		adds	r7, r7, #8
 232 009e BD46     		mov	sp, r7
 233              		@ sp needed
 234 00a0 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE126:
 238 00a2 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 239              		.align	2
 240              		.global	HAL_LIN_Init
 241              		.thumb
 242              		.thumb_func
 244              	HAL_LIN_Init:
 245              	.LFB127:
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 246              		.loc 1 361 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 8
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              	.LCFI6:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              	.LCFI7:
 257              		.cfi_def_cfa_offset 16
 258 0004 00AF     		add	r7, sp, #0
 259              	.LCFI8:
 260              		.cfi_def_cfa_register 7
 261 0006 7860     		str	r0, [r7, #4]
 262 0008 3960     		str	r1, [r7]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 263              		.loc 1 363 0
 264 000a 7B68     		ldr	r3, [r7, #4]
 265 000c 002B     		cmp	r3, #0
 266 000e 01D1     		bne	.L10
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 267              		.loc 1 365 0
ARM GAS  /tmp/ccfrOaPN.s 			page 12


 268 0010 0123     		movs	r3, #1
 269 0012 53E0     		b	.L11
 270              	.L10:
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 271              		.loc 1 374 0
 272 0014 7B68     		ldr	r3, [r7, #4]
 273 0016 93F83930 		ldrb	r3, [r3, #57]
 274 001a DBB2     		uxtb	r3, r3
 275 001c 002B     		cmp	r3, #0
 276 001e 06D1     		bne	.L12
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 277              		.loc 1 377 0
 278 0020 7B68     		ldr	r3, [r7, #4]
 279 0022 0022     		movs	r2, #0
 280 0024 83F83820 		strb	r2, [r3, #56]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 281              		.loc 1 379 0
 282 0028 7868     		ldr	r0, [r7, #4]
 283 002a FFF7FEFF 		bl	HAL_UART_MspInit
 284              	.L12:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 285              		.loc 1 382 0
 286 002e 7B68     		ldr	r3, [r7, #4]
 287 0030 0222     		movs	r2, #2
 288 0032 83F83920 		strb	r2, [r3, #57]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 289              		.loc 1 385 0
 290 0036 7B68     		ldr	r3, [r7, #4]
 291 0038 1B68     		ldr	r3, [r3]
 292 003a 7A68     		ldr	r2, [r7, #4]
 293 003c 1268     		ldr	r2, [r2]
 294 003e D268     		ldr	r2, [r2, #12]
 295 0040 22F40052 		bic	r2, r2, #8192
 296 0044 DA60     		str	r2, [r3, #12]
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 297              		.loc 1 388 0
 298 0046 7868     		ldr	r0, [r7, #4]
 299 0048 FFF7FEFF 		bl	UART_SetConfig
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
ARM GAS  /tmp/ccfrOaPN.s 			page 13


 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_CLKEN);
 300              		.loc 1 393 0
 301 004c 7B68     		ldr	r3, [r7, #4]
 302 004e 1B68     		ldr	r3, [r3]
 303 0050 7A68     		ldr	r2, [r7, #4]
 304 0052 1268     		ldr	r2, [r2]
 305 0054 1269     		ldr	r2, [r2, #16]
 306 0056 22F40062 		bic	r2, r2, #2048
 307 005a 1A61     		str	r2, [r3, #16]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN);
 308              		.loc 1 394 0
 309 005c 7B68     		ldr	r3, [r7, #4]
 310 005e 1B68     		ldr	r3, [r3]
 311 0060 7A68     		ldr	r2, [r7, #4]
 312 0062 1268     		ldr	r2, [r2]
 313 0064 5269     		ldr	r2, [r2, #20]
 314 0066 22F02A02 		bic	r2, r2, #42
 315 006a 5A61     		str	r2, [r3, #20]
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 |= USART_CR2_LINEN;
 316              		.loc 1 397 0
 317 006c 7B68     		ldr	r3, [r7, #4]
 318 006e 1B68     		ldr	r3, [r3]
 319 0070 7A68     		ldr	r2, [r7, #4]
 320 0072 1268     		ldr	r2, [r2]
 321 0074 1269     		ldr	r2, [r2, #16]
 322 0076 42F48042 		orr	r2, r2, #16384
 323 007a 1A61     		str	r2, [r3, #16]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LBDL);
 324              		.loc 1 400 0
 325 007c 7B68     		ldr	r3, [r7, #4]
 326 007e 1B68     		ldr	r3, [r3]
 327 0080 7A68     		ldr	r2, [r7, #4]
 328 0082 1268     		ldr	r2, [r2]
 329 0084 1269     		ldr	r2, [r2, #16]
 330 0086 22F02002 		bic	r2, r2, #32
 331 008a 1A61     		str	r2, [r3, #16]
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 |= BreakDetectLength; 
 332              		.loc 1 401 0
 333 008c 7B68     		ldr	r3, [r7, #4]
 334 008e 1B68     		ldr	r3, [r3]
 335 0090 7A68     		ldr	r2, [r7, #4]
 336 0092 1268     		ldr	r2, [r2]
 337 0094 1169     		ldr	r1, [r2, #16]
 338 0096 3A68     		ldr	r2, [r7]
 339 0098 0A43     		orrs	r2, r2, r1
 340 009a 1A61     		str	r2, [r3, #16]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 341              		.loc 1 404 0
 342 009c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 14


 343 009e 1B68     		ldr	r3, [r3]
 344 00a0 7A68     		ldr	r2, [r7, #4]
 345 00a2 1268     		ldr	r2, [r2]
 346 00a4 D268     		ldr	r2, [r2, #12]
 347 00a6 42F40052 		orr	r2, r2, #8192
 348 00aa DA60     		str	r2, [r3, #12]
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 349              		.loc 1 407 0
 350 00ac 7B68     		ldr	r3, [r7, #4]
 351 00ae 0022     		movs	r2, #0
 352 00b0 DA63     		str	r2, [r3, #60]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 353              		.loc 1 408 0
 354 00b2 7B68     		ldr	r3, [r7, #4]
 355 00b4 0122     		movs	r2, #1
 356 00b6 83F83920 		strb	r2, [r3, #57]
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 357              		.loc 1 410 0
 358 00ba 0023     		movs	r3, #0
 359              	.L11:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 360              		.loc 1 411 0
 361 00bc 1846     		mov	r0, r3
 362 00be 0837     		adds	r7, r7, #8
 363 00c0 BD46     		mov	sp, r7
 364              		@ sp needed
 365 00c2 80BD     		pop	{r7, pc}
 366              		.cfi_endproc
 367              	.LFE127:
 369              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 370              		.align	2
 371              		.global	HAL_MultiProcessor_Init
 372              		.thumb
 373              		.thumb_func
 375              	HAL_MultiProcessor_Init:
 376              	.LFB128:
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address: USART address
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 377              		.loc 1 426 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccfrOaPN.s 			page 15


 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              	.LCFI9:
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 7, -8
 385              		.cfi_offset 14, -4
 386 0002 84B0     		sub	sp, sp, #16
 387              	.LCFI10:
 388              		.cfi_def_cfa_offset 24
 389 0004 00AF     		add	r7, sp, #0
 390              	.LCFI11:
 391              		.cfi_def_cfa_register 7
 392 0006 F860     		str	r0, [r7, #12]
 393 0008 0B46     		mov	r3, r1
 394 000a 7A60     		str	r2, [r7, #4]
 395 000c FB72     		strb	r3, [r7, #11]
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 396              		.loc 1 428 0
 397 000e FB68     		ldr	r3, [r7, #12]
 398 0010 002B     		cmp	r3, #0
 399 0012 01D1     		bne	.L14
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 400              		.loc 1 430 0
 401 0014 0123     		movs	r3, #1
 402 0016 5BE0     		b	.L15
 403              	.L14:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_RESET)
 404              		.loc 1 440 0
 405 0018 FB68     		ldr	r3, [r7, #12]
 406 001a 93F83930 		ldrb	r3, [r3, #57]
 407 001e DBB2     		uxtb	r3, r3
 408 0020 002B     		cmp	r3, #0
 409 0022 06D1     		bne	.L16
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 410              		.loc 1 443 0
 411 0024 FB68     		ldr	r3, [r7, #12]
 412 0026 0022     		movs	r2, #0
 413 0028 83F83820 		strb	r2, [r3, #56]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 414              		.loc 1 445 0
 415 002c F868     		ldr	r0, [r7, #12]
 416 002e FFF7FEFF 		bl	HAL_UART_MspInit
 417              	.L16:
ARM GAS  /tmp/ccfrOaPN.s 			page 16


 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 418              		.loc 1 448 0
 419 0032 FB68     		ldr	r3, [r7, #12]
 420 0034 0222     		movs	r2, #2
 421 0036 83F83920 		strb	r2, [r3, #57]
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 422              		.loc 1 451 0
 423 003a FB68     		ldr	r3, [r7, #12]
 424 003c 1B68     		ldr	r3, [r3]
 425 003e FA68     		ldr	r2, [r7, #12]
 426 0040 1268     		ldr	r2, [r2]
 427 0042 D268     		ldr	r2, [r2, #12]
 428 0044 22F40052 		bic	r2, r2, #8192
 429 0048 DA60     		str	r2, [r3, #12]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 430              		.loc 1 454 0
 431 004a F868     		ldr	r0, [r7, #12]
 432 004c FFF7FEFF 		bl	UART_SetConfig
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 433              		.loc 1 459 0
 434 0050 FB68     		ldr	r3, [r7, #12]
 435 0052 1B68     		ldr	r3, [r3]
 436 0054 FA68     		ldr	r2, [r7, #12]
 437 0056 1268     		ldr	r2, [r2]
 438 0058 1269     		ldr	r2, [r2, #16]
 439 005a 22F49042 		bic	r2, r2, #18432
 440 005e 1A61     		str	r2, [r3, #16]
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 441              		.loc 1 460 0
 442 0060 FB68     		ldr	r3, [r7, #12]
 443 0062 1B68     		ldr	r3, [r3]
 444 0064 FA68     		ldr	r2, [r7, #12]
 445 0066 1268     		ldr	r2, [r2]
 446 0068 5269     		ldr	r2, [r2, #20]
 447 006a 22F02A02 		bic	r2, r2, #42
 448 006e 5A61     		str	r2, [r3, #20]
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 &= ~(USART_CR2_ADD);
 449              		.loc 1 463 0
 450 0070 FB68     		ldr	r3, [r7, #12]
 451 0072 1B68     		ldr	r3, [r3]
 452 0074 FA68     		ldr	r2, [r7, #12]
 453 0076 1268     		ldr	r2, [r2]
 454 0078 1269     		ldr	r2, [r2, #16]
 455 007a 22F00F02 		bic	r2, r2, #15
 456 007e 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccfrOaPN.s 			page 17


 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 |= Address;
 457              		.loc 1 465 0
 458 0080 FB68     		ldr	r3, [r7, #12]
 459 0082 1B68     		ldr	r3, [r3]
 460 0084 FA68     		ldr	r2, [r7, #12]
 461 0086 1268     		ldr	r2, [r2]
 462 0088 1169     		ldr	r1, [r2, #16]
 463 008a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 464 008c 0A43     		orrs	r2, r2, r1
 465 008e 1A61     		str	r2, [r3, #16]
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 &= ~(USART_CR1_WAKE);
 466              		.loc 1 468 0
 467 0090 FB68     		ldr	r3, [r7, #12]
 468 0092 1B68     		ldr	r3, [r3]
 469 0094 FA68     		ldr	r2, [r7, #12]
 470 0096 1268     		ldr	r2, [r2]
 471 0098 D268     		ldr	r2, [r2, #12]
 472 009a 22F40062 		bic	r2, r2, #2048
 473 009e DA60     		str	r2, [r3, #12]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 |= WakeUpMethod;
 474              		.loc 1 469 0
 475 00a0 FB68     		ldr	r3, [r7, #12]
 476 00a2 1B68     		ldr	r3, [r3]
 477 00a4 FA68     		ldr	r2, [r7, #12]
 478 00a6 1268     		ldr	r2, [r2]
 479 00a8 D168     		ldr	r1, [r2, #12]
 480 00aa 7A68     		ldr	r2, [r7, #4]
 481 00ac 0A43     		orrs	r2, r2, r1
 482 00ae DA60     		str	r2, [r3, #12]
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 483              		.loc 1 472 0
 484 00b0 FB68     		ldr	r3, [r7, #12]
 485 00b2 1B68     		ldr	r3, [r3]
 486 00b4 FA68     		ldr	r2, [r7, #12]
 487 00b6 1268     		ldr	r2, [r2]
 488 00b8 D268     		ldr	r2, [r2, #12]
 489 00ba 42F40052 		orr	r2, r2, #8192
 490 00be DA60     		str	r2, [r3, #12]
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 491              		.loc 1 475 0
 492 00c0 FB68     		ldr	r3, [r7, #12]
 493 00c2 0022     		movs	r2, #0
 494 00c4 DA63     		str	r2, [r3, #60]
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 495              		.loc 1 476 0
 496 00c6 FB68     		ldr	r3, [r7, #12]
 497 00c8 0122     		movs	r2, #1
 498 00ca 83F83920 		strb	r2, [r3, #57]
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccfrOaPN.s 			page 18


 499              		.loc 1 478 0
 500 00ce 0023     		movs	r3, #0
 501              	.L15:
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 502              		.loc 1 479 0
 503 00d0 1846     		mov	r0, r3
 504 00d2 1037     		adds	r7, r7, #16
 505 00d4 BD46     		mov	sp, r7
 506              		@ sp needed
 507 00d6 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE128:
 511              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 512              		.align	2
 513              		.global	HAL_UART_DeInit
 514              		.thumb
 515              		.thumb_func
 517              	HAL_UART_DeInit:
 518              	.LFB129:
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 519              		.loc 1 488 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              	.LCFI12:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 82B0     		sub	sp, sp, #8
 529              	.LCFI13:
 530              		.cfi_def_cfa_offset 16
 531 0004 00AF     		add	r7, sp, #0
 532              	.LCFI14:
 533              		.cfi_def_cfa_register 7
 534 0006 7860     		str	r0, [r7, #4]
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 535              		.loc 1 490 0
 536 0008 7B68     		ldr	r3, [r7, #4]
 537 000a 002B     		cmp	r3, #0
 538 000c 01D1     		bne	.L18
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 539              		.loc 1 492 0
 540 000e 0123     		movs	r3, #1
 541 0010 12E0     		b	.L19
 542              	.L18:
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccfrOaPN.s 			page 19


 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 543              		.loc 1 498 0
 544 0012 7B68     		ldr	r3, [r7, #4]
 545 0014 0222     		movs	r2, #2
 546 0016 83F83920 		strb	r2, [r3, #57]
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 547              		.loc 1 501 0
 548 001a 7868     		ldr	r0, [r7, #4]
 549 001c FFF7FEFF 		bl	HAL_UART_MspDeInit
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 550              		.loc 1 503 0
 551 0020 7B68     		ldr	r3, [r7, #4]
 552 0022 0022     		movs	r2, #0
 553 0024 DA63     		str	r2, [r3, #60]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_RESET;
 554              		.loc 1 504 0
 555 0026 7B68     		ldr	r3, [r7, #4]
 556 0028 0022     		movs	r2, #0
 557 002a 83F83920 		strb	r2, [r3, #57]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 558              		.loc 1 507 0
 559 002e 7B68     		ldr	r3, [r7, #4]
 560 0030 0022     		movs	r2, #0
 561 0032 83F83820 		strb	r2, [r3, #56]
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 562              		.loc 1 509 0
 563 0036 0023     		movs	r3, #0
 564              	.L19:
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 565              		.loc 1 510 0
 566 0038 1846     		mov	r0, r3
 567 003a 0837     		adds	r7, r7, #8
 568 003c BD46     		mov	sp, r7
 569              		@ sp needed
 570 003e 80BD     		pop	{r7, pc}
 571              		.cfi_endproc
 572              	.LFE129:
 574              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 575              		.align	2
 576              		.weak	HAL_UART_MspInit
 577              		.thumb
 578              		.thumb_func
 580              	HAL_UART_MspInit:
 581              	.LFB130:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
ARM GAS  /tmp/ccfrOaPN.s 			page 20


 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 582              		.loc 1 519 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587 0000 80B4     		push	{r7}
 588              	.LCFI15:
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 7, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              	.LCFI16:
 593              		.cfi_def_cfa_offset 16
 594 0004 00AF     		add	r7, sp, #0
 595              	.LCFI17:
 596              		.cfi_def_cfa_register 7
 597 0006 7860     		str	r0, [r7, #4]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 598              		.loc 1 523 0
 599 0008 0C37     		adds	r7, r7, #12
 600 000a BD46     		mov	sp, r7
 601              		@ sp needed
 602 000c 5DF8047B 		ldr	r7, [sp], #4
 603 0010 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE130:
 607 0012 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 608              		.align	2
 609              		.weak	HAL_UART_MspDeInit
 610              		.thumb
 611              		.thumb_func
 613              	HAL_UART_MspDeInit:
 614              	.LFB131:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 615              		.loc 1 532 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 8
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620 0000 80B4     		push	{r7}
 621              	.LCFI18:
ARM GAS  /tmp/ccfrOaPN.s 			page 21


 622              		.cfi_def_cfa_offset 4
 623              		.cfi_offset 7, -4
 624 0002 83B0     		sub	sp, sp, #12
 625              	.LCFI19:
 626              		.cfi_def_cfa_offset 16
 627 0004 00AF     		add	r7, sp, #0
 628              	.LCFI20:
 629              		.cfi_def_cfa_register 7
 630 0006 7860     		str	r0, [r7, #4]
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 631              		.loc 1 536 0
 632 0008 0C37     		adds	r7, r7, #12
 633 000a BD46     		mov	sp, r7
 634              		@ sp needed
 635 000c 5DF8047B 		ldr	r7, [sp], #4
 636 0010 7047     		bx	lr
 637              		.cfi_endproc
 638              	.LFE131:
 640 0012 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 641              		.align	2
 642              		.global	HAL_UART_Transmit
 643              		.thumb
 644              		.thumb_func
 646              	HAL_UART_Transmit:
 647              	.LFB132:
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
ARM GAS  /tmp/ccfrOaPN.s 			page 22


 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 648              		.loc 1 604 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 24
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 80B5     		push	{r7, lr}
 653              	.LCFI21:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 86B0     		sub	sp, sp, #24
 658              	.LCFI22:
 659              		.cfi_def_cfa_offset 32
 660 0004 00AF     		add	r7, sp, #0
 661              	.LCFI23:
 662              		.cfi_def_cfa_register 7
 663 0006 F860     		str	r0, [r7, #12]
 664 0008 B960     		str	r1, [r7, #8]
 665 000a 3B60     		str	r3, [r7]
ARM GAS  /tmp/ccfrOaPN.s 			page 23


 666 000c 1346     		mov	r3, r2	@ movhi
 667 000e FB80     		strh	r3, [r7, #6]	@ movhi
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp1 = 0;
 668              		.loc 1 606 0
 669 0010 0023     		movs	r3, #0
 670 0012 7B61     		str	r3, [r7, #20]
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = huart->State;
 671              		.loc 1 608 0
 672 0014 FB68     		ldr	r3, [r7, #12]
 673 0016 93F83930 		ldrb	r3, [r3, #57]
 674 001a DBB2     		uxtb	r3, r3
 675 001c 7B61     		str	r3, [r7, #20]
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_RX))
 676              		.loc 1 609 0
 677 001e 7B69     		ldr	r3, [r7, #20]
 678 0020 012B     		cmp	r3, #1
 679 0022 03D0     		beq	.L23
 680              		.loc 1 609 0 is_stmt 0 discriminator 1
 681 0024 7B69     		ldr	r3, [r7, #20]
 682 0026 222B     		cmp	r3, #34
 683 0028 40F08D80 		bne	.L24
 684              	.L23:
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 685              		.loc 1 611 0 is_stmt 1
 686 002c BB68     		ldr	r3, [r7, #8]
 687 002e 002B     		cmp	r3, #0
 688 0030 02D0     		beq	.L25
 689              		.loc 1 611 0 is_stmt 0 discriminator 1
 690 0032 FB88     		ldrh	r3, [r7, #6]
 691 0034 002B     		cmp	r3, #0
 692 0036 01D1     		bne	.L26
 693              	.L25:
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 694              		.loc 1 613 0 is_stmt 1
 695 0038 0123     		movs	r3, #1
 696 003a 85E0     		b	.L27
 697              	.L26:
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 698              		.loc 1 617 0
 699 003c FB68     		ldr	r3, [r7, #12]
 700 003e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 701 0042 012B     		cmp	r3, #1
 702 0044 01D1     		bne	.L28
 703              		.loc 1 617 0 is_stmt 0 discriminator 1
 704 0046 0223     		movs	r3, #2
 705 0048 7EE0     		b	.L27
 706              	.L28:
 707              		.loc 1 617 0 discriminator 2
 708 004a FB68     		ldr	r3, [r7, #12]
 709 004c 0122     		movs	r2, #1
ARM GAS  /tmp/ccfrOaPN.s 			page 24


 710 004e 83F83820 		strb	r2, [r3, #56]
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 711              		.loc 1 619 0 is_stmt 1 discriminator 2
 712 0052 FB68     		ldr	r3, [r7, #12]
 713 0054 0022     		movs	r2, #0
 714 0056 DA63     		str	r2, [r3, #60]
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 715              		.loc 1 621 0 discriminator 2
 716 0058 FB68     		ldr	r3, [r7, #12]
 717 005a 93F83930 		ldrb	r3, [r3, #57]
 718 005e DBB2     		uxtb	r3, r3
 719 0060 222B     		cmp	r3, #34
 720 0062 04D1     		bne	.L29
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 721              		.loc 1 623 0
 722 0064 FB68     		ldr	r3, [r7, #12]
 723 0066 3222     		movs	r2, #50
 724 0068 83F83920 		strb	r2, [r3, #57]
 725 006c 03E0     		b	.L30
 726              	.L29:
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 727              		.loc 1 627 0
 728 006e FB68     		ldr	r3, [r7, #12]
 729 0070 1222     		movs	r2, #18
 730 0072 83F83920 		strb	r2, [r3, #57]
 731              	.L30:
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 732              		.loc 1 630 0
 733 0076 FB68     		ldr	r3, [r7, #12]
 734 0078 FA88     		ldrh	r2, [r7, #6]	@ movhi
 735 007a 9A84     		strh	r2, [r3, #36]	@ movhi
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 736              		.loc 1 631 0
 737 007c FB68     		ldr	r3, [r7, #12]
 738 007e FA88     		ldrh	r2, [r7, #6]	@ movhi
 739 0080 DA84     		strh	r2, [r3, #38]	@ movhi
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 740              		.loc 1 632 0
 741 0082 3CE0     		b	.L31
 742              	.L37:
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 743              		.loc 1 634 0
 744 0084 FB68     		ldr	r3, [r7, #12]
 745 0086 DB8C     		ldrh	r3, [r3, #38]
 746 0088 013B     		subs	r3, r3, #1
 747 008a 9AB2     		uxth	r2, r3
 748 008c FB68     		ldr	r3, [r7, #12]
 749 008e DA84     		strh	r2, [r3, #38]	@ movhi
ARM GAS  /tmp/ccfrOaPN.s 			page 25


 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 750              		.loc 1 635 0
 751 0090 FB68     		ldr	r3, [r7, #12]
 752 0092 9B68     		ldr	r3, [r3, #8]
 753 0094 B3F5805F 		cmp	r3, #4096
 754 0098 1FD1     		bne	.L32
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 755              		.loc 1 637 0
 756 009a F868     		ldr	r0, [r7, #12]
 757 009c 8021     		movs	r1, #128
 758 009e 0022     		movs	r2, #0
 759 00a0 3B68     		ldr	r3, [r7]
 760 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 761 00a6 0346     		mov	r3, r0
 762 00a8 002B     		cmp	r3, #0
 763 00aa 01D0     		beq	.L33
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 764              		.loc 1 639 0
 765 00ac 0323     		movs	r3, #3
 766 00ae 4BE0     		b	.L27
 767              	.L33:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 768              		.loc 1 641 0
 769 00b0 BB68     		ldr	r3, [r7, #8]
 770 00b2 3B61     		str	r3, [r7, #16]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 771              		.loc 1 642 0
 772 00b4 FB68     		ldr	r3, [r7, #12]
 773 00b6 1B68     		ldr	r3, [r3]
 774 00b8 3A69     		ldr	r2, [r7, #16]
 775 00ba 1288     		ldrh	r2, [r2]
 776 00bc C2F30802 		ubfx	r2, r2, #0, #9
 777 00c0 5A60     		str	r2, [r3, #4]
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 778              		.loc 1 643 0
 779 00c2 FB68     		ldr	r3, [r7, #12]
 780 00c4 1B69     		ldr	r3, [r3, #16]
 781 00c6 002B     		cmp	r3, #0
 782 00c8 03D1     		bne	.L34
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2;
 783              		.loc 1 645 0
 784 00ca BB68     		ldr	r3, [r7, #8]
 785 00cc 0233     		adds	r3, r3, #2
 786 00ce BB60     		str	r3, [r7, #8]
 787 00d0 15E0     		b	.L31
 788              	.L34:
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1;
 789              		.loc 1 649 0
 790 00d2 BB68     		ldr	r3, [r7, #8]
 791 00d4 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccfrOaPN.s 			page 26


 792 00d6 BB60     		str	r3, [r7, #8]
 793 00d8 11E0     		b	.L31
 794              	.L32:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, Timeout) != HAL_OK)
 795              		.loc 1 654 0
 796 00da F868     		ldr	r0, [r7, #12]
 797 00dc 8021     		movs	r1, #128
 798 00de 0022     		movs	r2, #0
 799 00e0 3B68     		ldr	r3, [r7]
 800 00e2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 801 00e6 0346     		mov	r3, r0
 802 00e8 002B     		cmp	r3, #0
 803 00ea 01D0     		beq	.L36
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 804              		.loc 1 656 0
 805 00ec 0323     		movs	r3, #3
 806 00ee 2BE0     		b	.L27
 807              	.L36:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 808              		.loc 1 658 0
 809 00f0 FB68     		ldr	r3, [r7, #12]
 810 00f2 1A68     		ldr	r2, [r3]
 811 00f4 BB68     		ldr	r3, [r7, #8]
 812 00f6 591C     		adds	r1, r3, #1
 813 00f8 B960     		str	r1, [r7, #8]
 814 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 815 00fc 5360     		str	r3, [r2, #4]
 816              	.L31:
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 817              		.loc 1 632 0 discriminator 1
 818 00fe FB68     		ldr	r3, [r7, #12]
 819 0100 DB8C     		ldrh	r3, [r3, #38]
 820 0102 002B     		cmp	r3, #0
 821 0104 BED1     		bne	.L37
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, Timeout) != HAL_OK)
 822              		.loc 1 662 0
 823 0106 F868     		ldr	r0, [r7, #12]
 824 0108 4021     		movs	r1, #64
 825 010a 0022     		movs	r2, #0
 826 010c 3B68     		ldr	r3, [r7]
 827 010e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 828 0112 0346     		mov	r3, r0
 829 0114 002B     		cmp	r3, #0
 830 0116 01D0     		beq	.L38
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 831              		.loc 1 664 0
 832 0118 0323     		movs	r3, #3
ARM GAS  /tmp/ccfrOaPN.s 			page 27


 833 011a 15E0     		b	.L27
 834              	.L38:
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a non-blocking receive process is ongoing or not */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 835              		.loc 1 668 0
 836 011c FB68     		ldr	r3, [r7, #12]
 837 011e 93F83930 		ldrb	r3, [r3, #57]
 838 0122 DBB2     		uxtb	r3, r3
 839 0124 322B     		cmp	r3, #50
 840 0126 04D1     		bne	.L39
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 841              		.loc 1 670 0
 842 0128 FB68     		ldr	r3, [r7, #12]
 843 012a 2222     		movs	r2, #34
 844 012c 83F83920 		strb	r2, [r3, #57]
 845 0130 03E0     		b	.L40
 846              	.L39:
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 847              		.loc 1 674 0
 848 0132 FB68     		ldr	r3, [r7, #12]
 849 0134 0122     		movs	r2, #1
 850 0136 83F83920 		strb	r2, [r3, #57]
 851              	.L40:
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 852              		.loc 1 678 0
 853 013a FB68     		ldr	r3, [r7, #12]
 854 013c 0022     		movs	r2, #0
 855 013e 83F83820 		strb	r2, [r3, #56]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 856              		.loc 1 680 0
 857 0142 0023     		movs	r3, #0
 858 0144 00E0     		b	.L27
 859              	.L24:
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 860              		.loc 1 684 0
 861 0146 0223     		movs	r3, #2
 862              	.L27:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 863              		.loc 1 686 0
 864 0148 1846     		mov	r0, r3
 865 014a 1837     		adds	r7, r7, #24
 866 014c BD46     		mov	sp, r7
 867              		@ sp needed
ARM GAS  /tmp/ccfrOaPN.s 			page 28


 868 014e 80BD     		pop	{r7, pc}
 869              		.cfi_endproc
 870              	.LFE132:
 872              		.section	.text.HAL_UART_Receive,"ax",%progbits
 873              		.align	2
 874              		.global	HAL_UART_Receive
 875              		.thumb
 876              		.thumb_func
 878              	HAL_UART_Receive:
 879              	.LFB133:
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 880              		.loc 1 698 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 24
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884 0000 80B5     		push	{r7, lr}
 885              	.LCFI24:
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0002 86B0     		sub	sp, sp, #24
 890              	.LCFI25:
 891              		.cfi_def_cfa_offset 32
 892 0004 00AF     		add	r7, sp, #0
 893              	.LCFI26:
 894              		.cfi_def_cfa_register 7
 895 0006 F860     		str	r0, [r7, #12]
 896 0008 B960     		str	r1, [r7, #8]
 897 000a 3B60     		str	r3, [r7]
 898 000c 1346     		mov	r3, r2	@ movhi
 899 000e FB80     		strh	r3, [r7, #6]	@ movhi
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp1 = 0;
 900              		.loc 1 700 0
 901 0010 0023     		movs	r3, #0
 902 0012 7B61     		str	r3, [r7, #20]
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = huart->State;
 903              		.loc 1 702 0
 904 0014 FB68     		ldr	r3, [r7, #12]
 905 0016 93F83930 		ldrb	r3, [r3, #57]
 906 001a DBB2     		uxtb	r3, r3
 907 001c 7B61     		str	r3, [r7, #20]
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_TX))
 908              		.loc 1 703 0
 909 001e 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccfrOaPN.s 			page 29


 910 0020 012B     		cmp	r3, #1
 911 0022 03D0     		beq	.L42
 912              		.loc 1 703 0 is_stmt 0 discriminator 1
 913 0024 7B69     		ldr	r3, [r7, #20]
 914 0026 122B     		cmp	r3, #18
 915 0028 40F09D80 		bne	.L43
 916              	.L42:
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 917              		.loc 1 705 0 is_stmt 1
 918 002c BB68     		ldr	r3, [r7, #8]
 919 002e 002B     		cmp	r3, #0
 920 0030 02D0     		beq	.L44
 921              		.loc 1 705 0 is_stmt 0 discriminator 1
 922 0032 FB88     		ldrh	r3, [r7, #6]
 923 0034 002B     		cmp	r3, #0
 924 0036 01D1     		bne	.L45
 925              	.L44:
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 926              		.loc 1 707 0 is_stmt 1
 927 0038 0123     		movs	r3, #1
 928 003a 95E0     		b	.L46
 929              	.L45:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 930              		.loc 1 711 0
 931 003c FB68     		ldr	r3, [r7, #12]
 932 003e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 933 0042 012B     		cmp	r3, #1
 934 0044 01D1     		bne	.L47
 935              		.loc 1 711 0 is_stmt 0 discriminator 1
 936 0046 0223     		movs	r3, #2
 937 0048 8EE0     		b	.L46
 938              	.L47:
 939              		.loc 1 711 0 discriminator 2
 940 004a FB68     		ldr	r3, [r7, #12]
 941 004c 0122     		movs	r2, #1
 942 004e 83F83820 		strb	r2, [r3, #56]
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 943              		.loc 1 713 0 is_stmt 1 discriminator 2
 944 0052 FB68     		ldr	r3, [r7, #12]
 945 0054 0022     		movs	r2, #0
 946 0056 DA63     		str	r2, [r3, #60]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX) 
 947              		.loc 1 715 0 discriminator 2
 948 0058 FB68     		ldr	r3, [r7, #12]
 949 005a 93F83930 		ldrb	r3, [r3, #57]
 950 005e DBB2     		uxtb	r3, r3
 951 0060 122B     		cmp	r3, #18
 952 0062 04D1     		bne	.L48
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
ARM GAS  /tmp/ccfrOaPN.s 			page 30


 953              		.loc 1 717 0
 954 0064 FB68     		ldr	r3, [r7, #12]
 955 0066 3222     		movs	r2, #50
 956 0068 83F83920 		strb	r2, [r3, #57]
 957 006c 03E0     		b	.L49
 958              	.L48:
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 959              		.loc 1 721 0
 960 006e FB68     		ldr	r3, [r7, #12]
 961 0070 2222     		movs	r2, #34
 962 0072 83F83920 		strb	r2, [r3, #57]
 963              	.L49:
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 964              		.loc 1 724 0
 965 0076 FB68     		ldr	r3, [r7, #12]
 966 0078 FA88     		ldrh	r2, [r7, #6]	@ movhi
 967 007a 9A85     		strh	r2, [r3, #44]	@ movhi
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 968              		.loc 1 725 0
 969 007c FB68     		ldr	r3, [r7, #12]
 970 007e FA88     		ldrh	r2, [r7, #6]	@ movhi
 971 0080 DA85     		strh	r2, [r3, #46]	@ movhi
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0)
 972              		.loc 1 728 0
 973 0082 57E0     		b	.L50
 974              	.L57:
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 975              		.loc 1 730 0
 976 0084 FB68     		ldr	r3, [r7, #12]
 977 0086 DB8D     		ldrh	r3, [r3, #46]
 978 0088 013B     		subs	r3, r3, #1
 979 008a 9AB2     		uxth	r2, r3
 980 008c FB68     		ldr	r3, [r7, #12]
 981 008e DA85     		strh	r2, [r3, #46]	@ movhi
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 982              		.loc 1 731 0
 983 0090 FB68     		ldr	r3, [r7, #12]
 984 0092 9B68     		ldr	r3, [r3, #8]
 985 0094 B3F5805F 		cmp	r3, #4096
 986 0098 29D1     		bne	.L51
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 987              		.loc 1 733 0
 988 009a F868     		ldr	r0, [r7, #12]
 989 009c 2021     		movs	r1, #32
 990 009e 0022     		movs	r2, #0
 991 00a0 3B68     		ldr	r3, [r7]
 992 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 993 00a6 0346     		mov	r3, r0
ARM GAS  /tmp/ccfrOaPN.s 			page 31


 994 00a8 002B     		cmp	r3, #0
 995 00aa 01D0     		beq	.L52
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 996              		.loc 1 735 0
 997 00ac 0323     		movs	r3, #3
 998 00ae 5BE0     		b	.L46
 999              	.L52:
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1000              		.loc 1 737 0
 1001 00b0 BB68     		ldr	r3, [r7, #8]
 1002 00b2 3B61     		str	r3, [r7, #16]
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1003              		.loc 1 738 0
 1004 00b4 FB68     		ldr	r3, [r7, #12]
 1005 00b6 1B69     		ldr	r3, [r3, #16]
 1006 00b8 002B     		cmp	r3, #0
 1007 00ba 0CD1     		bne	.L53
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1008              		.loc 1 740 0
 1009 00bc FB68     		ldr	r3, [r7, #12]
 1010 00be 1B68     		ldr	r3, [r3]
 1011 00c0 5B68     		ldr	r3, [r3, #4]
 1012 00c2 9BB2     		uxth	r3, r3
 1013 00c4 C3F30803 		ubfx	r3, r3, #0, #9
 1014 00c8 9AB2     		uxth	r2, r3
 1015 00ca 3B69     		ldr	r3, [r7, #16]
 1016 00cc 1A80     		strh	r2, [r3]	@ movhi
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2;
 1017              		.loc 1 741 0
 1018 00ce BB68     		ldr	r3, [r7, #8]
 1019 00d0 0233     		adds	r3, r3, #2
 1020 00d2 BB60     		str	r3, [r7, #8]
 1021 00d4 2EE0     		b	.L50
 1022              	.L53:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1023              		.loc 1 745 0
 1024 00d6 FB68     		ldr	r3, [r7, #12]
 1025 00d8 1B68     		ldr	r3, [r3]
 1026 00da 5B68     		ldr	r3, [r3, #4]
 1027 00dc 9BB2     		uxth	r3, r3
 1028 00de DBB2     		uxtb	r3, r3
 1029 00e0 9AB2     		uxth	r2, r3
 1030 00e2 3B69     		ldr	r3, [r7, #16]
 1031 00e4 1A80     		strh	r2, [r3]	@ movhi
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1;
 1032              		.loc 1 746 0
 1033 00e6 BB68     		ldr	r3, [r7, #8]
 1034 00e8 0133     		adds	r3, r3, #1
 1035 00ea BB60     		str	r3, [r7, #8]
 1036 00ec 22E0     		b	.L50
 1037              	.L51:
ARM GAS  /tmp/ccfrOaPN.s 			page 32


 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1038              		.loc 1 752 0
 1039 00ee F868     		ldr	r0, [r7, #12]
 1040 00f0 2021     		movs	r1, #32
 1041 00f2 0022     		movs	r2, #0
 1042 00f4 3B68     		ldr	r3, [r7]
 1043 00f6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1044 00fa 0346     		mov	r3, r0
 1045 00fc 002B     		cmp	r3, #0
 1046 00fe 01D0     		beq	.L55
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1047              		.loc 1 754 0
 1048 0100 0323     		movs	r3, #3
 1049 0102 31E0     		b	.L46
 1050              	.L55:
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1051              		.loc 1 756 0
 1052 0104 FB68     		ldr	r3, [r7, #12]
 1053 0106 1B69     		ldr	r3, [r3, #16]
 1054 0108 002B     		cmp	r3, #0
 1055 010a 08D1     		bne	.L56
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1056              		.loc 1 758 0
 1057 010c BB68     		ldr	r3, [r7, #8]
 1058 010e 5A1C     		adds	r2, r3, #1
 1059 0110 BA60     		str	r2, [r7, #8]
 1060 0112 FA68     		ldr	r2, [r7, #12]
 1061 0114 1268     		ldr	r2, [r2]
 1062 0116 5268     		ldr	r2, [r2, #4]
 1063 0118 D2B2     		uxtb	r2, r2
 1064 011a 1A70     		strb	r2, [r3]
 1065 011c 0AE0     		b	.L50
 1066              	.L56:
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1067              		.loc 1 762 0
 1068 011e BB68     		ldr	r3, [r7, #8]
 1069 0120 5A1C     		adds	r2, r3, #1
 1070 0122 BA60     		str	r2, [r7, #8]
 1071 0124 FA68     		ldr	r2, [r7, #12]
 1072 0126 1268     		ldr	r2, [r2]
 1073 0128 5268     		ldr	r2, [r2, #4]
 1074 012a D2B2     		uxtb	r2, r2
 1075 012c 02F07F02 		and	r2, r2, #127
 1076 0130 D2B2     		uxtb	r2, r2
 1077 0132 1A70     		strb	r2, [r3]
 1078              	.L50:
ARM GAS  /tmp/ccfrOaPN.s 			page 33


 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1079              		.loc 1 728 0 discriminator 1
 1080 0134 FB68     		ldr	r3, [r7, #12]
 1081 0136 DB8D     		ldrh	r3, [r3, #46]
 1082 0138 002B     		cmp	r3, #0
 1083 013a A3D1     		bne	.L57
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a non-blocking transmit process is ongoing or not */
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 1084              		.loc 1 769 0
 1085 013c FB68     		ldr	r3, [r7, #12]
 1086 013e 93F83930 		ldrb	r3, [r3, #57]
 1087 0142 DBB2     		uxtb	r3, r3
 1088 0144 322B     		cmp	r3, #50
 1089 0146 04D1     		bne	.L58
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1090              		.loc 1 771 0
 1091 0148 FB68     		ldr	r3, [r7, #12]
 1092 014a 1222     		movs	r2, #18
 1093 014c 83F83920 		strb	r2, [r3, #57]
 1094 0150 03E0     		b	.L59
 1095              	.L58:
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 1096              		.loc 1 775 0
 1097 0152 FB68     		ldr	r3, [r7, #12]
 1098 0154 0122     		movs	r2, #1
 1099 0156 83F83920 		strb	r2, [r3, #57]
 1100              	.L59:
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1101              		.loc 1 778 0
 1102 015a FB68     		ldr	r3, [r7, #12]
 1103 015c 0022     		movs	r2, #0
 1104 015e 83F83820 		strb	r2, [r3, #56]
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1105              		.loc 1 780 0
 1106 0162 0023     		movs	r3, #0
 1107 0164 00E0     		b	.L46
 1108              	.L43:
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 1109              		.loc 1 784 0
 1110 0166 0223     		movs	r3, #2
 1111              	.L46:
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccfrOaPN.s 			page 34


 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1112              		.loc 1 786 0
 1113 0168 1846     		mov	r0, r3
 1114 016a 1837     		adds	r7, r7, #24
 1115 016c BD46     		mov	sp, r7
 1116              		@ sp needed
 1117 016e 80BD     		pop	{r7, pc}
 1118              		.cfi_endproc
 1119              	.LFE133:
 1121              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1122              		.align	2
 1123              		.global	HAL_UART_Transmit_IT
 1124              		.thumb
 1125              		.thumb_func
 1127              	HAL_UART_Transmit_IT:
 1128              	.LFB134:
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1129              		.loc 1 797 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 24
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 1134 0000 80B4     		push	{r7}
 1135              	.LCFI27:
 1136              		.cfi_def_cfa_offset 4
 1137              		.cfi_offset 7, -4
 1138 0002 87B0     		sub	sp, sp, #28
 1139              	.LCFI28:
 1140              		.cfi_def_cfa_offset 32
 1141 0004 00AF     		add	r7, sp, #0
 1142              	.LCFI29:
 1143              		.cfi_def_cfa_register 7
 1144 0006 F860     		str	r0, [r7, #12]
 1145 0008 B960     		str	r1, [r7, #8]
 1146 000a 1346     		mov	r3, r2
 1147 000c FB80     		strh	r3, [r7, #6]	@ movhi
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp = 0;
 1148              		.loc 1 798 0
 1149 000e 0023     		movs	r3, #0
 1150 0010 7B61     		str	r3, [r7, #20]
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = huart->State;
 1151              		.loc 1 800 0
 1152 0012 FB68     		ldr	r3, [r7, #12]
 1153 0014 93F83930 		ldrb	r3, [r3, #57]
 1154 0018 DBB2     		uxtb	r3, r3
 1155 001a 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccfrOaPN.s 			page 35


 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp == HAL_UART_STATE_READY) || (tmp == HAL_UART_STATE_BUSY_RX))
 1156              		.loc 1 801 0
 1157 001c 7B69     		ldr	r3, [r7, #20]
 1158 001e 012B     		cmp	r3, #1
 1159 0020 02D0     		beq	.L61
 1160              		.loc 1 801 0 is_stmt 0 discriminator 1
 1161 0022 7B69     		ldr	r3, [r7, #20]
 1162 0024 222B     		cmp	r3, #34
 1163 0026 4BD1     		bne	.L62
 1164              	.L61:
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1165              		.loc 1 803 0 is_stmt 1
 1166 0028 BB68     		ldr	r3, [r7, #8]
 1167 002a 002B     		cmp	r3, #0
 1168 002c 02D0     		beq	.L63
 1169              		.loc 1 803 0 is_stmt 0 discriminator 1
 1170 002e FB88     		ldrh	r3, [r7, #6]
 1171 0030 002B     		cmp	r3, #0
 1172 0032 01D1     		bne	.L64
 1173              	.L63:
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1174              		.loc 1 805 0 is_stmt 1
 1175 0034 0123     		movs	r3, #1
 1176 0036 44E0     		b	.L65
 1177              	.L64:
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1178              		.loc 1 809 0
 1179 0038 FB68     		ldr	r3, [r7, #12]
 1180 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1181 003e 012B     		cmp	r3, #1
 1182 0040 01D1     		bne	.L66
 1183              		.loc 1 809 0 is_stmt 0 discriminator 1
 1184 0042 0223     		movs	r3, #2
 1185 0044 3DE0     		b	.L65
 1186              	.L66:
 1187              		.loc 1 809 0 discriminator 2
 1188 0046 FB68     		ldr	r3, [r7, #12]
 1189 0048 0122     		movs	r2, #1
 1190 004a 83F83820 		strb	r2, [r3, #56]
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1191              		.loc 1 811 0 is_stmt 1 discriminator 2
 1192 004e FB68     		ldr	r3, [r7, #12]
 1193 0050 BA68     		ldr	r2, [r7, #8]
 1194 0052 1A62     		str	r2, [r3, #32]
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1195              		.loc 1 812 0 discriminator 2
 1196 0054 FB68     		ldr	r3, [r7, #12]
 1197 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1198 0058 9A84     		strh	r2, [r3, #36]	@ movhi
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1199              		.loc 1 813 0 discriminator 2
ARM GAS  /tmp/ccfrOaPN.s 			page 36


 1200 005a FB68     		ldr	r3, [r7, #12]
 1201 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1202 005e DA84     		strh	r2, [r3, #38]	@ movhi
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1203              		.loc 1 815 0 discriminator 2
 1204 0060 FB68     		ldr	r3, [r7, #12]
 1205 0062 0022     		movs	r2, #0
 1206 0064 DA63     		str	r2, [r3, #60]
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 1207              		.loc 1 817 0 discriminator 2
 1208 0066 FB68     		ldr	r3, [r7, #12]
 1209 0068 93F83930 		ldrb	r3, [r3, #57]
 1210 006c DBB2     		uxtb	r3, r3
 1211 006e 222B     		cmp	r3, #34
 1212 0070 04D1     		bne	.L67
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1213              		.loc 1 819 0
 1214 0072 FB68     		ldr	r3, [r7, #12]
 1215 0074 3222     		movs	r2, #50
 1216 0076 83F83920 		strb	r2, [r3, #57]
 1217 007a 03E0     		b	.L68
 1218              	.L67:
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1219              		.loc 1 823 0
 1220 007c FB68     		ldr	r3, [r7, #12]
 1221 007e 1222     		movs	r2, #18
 1222 0080 83F83920 		strb	r2, [r3, #57]
 1223              	.L68:
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1224              		.loc 1 827 0
 1225 0084 FB68     		ldr	r3, [r7, #12]
 1226 0086 1B68     		ldr	r3, [r3]
 1227 0088 FA68     		ldr	r2, [r7, #12]
 1228 008a 1268     		ldr	r2, [r2]
 1229 008c D268     		ldr	r2, [r2, #12]
 1230 008e 42F48072 		orr	r2, r2, #256
 1231 0092 DA60     		str	r2, [r3, #12]
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1232              		.loc 1 830 0
 1233 0094 FB68     		ldr	r3, [r7, #12]
 1234 0096 1B68     		ldr	r3, [r3]
 1235 0098 FA68     		ldr	r2, [r7, #12]
 1236 009a 1268     		ldr	r2, [r2]
 1237 009c 5269     		ldr	r2, [r2, #20]
 1238 009e 42F00102 		orr	r2, r2, #1
 1239 00a2 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccfrOaPN.s 			page 37


 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1240              		.loc 1 833 0
 1241 00a4 FB68     		ldr	r3, [r7, #12]
 1242 00a6 0022     		movs	r2, #0
 1243 00a8 83F83820 		strb	r2, [r3, #56]
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1244              		.loc 1 836 0
 1245 00ac FB68     		ldr	r3, [r7, #12]
 1246 00ae 1B68     		ldr	r3, [r3]
 1247 00b0 FA68     		ldr	r2, [r7, #12]
 1248 00b2 1268     		ldr	r2, [r2]
 1249 00b4 D268     		ldr	r2, [r2, #12]
 1250 00b6 42F08002 		orr	r2, r2, #128
 1251 00ba DA60     		str	r2, [r3, #12]
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1252              		.loc 1 838 0
 1253 00bc 0023     		movs	r3, #0
 1254 00be 00E0     		b	.L65
 1255              	.L62:
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 1256              		.loc 1 842 0
 1257 00c0 0223     		movs	r3, #2
 1258              	.L65:
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1259              		.loc 1 844 0
 1260 00c2 1846     		mov	r0, r3
 1261 00c4 1C37     		adds	r7, r7, #28
 1262 00c6 BD46     		mov	sp, r7
 1263              		@ sp needed
 1264 00c8 5DF8047B 		ldr	r7, [sp], #4
 1265 00cc 7047     		bx	lr
 1266              		.cfi_endproc
 1267              	.LFE134:
 1269 00ce 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1270              		.align	2
 1271              		.global	HAL_UART_Receive_IT
 1272              		.thumb
 1273              		.thumb_func
 1275              	HAL_UART_Receive_IT:
 1276              	.LFB135:
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccfrOaPN.s 			page 38


 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1277              		.loc 1 855 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 24
 1280              		@ frame_needed = 1, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
 1282 0000 80B4     		push	{r7}
 1283              	.LCFI30:
 1284              		.cfi_def_cfa_offset 4
 1285              		.cfi_offset 7, -4
 1286 0002 87B0     		sub	sp, sp, #28
 1287              	.LCFI31:
 1288              		.cfi_def_cfa_offset 32
 1289 0004 00AF     		add	r7, sp, #0
 1290              	.LCFI32:
 1291              		.cfi_def_cfa_register 7
 1292 0006 F860     		str	r0, [r7, #12]
 1293 0008 B960     		str	r1, [r7, #8]
 1294 000a 1346     		mov	r3, r2
 1295 000c FB80     		strh	r3, [r7, #6]	@ movhi
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp = 0;
 1296              		.loc 1 856 0
 1297 000e 0023     		movs	r3, #0
 1298 0010 7B61     		str	r3, [r7, #20]
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = huart->State;  
 1299              		.loc 1 858 0
 1300 0012 FB68     		ldr	r3, [r7, #12]
 1301 0014 93F83930 		ldrb	r3, [r3, #57]
 1302 0018 DBB2     		uxtb	r3, r3
 1303 001a 7B61     		str	r3, [r7, #20]
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp == HAL_UART_STATE_READY) || (tmp == HAL_UART_STATE_BUSY_TX))
 1304              		.loc 1 859 0
 1305 001c 7B69     		ldr	r3, [r7, #20]
 1306 001e 012B     		cmp	r3, #1
 1307 0020 02D0     		beq	.L70
 1308              		.loc 1 859 0 is_stmt 0 discriminator 1
 1309 0022 7B69     		ldr	r3, [r7, #20]
 1310 0024 122B     		cmp	r3, #18
 1311 0026 4BD1     		bne	.L71
 1312              	.L70:
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1313              		.loc 1 861 0 is_stmt 1
 1314 0028 BB68     		ldr	r3, [r7, #8]
 1315 002a 002B     		cmp	r3, #0
 1316 002c 02D0     		beq	.L72
 1317              		.loc 1 861 0 is_stmt 0 discriminator 1
 1318 002e FB88     		ldrh	r3, [r7, #6]
 1319 0030 002B     		cmp	r3, #0
 1320 0032 01D1     		bne	.L73
 1321              	.L72:
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1322              		.loc 1 863 0 is_stmt 1
ARM GAS  /tmp/ccfrOaPN.s 			page 39


 1323 0034 0123     		movs	r3, #1
 1324 0036 44E0     		b	.L74
 1325              	.L73:
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1326              		.loc 1 867 0
 1327 0038 FB68     		ldr	r3, [r7, #12]
 1328 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1329 003e 012B     		cmp	r3, #1
 1330 0040 01D1     		bne	.L75
 1331              		.loc 1 867 0 is_stmt 0 discriminator 1
 1332 0042 0223     		movs	r3, #2
 1333 0044 3DE0     		b	.L74
 1334              	.L75:
 1335              		.loc 1 867 0 discriminator 2
 1336 0046 FB68     		ldr	r3, [r7, #12]
 1337 0048 0122     		movs	r2, #1
 1338 004a 83F83820 		strb	r2, [r3, #56]
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1339              		.loc 1 869 0 is_stmt 1 discriminator 2
 1340 004e FB68     		ldr	r3, [r7, #12]
 1341 0050 BA68     		ldr	r2, [r7, #8]
 1342 0052 9A62     		str	r2, [r3, #40]
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1343              		.loc 1 870 0 discriminator 2
 1344 0054 FB68     		ldr	r3, [r7, #12]
 1345 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1346 0058 9A85     		strh	r2, [r3, #44]	@ movhi
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1347              		.loc 1 871 0 discriminator 2
 1348 005a FB68     		ldr	r3, [r7, #12]
 1349 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1350 005e DA85     		strh	r2, [r3, #46]	@ movhi
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1351              		.loc 1 873 0 discriminator 2
 1352 0060 FB68     		ldr	r3, [r7, #12]
 1353 0062 0022     		movs	r2, #0
 1354 0064 DA63     		str	r2, [r3, #60]
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX) 
 1355              		.loc 1 875 0 discriminator 2
 1356 0066 FB68     		ldr	r3, [r7, #12]
 1357 0068 93F83930 		ldrb	r3, [r3, #57]
 1358 006c DBB2     		uxtb	r3, r3
 1359 006e 122B     		cmp	r3, #18
 1360 0070 04D1     		bne	.L76
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1361              		.loc 1 877 0
 1362 0072 FB68     		ldr	r3, [r7, #12]
 1363 0074 3222     		movs	r2, #50
 1364 0076 83F83920 		strb	r2, [r3, #57]
 1365 007a 03E0     		b	.L77
ARM GAS  /tmp/ccfrOaPN.s 			page 40


 1366              	.L76:
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 1367              		.loc 1 881 0
 1368 007c FB68     		ldr	r3, [r7, #12]
 1369 007e 2222     		movs	r2, #34
 1370 0080 83F83920 		strb	r2, [r3, #57]
 1371              	.L77:
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1372              		.loc 1 885 0
 1373 0084 FB68     		ldr	r3, [r7, #12]
 1374 0086 1B68     		ldr	r3, [r3]
 1375 0088 FA68     		ldr	r2, [r7, #12]
 1376 008a 1268     		ldr	r2, [r2]
 1377 008c D268     		ldr	r2, [r2, #12]
 1378 008e 42F48072 		orr	r2, r2, #256
 1379 0092 DA60     		str	r2, [r3, #12]
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1380              		.loc 1 888 0
 1381 0094 FB68     		ldr	r3, [r7, #12]
 1382 0096 1B68     		ldr	r3, [r3]
 1383 0098 FA68     		ldr	r2, [r7, #12]
 1384 009a 1268     		ldr	r2, [r2]
 1385 009c 5269     		ldr	r2, [r2, #20]
 1386 009e 42F00102 		orr	r2, r2, #1
 1387 00a2 5A61     		str	r2, [r3, #20]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1388              		.loc 1 891 0
 1389 00a4 FB68     		ldr	r3, [r7, #12]
 1390 00a6 0022     		movs	r2, #0
 1391 00a8 83F83820 		strb	r2, [r3, #56]
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1392              		.loc 1 894 0
 1393 00ac FB68     		ldr	r3, [r7, #12]
 1394 00ae 1B68     		ldr	r3, [r3]
 1395 00b0 FA68     		ldr	r2, [r7, #12]
 1396 00b2 1268     		ldr	r2, [r2]
 1397 00b4 D268     		ldr	r2, [r2, #12]
 1398 00b6 42F02002 		orr	r2, r2, #32
 1399 00ba DA60     		str	r2, [r3, #12]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1400              		.loc 1 896 0
 1401 00bc 0023     		movs	r3, #0
 1402 00be 00E0     		b	.L74
 1403              	.L71:
ARM GAS  /tmp/ccfrOaPN.s 			page 41


 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 1404              		.loc 1 900 0
 1405 00c0 0223     		movs	r3, #2
 1406              	.L74:
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1407              		.loc 1 902 0
 1408 00c2 1846     		mov	r0, r3
 1409 00c4 1C37     		adds	r7, r7, #28
 1410 00c6 BD46     		mov	sp, r7
 1411              		@ sp needed
 1412 00c8 5DF8047B 		ldr	r7, [sp], #4
 1413 00cc 7047     		bx	lr
 1414              		.cfi_endproc
 1415              	.LFE135:
 1417 00ce 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1418              		.align	2
 1419              		.global	HAL_UART_Transmit_DMA
 1420              		.thumb
 1421              		.thumb_func
 1423              	HAL_UART_Transmit_DMA:
 1424              	.LFB136:
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1425              		.loc 1 913 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 24
 1428              		@ frame_needed = 1, uses_anonymous_args = 0
 1429 0000 80B5     		push	{r7, lr}
 1430              	.LCFI33:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 86B0     		sub	sp, sp, #24
 1435              	.LCFI34:
 1436              		.cfi_def_cfa_offset 32
 1437 0004 00AF     		add	r7, sp, #0
 1438              	.LCFI35:
 1439              		.cfi_def_cfa_register 7
 1440 0006 F860     		str	r0, [r7, #12]
 1441 0008 B960     		str	r1, [r7, #8]
 1442 000a 1346     		mov	r3, r2
 1443 000c FB80     		strh	r3, [r7, #6]	@ movhi
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp1 = 0;
ARM GAS  /tmp/ccfrOaPN.s 			page 42


 1444              		.loc 1 915 0
 1445 000e 0023     		movs	r3, #0
 1446 0010 7B61     		str	r3, [r7, #20]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = huart->State;  
 1447              		.loc 1 917 0
 1448 0012 FB68     		ldr	r3, [r7, #12]
 1449 0014 93F83930 		ldrb	r3, [r3, #57]
 1450 0018 DBB2     		uxtb	r3, r3
 1451 001a 7B61     		str	r3, [r7, #20]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_RX))
 1452              		.loc 1 918 0
 1453 001c 7B69     		ldr	r3, [r7, #20]
 1454 001e 012B     		cmp	r3, #1
 1455 0020 02D0     		beq	.L79
 1456              		.loc 1 918 0 is_stmt 0 discriminator 1
 1457 0022 7B69     		ldr	r3, [r7, #20]
 1458 0024 222B     		cmp	r3, #34
 1459 0026 5AD1     		bne	.L80
 1460              	.L79:
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1461              		.loc 1 920 0 is_stmt 1
 1462 0028 BB68     		ldr	r3, [r7, #8]
 1463 002a 002B     		cmp	r3, #0
 1464 002c 02D0     		beq	.L81
 1465              		.loc 1 920 0 is_stmt 0 discriminator 1
 1466 002e FB88     		ldrh	r3, [r7, #6]
 1467 0030 002B     		cmp	r3, #0
 1468 0032 01D1     		bne	.L82
 1469              	.L81:
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1470              		.loc 1 922 0 is_stmt 1
 1471 0034 0123     		movs	r3, #1
 1472 0036 53E0     		b	.L83
 1473              	.L82:
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1474              		.loc 1 926 0
 1475 0038 FB68     		ldr	r3, [r7, #12]
 1476 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1477 003e 012B     		cmp	r3, #1
 1478 0040 01D1     		bne	.L84
 1479              		.loc 1 926 0 is_stmt 0 discriminator 1
 1480 0042 0223     		movs	r3, #2
 1481 0044 4CE0     		b	.L83
 1482              	.L84:
 1483              		.loc 1 926 0 discriminator 2
 1484 0046 FB68     		ldr	r3, [r7, #12]
 1485 0048 0122     		movs	r2, #1
 1486 004a 83F83820 		strb	r2, [r3, #56]
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1487              		.loc 1 928 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccfrOaPN.s 			page 43


 1488 004e BA68     		ldr	r2, [r7, #8]
 1489 0050 FB68     		ldr	r3, [r7, #12]
 1490 0052 1A62     		str	r2, [r3, #32]
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1491              		.loc 1 929 0 discriminator 2
 1492 0054 FB68     		ldr	r3, [r7, #12]
 1493 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1494 0058 9A84     		strh	r2, [r3, #36]	@ movhi
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1495              		.loc 1 930 0 discriminator 2
 1496 005a FB68     		ldr	r3, [r7, #12]
 1497 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1498 005e DA84     		strh	r2, [r3, #38]	@ movhi
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1499              		.loc 1 932 0 discriminator 2
 1500 0060 FB68     		ldr	r3, [r7, #12]
 1501 0062 0022     		movs	r2, #0
 1502 0064 DA63     		str	r2, [r3, #60]
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a receive process is ongoing or not */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_RX) 
 1503              		.loc 1 934 0 discriminator 2
 1504 0066 FB68     		ldr	r3, [r7, #12]
 1505 0068 93F83930 		ldrb	r3, [r3, #57]
 1506 006c DBB2     		uxtb	r3, r3
 1507 006e 222B     		cmp	r3, #34
 1508 0070 04D1     		bne	.L85
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1509              		.loc 1 936 0
 1510 0072 FB68     		ldr	r3, [r7, #12]
 1511 0074 3222     		movs	r2, #50
 1512 0076 83F83920 		strb	r2, [r3, #57]
 1513 007a 03E0     		b	.L86
 1514              	.L85:
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 1515              		.loc 1 940 0
 1516 007c FB68     		ldr	r3, [r7, #12]
 1517 007e 1222     		movs	r2, #18
 1518 0080 83F83920 		strb	r2, [r3, #57]
 1519              	.L86:
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1520              		.loc 1 944 0
 1521 0084 FB68     		ldr	r3, [r7, #12]
 1522 0086 1B6B     		ldr	r3, [r3, #48]
 1523 0088 174A     		ldr	r2, .L87
 1524 008a DA63     		str	r2, [r3, #60]
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1525              		.loc 1 947 0
ARM GAS  /tmp/ccfrOaPN.s 			page 44


 1526 008c FB68     		ldr	r3, [r7, #12]
 1527 008e 1B6B     		ldr	r3, [r3, #48]
 1528 0090 164A     		ldr	r2, .L87+4
 1529 0092 1A64     		str	r2, [r3, #64]
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1530              		.loc 1 950 0
 1531 0094 FB68     		ldr	r3, [r7, #12]
 1532 0096 1B6B     		ldr	r3, [r3, #48]
 1533 0098 154A     		ldr	r2, .L87+8
 1534 009a 9A64     		str	r2, [r3, #72]
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1535              		.loc 1 953 0
 1536 009c 07F10803 		add	r3, r7, #8
 1537 00a0 3B61     		str	r3, [r7, #16]
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 1538              		.loc 1 954 0
 1539 00a2 FB68     		ldr	r3, [r7, #12]
 1540 00a4 186B     		ldr	r0, [r3, #48]
 1541 00a6 3B69     		ldr	r3, [r7, #16]
 1542 00a8 1968     		ldr	r1, [r3]
 1543 00aa FB68     		ldr	r3, [r7, #12]
 1544 00ac 1B68     		ldr	r3, [r3]
 1545 00ae 0433     		adds	r3, r3, #4
 1546 00b0 1A46     		mov	r2, r3
 1547 00b2 FB88     		ldrh	r3, [r7, #6]
 1548 00b4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1549              		.loc 1 957 0
 1550 00b8 FB68     		ldr	r3, [r7, #12]
 1551 00ba 1B68     		ldr	r3, [r3]
 1552 00bc 6FF04002 		mvn	r2, #64
 1553 00c0 1A60     		str	r2, [r3]
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
 1554              		.loc 1 961 0
 1555 00c2 FB68     		ldr	r3, [r7, #12]
 1556 00c4 1B68     		ldr	r3, [r3]
 1557 00c6 FA68     		ldr	r2, [r7, #12]
 1558 00c8 1268     		ldr	r2, [r2]
 1559 00ca 5269     		ldr	r2, [r2, #20]
 1560 00cc 42F08002 		orr	r2, r2, #128
 1561 00d0 5A61     		str	r2, [r3, #20]
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1562              		.loc 1 964 0
 1563 00d2 FB68     		ldr	r3, [r7, #12]
 1564 00d4 0022     		movs	r2, #0
 1565 00d6 83F83820 		strb	r2, [r3, #56]
ARM GAS  /tmp/ccfrOaPN.s 			page 45


 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1566              		.loc 1 966 0
 1567 00da 0023     		movs	r3, #0
 1568 00dc 00E0     		b	.L83
 1569              	.L80:
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 1570              		.loc 1 970 0
 1571 00de 0223     		movs	r3, #2
 1572              	.L83:
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1573              		.loc 1 972 0
 1574 00e0 1846     		mov	r0, r3
 1575 00e2 1837     		adds	r7, r7, #24
 1576 00e4 BD46     		mov	sp, r7
 1577              		@ sp needed
 1578 00e6 80BD     		pop	{r7, pc}
 1579              	.L88:
 1580              		.align	2
 1581              	.L87:
 1582 00e8 00000000 		.word	UART_DMATransmitCplt
 1583 00ec 00000000 		.word	UART_DMATxHalfCplt
 1584 00f0 00000000 		.word	UART_DMAError
 1585              		.cfi_endproc
 1586              	.LFE136:
 1588              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1589              		.align	2
 1590              		.global	HAL_UART_Receive_DMA
 1591              		.thumb
 1592              		.thumb_func
 1594              	HAL_UART_Receive_DMA:
 1595              	.LFB137:
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1596              		.loc 1 984 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 24
 1599              		@ frame_needed = 1, uses_anonymous_args = 0
 1600 0000 80B5     		push	{r7, lr}
 1601              	.LCFI36:
 1602              		.cfi_def_cfa_offset 8
 1603              		.cfi_offset 7, -8
 1604              		.cfi_offset 14, -4
ARM GAS  /tmp/ccfrOaPN.s 			page 46


 1605 0002 86B0     		sub	sp, sp, #24
 1606              	.LCFI37:
 1607              		.cfi_def_cfa_offset 32
 1608 0004 00AF     		add	r7, sp, #0
 1609              	.LCFI38:
 1610              		.cfi_def_cfa_register 7
 1611 0006 F860     		str	r0, [r7, #12]
 1612 0008 B960     		str	r1, [r7, #8]
 1613 000a 1346     		mov	r3, r2
 1614 000c FB80     		strh	r3, [r7, #6]	@ movhi
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp1 = 0;
 1615              		.loc 1 986 0
 1616 000e 0023     		movs	r3, #0
 1617 0010 7B61     		str	r3, [r7, #20]
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = huart->State;    
 1618              		.loc 1 988 0
 1619 0012 FB68     		ldr	r3, [r7, #12]
 1620 0014 93F83930 		ldrb	r3, [r3, #57]
 1621 0018 DBB2     		uxtb	r3, r3
 1622 001a 7B61     		str	r3, [r7, #20]
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_TX))
 1623              		.loc 1 989 0
 1624 001c 7B69     		ldr	r3, [r7, #20]
 1625 001e 012B     		cmp	r3, #1
 1626 0020 02D0     		beq	.L90
 1627              		.loc 1 989 0 is_stmt 0 discriminator 1
 1628 0022 7B69     		ldr	r3, [r7, #20]
 1629 0024 122B     		cmp	r3, #18
 1630 0026 52D1     		bne	.L91
 1631              	.L90:
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 1632              		.loc 1 991 0 is_stmt 1
 1633 0028 BB68     		ldr	r3, [r7, #8]
 1634 002a 002B     		cmp	r3, #0
 1635 002c 02D0     		beq	.L92
 1636              		.loc 1 991 0 is_stmt 0 discriminator 1
 1637 002e FB88     		ldrh	r3, [r7, #6]
 1638 0030 002B     		cmp	r3, #0
 1639 0032 01D1     		bne	.L93
 1640              	.L92:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1641              		.loc 1 993 0 is_stmt 1
 1642 0034 0123     		movs	r3, #1
 1643 0036 4BE0     		b	.L94
 1644              	.L93:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1645              		.loc 1 997 0
 1646 0038 FB68     		ldr	r3, [r7, #12]
 1647 003a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1648 003e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccfrOaPN.s 			page 47


 1649 0040 01D1     		bne	.L95
 1650              		.loc 1 997 0 is_stmt 0 discriminator 1
 1651 0042 0223     		movs	r3, #2
 1652 0044 44E0     		b	.L94
 1653              	.L95:
 1654              		.loc 1 997 0 discriminator 2
 1655 0046 FB68     		ldr	r3, [r7, #12]
 1656 0048 0122     		movs	r2, #1
 1657 004a 83F83820 		strb	r2, [r3, #56]
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1658              		.loc 1 999 0 is_stmt 1 discriminator 2
 1659 004e BA68     		ldr	r2, [r7, #8]
 1660 0050 FB68     		ldr	r3, [r7, #12]
 1661 0052 9A62     		str	r2, [r3, #40]
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1662              		.loc 1 1000 0 discriminator 2
 1663 0054 FB68     		ldr	r3, [r7, #12]
 1664 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1665 0058 9A85     		strh	r2, [r3, #44]	@ movhi
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1666              		.loc 1 1002 0 discriminator 2
 1667 005a FB68     		ldr	r3, [r7, #12]
 1668 005c 0022     		movs	r2, #0
 1669 005e DA63     		str	r2, [r3, #60]
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX) 
 1670              		.loc 1 1004 0 discriminator 2
 1671 0060 FB68     		ldr	r3, [r7, #12]
 1672 0062 93F83930 		ldrb	r3, [r3, #57]
 1673 0066 DBB2     		uxtb	r3, r3
 1674 0068 122B     		cmp	r3, #18
 1675 006a 04D1     		bne	.L96
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX_RX;
 1676              		.loc 1 1006 0
 1677 006c FB68     		ldr	r3, [r7, #12]
 1678 006e 3222     		movs	r2, #50
 1679 0070 83F83920 		strb	r2, [r3, #57]
 1680 0074 03E0     		b	.L97
 1681              	.L96:
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_RX;
 1682              		.loc 1 1010 0
 1683 0076 FB68     		ldr	r3, [r7, #12]
 1684 0078 2222     		movs	r2, #34
 1685 007a 83F83920 		strb	r2, [r3, #57]
 1686              	.L97:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1687              		.loc 1 1014 0
 1688 007e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccfrOaPN.s 			page 48


 1689 0080 5B6B     		ldr	r3, [r3, #52]
 1690 0082 154A     		ldr	r2, .L98
 1691 0084 DA63     		str	r2, [r3, #60]
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1692              		.loc 1 1017 0
 1693 0086 FB68     		ldr	r3, [r7, #12]
 1694 0088 5B6B     		ldr	r3, [r3, #52]
 1695 008a 144A     		ldr	r2, .L98+4
 1696 008c 1A64     		str	r2, [r3, #64]
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1697              		.loc 1 1020 0
 1698 008e FB68     		ldr	r3, [r7, #12]
 1699 0090 5B6B     		ldr	r3, [r3, #52]
 1700 0092 134A     		ldr	r2, .L98+8
 1701 0094 9A64     		str	r2, [r3, #72]
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1702              		.loc 1 1023 0
 1703 0096 07F10803 		add	r3, r7, #8
 1704 009a 3B61     		str	r3, [r7, #16]
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 1705              		.loc 1 1024 0
 1706 009c FB68     		ldr	r3, [r7, #12]
 1707 009e 586B     		ldr	r0, [r3, #52]
 1708 00a0 FB68     		ldr	r3, [r7, #12]
 1709 00a2 1B68     		ldr	r3, [r3]
 1710 00a4 0433     		adds	r3, r3, #4
 1711 00a6 1946     		mov	r1, r3
 1712 00a8 3B69     		ldr	r3, [r7, #16]
 1713 00aa 1A68     		ldr	r2, [r3]
 1714 00ac FB88     		ldrh	r3, [r7, #6]
 1715 00ae FFF7FEFF 		bl	HAL_DMA_Start_IT
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAR;
 1716              		.loc 1 1028 0
 1717 00b2 FB68     		ldr	r3, [r7, #12]
 1718 00b4 1B68     		ldr	r3, [r3]
 1719 00b6 FA68     		ldr	r2, [r7, #12]
 1720 00b8 1268     		ldr	r2, [r2]
 1721 00ba 5269     		ldr	r2, [r2, #20]
 1722 00bc 42F04002 		orr	r2, r2, #64
 1723 00c0 5A61     		str	r2, [r3, #20]
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1724              		.loc 1 1031 0
 1725 00c2 FB68     		ldr	r3, [r7, #12]
 1726 00c4 0022     		movs	r2, #0
 1727 00c6 83F83820 		strb	r2, [r3, #56]
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
ARM GAS  /tmp/ccfrOaPN.s 			page 49


1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1728              		.loc 1 1033 0
 1729 00ca 0023     		movs	r3, #0
 1730 00cc 00E0     		b	.L94
 1731              	.L91:
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 1732              		.loc 1 1037 0
 1733 00ce 0223     		movs	r3, #2
 1734              	.L94:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1735              		.loc 1 1039 0
 1736 00d0 1846     		mov	r0, r3
 1737 00d2 1837     		adds	r7, r7, #24
 1738 00d4 BD46     		mov	sp, r7
 1739              		@ sp needed
 1740 00d6 80BD     		pop	{r7, pc}
 1741              	.L99:
 1742              		.align	2
 1743              	.L98:
 1744 00d8 00000000 		.word	UART_DMAReceiveCplt
 1745 00dc 00000000 		.word	UART_DMARxHalfCplt
 1746 00e0 00000000 		.word	UART_DMAError
 1747              		.cfi_endproc
 1748              	.LFE137:
 1750              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1751              		.align	2
 1752              		.global	HAL_UART_DMAPause
 1753              		.thumb
 1754              		.thumb_func
 1756              	HAL_UART_DMAPause:
 1757              	.LFB138:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1758              		.loc 1 1048 0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 8
 1761              		@ frame_needed = 1, uses_anonymous_args = 0
 1762              		@ link register save eliminated.
 1763 0000 80B4     		push	{r7}
 1764              	.LCFI39:
 1765              		.cfi_def_cfa_offset 4
 1766              		.cfi_offset 7, -4
 1767 0002 83B0     		sub	sp, sp, #12
 1768              	.LCFI40:
 1769              		.cfi_def_cfa_offset 16
 1770 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccfrOaPN.s 			page 50


 1771              	.LCFI41:
 1772              		.cfi_def_cfa_register 7
 1773 0006 7860     		str	r0, [r7, #4]
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1774              		.loc 1 1050 0
 1775 0008 7B68     		ldr	r3, [r7, #4]
 1776 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1777 000e 012B     		cmp	r3, #1
 1778 0010 01D1     		bne	.L101
 1779              		.loc 1 1050 0 is_stmt 0 discriminator 1
 1780 0012 0223     		movs	r3, #2
 1781 0014 3CE0     		b	.L102
 1782              	.L101:
 1783              		.loc 1 1050 0 discriminator 2
 1784 0016 7B68     		ldr	r3, [r7, #4]
 1785 0018 0122     		movs	r2, #1
 1786 001a 83F83820 		strb	r2, [r3, #56]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
 1787              		.loc 1 1052 0 is_stmt 1 discriminator 2
 1788 001e 7B68     		ldr	r3, [r7, #4]
 1789 0020 93F83930 		ldrb	r3, [r3, #57]
 1790 0024 DBB2     		uxtb	r3, r3
 1791 0026 122B     		cmp	r3, #18
 1792 0028 08D1     		bne	.L103
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAT);
 1793              		.loc 1 1055 0
 1794 002a 7B68     		ldr	r3, [r7, #4]
 1795 002c 1B68     		ldr	r3, [r3]
 1796 002e 7A68     		ldr	r2, [r7, #4]
 1797 0030 1268     		ldr	r2, [r2]
 1798 0032 5269     		ldr	r2, [r2, #20]
 1799 0034 22F08002 		bic	r2, r2, #128
 1800 0038 5A61     		str	r2, [r3, #20]
 1801 003a 24E0     		b	.L104
 1802              	.L103:
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
 1803              		.loc 1 1057 0
 1804 003c 7B68     		ldr	r3, [r7, #4]
 1805 003e 93F83930 		ldrb	r3, [r3, #57]
 1806 0042 DBB2     		uxtb	r3, r3
 1807 0044 222B     		cmp	r3, #34
 1808 0046 08D1     		bne	.L105
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAR);
 1809              		.loc 1 1060 0
 1810 0048 7B68     		ldr	r3, [r7, #4]
 1811 004a 1B68     		ldr	r3, [r3]
 1812 004c 7A68     		ldr	r2, [r7, #4]
 1813 004e 1268     		ldr	r2, [r2]
 1814 0050 5269     		ldr	r2, [r2, #20]
 1815 0052 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/ccfrOaPN.s 			page 51


 1816 0056 5A61     		str	r2, [r3, #20]
 1817 0058 15E0     		b	.L104
 1818              	.L105:
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->State == HAL_UART_STATE_BUSY_TX_RX)
 1819              		.loc 1 1062 0
 1820 005a 7B68     		ldr	r3, [r7, #4]
 1821 005c 93F83930 		ldrb	r3, [r3, #57]
 1822 0060 DBB2     		uxtb	r3, r3
 1823 0062 322B     		cmp	r3, #50
 1824 0064 0FD1     		bne	.L104
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx & Rx requests */
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAT);
 1825              		.loc 1 1065 0
 1826 0066 7B68     		ldr	r3, [r7, #4]
 1827 0068 1B68     		ldr	r3, [r3]
 1828 006a 7A68     		ldr	r2, [r7, #4]
 1829 006c 1268     		ldr	r2, [r2]
 1830 006e 5269     		ldr	r2, [r2, #20]
 1831 0070 22F08002 		bic	r2, r2, #128
 1832 0074 5A61     		str	r2, [r3, #20]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)(~USART_CR3_DMAR);
 1833              		.loc 1 1066 0
 1834 0076 7B68     		ldr	r3, [r7, #4]
 1835 0078 1B68     		ldr	r3, [r3]
 1836 007a 7A68     		ldr	r2, [r7, #4]
 1837 007c 1268     		ldr	r2, [r2]
 1838 007e 5269     		ldr	r2, [r2, #20]
 1839 0080 22F04002 		bic	r2, r2, #64
 1840 0084 5A61     		str	r2, [r3, #20]
 1841              	.L104:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1842              		.loc 1 1070 0
 1843 0086 7B68     		ldr	r3, [r7, #4]
 1844 0088 0022     		movs	r2, #0
 1845 008a 83F83820 		strb	r2, [r3, #56]
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 1846              		.loc 1 1072 0
 1847 008e 0023     		movs	r3, #0
 1848              	.L102:
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1849              		.loc 1 1073 0
 1850 0090 1846     		mov	r0, r3
 1851 0092 0C37     		adds	r7, r7, #12
 1852 0094 BD46     		mov	sp, r7
 1853              		@ sp needed
 1854 0096 5DF8047B 		ldr	r7, [sp], #4
 1855 009a 7047     		bx	lr
 1856              		.cfi_endproc
 1857              	.LFE138:
 1859              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1860              		.align	2
ARM GAS  /tmp/ccfrOaPN.s 			page 52


 1861              		.global	HAL_UART_DMAResume
 1862              		.thumb
 1863              		.thumb_func
 1865              	HAL_UART_DMAResume:
 1866              	.LFB139:
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1867              		.loc 1 1082 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 16
 1870              		@ frame_needed = 1, uses_anonymous_args = 0
 1871              		@ link register save eliminated.
 1872 0000 80B4     		push	{r7}
 1873              	.LCFI42:
 1874              		.cfi_def_cfa_offset 4
 1875              		.cfi_offset 7, -4
 1876 0002 85B0     		sub	sp, sp, #20
 1877              	.LCFI43:
 1878              		.cfi_def_cfa_offset 24
 1879 0004 00AF     		add	r7, sp, #0
 1880              	.LCFI44:
 1881              		.cfi_def_cfa_register 7
 1882 0006 7860     		str	r0, [r7, #4]
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1883              		.loc 1 1084 0
 1884 0008 7B68     		ldr	r3, [r7, #4]
 1885 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1886 000e 012B     		cmp	r3, #1
 1887 0010 01D1     		bne	.L107
 1888              		.loc 1 1084 0 is_stmt 0 discriminator 1
 1889 0012 0223     		movs	r3, #2
 1890 0014 4EE0     		b	.L108
 1891              	.L107:
 1892              		.loc 1 1084 0 discriminator 2
 1893 0016 7B68     		ldr	r3, [r7, #4]
 1894 0018 0122     		movs	r2, #1
 1895 001a 83F83820 		strb	r2, [r3, #56]
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX)
 1896              		.loc 1 1086 0 is_stmt 1 discriminator 2
 1897 001e 7B68     		ldr	r3, [r7, #4]
 1898 0020 93F83930 		ldrb	r3, [r3, #57]
 1899 0024 DBB2     		uxtb	r3, r3
 1900 0026 122B     		cmp	r3, #18
 1901 0028 08D1     		bne	.L109
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
 1902              		.loc 1 1089 0
ARM GAS  /tmp/ccfrOaPN.s 			page 53


 1903 002a 7B68     		ldr	r3, [r7, #4]
 1904 002c 1B68     		ldr	r3, [r3]
 1905 002e 7A68     		ldr	r2, [r7, #4]
 1906 0030 1268     		ldr	r2, [r2]
 1907 0032 5269     		ldr	r2, [r2, #20]
 1908 0034 42F08002 		orr	r2, r2, #128
 1909 0038 5A61     		str	r2, [r3, #20]
 1910 003a 36E0     		b	.L110
 1911              	.L109:
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_RX)
 1912              		.loc 1 1091 0
 1913 003c 7B68     		ldr	r3, [r7, #4]
 1914 003e 93F83930 		ldrb	r3, [r3, #57]
 1915 0042 DBB2     		uxtb	r3, r3
 1916 0044 222B     		cmp	r3, #34
 1917 0046 11D1     		bne	.L111
 1918              	.LBB2:
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1919              		.loc 1 1094 0
 1920 0048 7B68     		ldr	r3, [r7, #4]
 1921 004a 1B68     		ldr	r3, [r3]
 1922 004c 1B68     		ldr	r3, [r3]
 1923 004e FB60     		str	r3, [r7, #12]
 1924 0050 7B68     		ldr	r3, [r7, #4]
 1925 0052 1B68     		ldr	r3, [r3]
 1926 0054 5B68     		ldr	r3, [r3, #4]
 1927 0056 FB60     		str	r3, [r7, #12]
 1928 0058 FB68     		ldr	r3, [r7, #12]
 1929              	.LBE2:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAR;
 1930              		.loc 1 1096 0
 1931 005a 7B68     		ldr	r3, [r7, #4]
 1932 005c 1B68     		ldr	r3, [r3]
 1933 005e 7A68     		ldr	r2, [r7, #4]
 1934 0060 1268     		ldr	r2, [r2]
 1935 0062 5269     		ldr	r2, [r2, #20]
 1936 0064 42F04002 		orr	r2, r2, #64
 1937 0068 5A61     		str	r2, [r3, #20]
 1938 006a 1EE0     		b	.L110
 1939              	.L111:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if(huart->State == HAL_UART_STATE_BUSY_TX_RX)
 1940              		.loc 1 1098 0
 1941 006c 7B68     		ldr	r3, [r7, #4]
 1942 006e 93F83930 		ldrb	r3, [r3, #57]
 1943 0072 DBB2     		uxtb	r3, r3
 1944 0074 322B     		cmp	r3, #50
 1945 0076 18D1     		bne	.L110
 1946              	.LBB3:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1947              		.loc 1 1101 0
ARM GAS  /tmp/ccfrOaPN.s 			page 54


 1948 0078 7B68     		ldr	r3, [r7, #4]
 1949 007a 1B68     		ldr	r3, [r3]
 1950 007c 1B68     		ldr	r3, [r3]
 1951 007e BB60     		str	r3, [r7, #8]
 1952 0080 7B68     		ldr	r3, [r7, #4]
 1953 0082 1B68     		ldr	r3, [r3]
 1954 0084 5B68     		ldr	r3, [r3, #4]
 1955 0086 BB60     		str	r3, [r7, #8]
 1956 0088 BB68     		ldr	r3, [r7, #8]
 1957              	.LBE3:
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx & Rx request */
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAT;
 1958              		.loc 1 1103 0
 1959 008a 7B68     		ldr	r3, [r7, #4]
 1960 008c 1B68     		ldr	r3, [r3]
 1961 008e 7A68     		ldr	r2, [r7, #4]
 1962 0090 1268     		ldr	r2, [r2]
 1963 0092 5269     		ldr	r2, [r2, #20]
 1964 0094 42F08002 		orr	r2, r2, #128
 1965 0098 5A61     		str	r2, [r3, #20]
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 |= USART_CR3_DMAR;
 1966              		.loc 1 1104 0
 1967 009a 7B68     		ldr	r3, [r7, #4]
 1968 009c 1B68     		ldr	r3, [r3]
 1969 009e 7A68     		ldr	r2, [r7, #4]
 1970 00a0 1268     		ldr	r2, [r2]
 1971 00a2 5269     		ldr	r2, [r2, #20]
 1972 00a4 42F04002 		orr	r2, r2, #64
 1973 00a8 5A61     		str	r2, [r3, #20]
 1974              	.L110:
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1975              		.loc 1 1108 0
 1976 00aa 7B68     		ldr	r3, [r7, #4]
 1977 00ac 0022     		movs	r2, #0
 1978 00ae 83F83820 		strb	r2, [r3, #56]
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1979              		.loc 1 1110 0
 1980 00b2 0023     		movs	r3, #0
 1981              	.L108:
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1982              		.loc 1 1111 0
 1983 00b4 1846     		mov	r0, r3
 1984 00b6 1437     		adds	r7, r7, #20
 1985 00b8 BD46     		mov	sp, r7
 1986              		@ sp needed
 1987 00ba 5DF8047B 		ldr	r7, [sp], #4
 1988 00be 7047     		bx	lr
 1989              		.cfi_endproc
 1990              	.LFE139:
 1992              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1993              		.align	2
 1994              		.global	HAL_UART_DMAStop
 1995              		.thumb
ARM GAS  /tmp/ccfrOaPN.s 			page 55


 1996              		.thumb_func
 1998              	HAL_UART_DMAStop:
 1999              	.LFB140:
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2000              		.loc 1 1120 0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 8
 2003              		@ frame_needed = 1, uses_anonymous_args = 0
 2004 0000 80B5     		push	{r7, lr}
 2005              	.LCFI45:
 2006              		.cfi_def_cfa_offset 8
 2007              		.cfi_offset 7, -8
 2008              		.cfi_offset 14, -4
 2009 0002 82B0     		sub	sp, sp, #8
 2010              	.LCFI46:
 2011              		.cfi_def_cfa_offset 16
 2012 0004 00AF     		add	r7, sp, #0
 2013              	.LCFI47:
 2014              		.cfi_def_cfa_register 7
 2015 0006 7860     		str	r0, [r7, #4]
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Tx/Rx DMA requests */
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 &= ~USART_CR3_DMAT;
 2016              		.loc 1 1128 0
 2017 0008 7B68     		ldr	r3, [r7, #4]
 2018 000a 1B68     		ldr	r3, [r3]
 2019 000c 7A68     		ldr	r2, [r7, #4]
 2020 000e 1268     		ldr	r2, [r2]
 2021 0010 5269     		ldr	r2, [r2, #20]
 2022 0012 22F08002 		bic	r2, r2, #128
 2023 0016 5A61     		str	r2, [r3, #20]
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 &= ~USART_CR3_DMAR;
 2024              		.loc 1 1129 0
 2025 0018 7B68     		ldr	r3, [r7, #4]
 2026 001a 1B68     		ldr	r3, [r3]
 2027 001c 7A68     		ldr	r2, [r7, #4]
 2028 001e 1268     		ldr	r2, [r2]
 2029 0020 5269     		ldr	r2, [r2, #20]
 2030 0022 22F04002 		bic	r2, r2, #64
 2031 0026 5A61     		str	r2, [r3, #20]
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Abort the UART DMA tx Stream */
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2032              		.loc 1 1132 0
ARM GAS  /tmp/ccfrOaPN.s 			page 56


 2033 0028 7B68     		ldr	r3, [r7, #4]
 2034 002a 1B6B     		ldr	r3, [r3, #48]
 2035 002c 002B     		cmp	r3, #0
 2036 002e 04D0     		beq	.L113
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmatx);
 2037              		.loc 1 1134 0
 2038 0030 7B68     		ldr	r3, [r7, #4]
 2039 0032 1B6B     		ldr	r3, [r3, #48]
 2040 0034 1846     		mov	r0, r3
 2041 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 2042              	.L113:
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Abort the UART DMA rx Stream */
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2043              		.loc 1 1137 0
 2044 003a 7B68     		ldr	r3, [r7, #4]
 2045 003c 5B6B     		ldr	r3, [r3, #52]
 2046 003e 002B     		cmp	r3, #0
 2047 0040 04D0     		beq	.L114
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Abort(huart->hdmarx);
 2048              		.loc 1 1139 0
 2049 0042 7B68     		ldr	r3, [r7, #4]
 2050 0044 5B6B     		ldr	r3, [r3, #52]
 2051 0046 1846     		mov	r0, r3
 2052 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 2053              	.L114:
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2054              		.loc 1 1142 0
 2055 004c 7B68     		ldr	r3, [r7, #4]
 2056 004e 0122     		movs	r2, #1
 2057 0050 83F83920 		strb	r2, [r3, #57]
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2058              		.loc 1 1144 0
 2059 0054 0023     		movs	r3, #0
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2060              		.loc 1 1145 0
 2061 0056 1846     		mov	r0, r3
 2062 0058 0837     		adds	r7, r7, #8
 2063 005a BD46     		mov	sp, r7
 2064              		@ sp needed
 2065 005c 80BD     		pop	{r7, pc}
 2066              		.cfi_endproc
 2067              	.LFE140:
 2069 005e 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2070              		.align	2
 2071              		.global	HAL_UART_IRQHandler
 2072              		.thumb
 2073              		.thumb_func
 2075              	HAL_UART_IRQHandler:
 2076              	.LFB141:
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccfrOaPN.s 			page 57


1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2077              		.loc 1 1154 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 32
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081 0000 80B5     		push	{r7, lr}
 2082              	.LCFI48:
 2083              		.cfi_def_cfa_offset 8
 2084              		.cfi_offset 7, -8
 2085              		.cfi_offset 14, -4
 2086 0002 88B0     		sub	sp, sp, #32
 2087              	.LCFI49:
 2088              		.cfi_def_cfa_offset 40
 2089 0004 00AF     		add	r7, sp, #0
 2090              	.LCFI50:
 2091              		.cfi_def_cfa_register 7
 2092 0006 7860     		str	r0, [r7, #4]
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 2093              		.loc 1 1155 0
 2094 0008 0023     		movs	r3, #0
 2095 000a FB61     		str	r3, [r7, #28]
 2096 000c 0023     		movs	r3, #0
 2097 000e BB61     		str	r3, [r7, #24]
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_PE);
 2098              		.loc 1 1157 0
 2099 0010 7B68     		ldr	r3, [r7, #4]
 2100 0012 1B68     		ldr	r3, [r3]
 2101 0014 1B68     		ldr	r3, [r3]
 2102 0016 03F00103 		and	r3, r3, #1
 2103 001a 002B     		cmp	r3, #0
 2104 001c 0CBF     		ite	eq
 2105 001e 0023     		moveq	r3, #0
 2106 0020 0123     		movne	r3, #1
 2107 0022 DBB2     		uxtb	r3, r3
 2108 0024 FB61     		str	r3, [r7, #28]
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
 2109              		.loc 1 1158 0
 2110 0026 7B68     		ldr	r3, [r7, #4]
 2111 0028 1B68     		ldr	r3, [r3]
 2112 002a DB68     		ldr	r3, [r3, #12]
 2113 002c 03F48073 		and	r3, r3, #256
 2114 0030 BB61     		str	r3, [r7, #24]
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART parity error interrupt occurred ------------------------------------*/
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 2115              		.loc 1 1160 0
 2116 0032 FB69     		ldr	r3, [r7, #28]
 2117 0034 002B     		cmp	r3, #0
 2118 0036 11D0     		beq	.L117
 2119              		.loc 1 1160 0 is_stmt 0 discriminator 1
 2120 0038 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccfrOaPN.s 			page 58


 2121 003a 002B     		cmp	r3, #0
 2122 003c 0ED0     		beq	.L117
 2123              	.LBB4:
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_PEFLAG(huart);
 2124              		.loc 1 1162 0 is_stmt 1
 2125 003e 7B68     		ldr	r3, [r7, #4]
 2126 0040 1B68     		ldr	r3, [r3]
 2127 0042 1B68     		ldr	r3, [r3]
 2128 0044 7B61     		str	r3, [r7, #20]
 2129 0046 7B68     		ldr	r3, [r7, #4]
 2130 0048 1B68     		ldr	r3, [r3]
 2131 004a 5B68     		ldr	r3, [r3, #4]
 2132 004c 7B61     		str	r3, [r7, #20]
 2133 004e 7B69     		ldr	r3, [r7, #20]
 2134              	.LBE4:
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_PE;
 2135              		.loc 1 1164 0
 2136 0050 7B68     		ldr	r3, [r7, #4]
 2137 0052 DB6B     		ldr	r3, [r3, #60]
 2138 0054 43F00102 		orr	r2, r3, #1
 2139 0058 7B68     		ldr	r3, [r7, #4]
 2140 005a DA63     		str	r2, [r3, #60]
 2141              	.L117:
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_FE);
 2142              		.loc 1 1167 0
 2143 005c 7B68     		ldr	r3, [r7, #4]
 2144 005e 1B68     		ldr	r3, [r3]
 2145 0060 1B68     		ldr	r3, [r3]
 2146 0062 03F00203 		and	r3, r3, #2
 2147 0066 002B     		cmp	r3, #0
 2148 0068 0CBF     		ite	eq
 2149 006a 0023     		moveq	r3, #0
 2150 006c 0123     		movne	r3, #1
 2151 006e DBB2     		uxtb	r3, r3
 2152 0070 FB61     		str	r3, [r7, #28]
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 2153              		.loc 1 1168 0
 2154 0072 7B68     		ldr	r3, [r7, #4]
 2155 0074 1B68     		ldr	r3, [r3]
 2156 0076 5B69     		ldr	r3, [r3, #20]
 2157 0078 03F00103 		and	r3, r3, #1
 2158 007c BB61     		str	r3, [r7, #24]
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART frame error interrupt occurred -------------------------------------*/
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 2159              		.loc 1 1170 0
 2160 007e FB69     		ldr	r3, [r7, #28]
 2161 0080 002B     		cmp	r3, #0
 2162 0082 11D0     		beq	.L118
 2163              		.loc 1 1170 0 is_stmt 0 discriminator 1
 2164 0084 BB69     		ldr	r3, [r7, #24]
 2165 0086 002B     		cmp	r3, #0
 2166 0088 0ED0     		beq	.L118
 2167              	.LBB5:
ARM GAS  /tmp/ccfrOaPN.s 			page 59


1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FEFLAG(huart);
 2168              		.loc 1 1172 0 is_stmt 1
 2169 008a 7B68     		ldr	r3, [r7, #4]
 2170 008c 1B68     		ldr	r3, [r3]
 2171 008e 1B68     		ldr	r3, [r3]
 2172 0090 3B61     		str	r3, [r7, #16]
 2173 0092 7B68     		ldr	r3, [r7, #4]
 2174 0094 1B68     		ldr	r3, [r3]
 2175 0096 5B68     		ldr	r3, [r3, #4]
 2176 0098 3B61     		str	r3, [r7, #16]
 2177 009a 3B69     		ldr	r3, [r7, #16]
 2178              	.LBE5:
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_FE;
 2179              		.loc 1 1174 0
 2180 009c 7B68     		ldr	r3, [r7, #4]
 2181 009e DB6B     		ldr	r3, [r3, #60]
 2182 00a0 43F00402 		orr	r2, r3, #4
 2183 00a4 7B68     		ldr	r3, [r7, #4]
 2184 00a6 DA63     		str	r2, [r3, #60]
 2185              	.L118:
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_NE);
 2186              		.loc 1 1177 0
 2187 00a8 7B68     		ldr	r3, [r7, #4]
 2188 00aa 1B68     		ldr	r3, [r3]
 2189 00ac 1B68     		ldr	r3, [r3]
 2190 00ae 03F00403 		and	r3, r3, #4
 2191 00b2 002B     		cmp	r3, #0
 2192 00b4 0CBF     		ite	eq
 2193 00b6 0023     		moveq	r3, #0
 2194 00b8 0123     		movne	r3, #1
 2195 00ba DBB2     		uxtb	r3, r3
 2196 00bc FB61     		str	r3, [r7, #28]
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 2197              		.loc 1 1178 0
 2198 00be 7B68     		ldr	r3, [r7, #4]
 2199 00c0 1B68     		ldr	r3, [r3]
 2200 00c2 5B69     		ldr	r3, [r3, #20]
 2201 00c4 03F00103 		and	r3, r3, #1
 2202 00c8 BB61     		str	r3, [r7, #24]
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART noise error interrupt occurred -------------------------------------*/
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 2203              		.loc 1 1180 0
 2204 00ca FB69     		ldr	r3, [r7, #28]
 2205 00cc 002B     		cmp	r3, #0
 2206 00ce 11D0     		beq	.L119
 2207              		.loc 1 1180 0 is_stmt 0 discriminator 1
 2208 00d0 BB69     		ldr	r3, [r7, #24]
 2209 00d2 002B     		cmp	r3, #0
 2210 00d4 0ED0     		beq	.L119
 2211              	.LBB6:
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_NEFLAG(huart);
 2212              		.loc 1 1182 0 is_stmt 1
ARM GAS  /tmp/ccfrOaPN.s 			page 60


 2213 00d6 7B68     		ldr	r3, [r7, #4]
 2214 00d8 1B68     		ldr	r3, [r3]
 2215 00da 1B68     		ldr	r3, [r3]
 2216 00dc FB60     		str	r3, [r7, #12]
 2217 00de 7B68     		ldr	r3, [r7, #4]
 2218 00e0 1B68     		ldr	r3, [r3]
 2219 00e2 5B68     		ldr	r3, [r3, #4]
 2220 00e4 FB60     		str	r3, [r7, #12]
 2221 00e6 FB68     		ldr	r3, [r7, #12]
 2222              	.LBE6:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_NE;
 2223              		.loc 1 1184 0
 2224 00e8 7B68     		ldr	r3, [r7, #4]
 2225 00ea DB6B     		ldr	r3, [r3, #60]
 2226 00ec 43F00202 		orr	r2, r3, #2
 2227 00f0 7B68     		ldr	r3, [r7, #4]
 2228 00f2 DA63     		str	r2, [r3, #60]
 2229              	.L119:
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_ORE);
 2230              		.loc 1 1187 0
 2231 00f4 7B68     		ldr	r3, [r7, #4]
 2232 00f6 1B68     		ldr	r3, [r3]
 2233 00f8 1B68     		ldr	r3, [r3]
 2234 00fa 03F00803 		and	r3, r3, #8
 2235 00fe 002B     		cmp	r3, #0
 2236 0100 0CBF     		ite	eq
 2237 0102 0023     		moveq	r3, #0
 2238 0104 0123     		movne	r3, #1
 2239 0106 DBB2     		uxtb	r3, r3
 2240 0108 FB61     		str	r3, [r7, #28]
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 2241              		.loc 1 1188 0
 2242 010a 7B68     		ldr	r3, [r7, #4]
 2243 010c 1B68     		ldr	r3, [r3]
 2244 010e 5B69     		ldr	r3, [r3, #20]
 2245 0110 03F00103 		and	r3, r3, #1
 2246 0114 BB61     		str	r3, [r7, #24]
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART Over-Run interrupt occurred ----------------------------------------*/
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 2247              		.loc 1 1190 0
 2248 0116 FB69     		ldr	r3, [r7, #28]
 2249 0118 002B     		cmp	r3, #0
 2250 011a 11D0     		beq	.L120
 2251              		.loc 1 1190 0 is_stmt 0 discriminator 1
 2252 011c BB69     		ldr	r3, [r7, #24]
 2253 011e 002B     		cmp	r3, #0
 2254 0120 0ED0     		beq	.L120
 2255              	.LBB7:
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2256              		.loc 1 1192 0 is_stmt 1
 2257 0122 7B68     		ldr	r3, [r7, #4]
 2258 0124 1B68     		ldr	r3, [r3]
 2259 0126 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfrOaPN.s 			page 61


 2260 0128 BB60     		str	r3, [r7, #8]
 2261 012a 7B68     		ldr	r3, [r7, #4]
 2262 012c 1B68     		ldr	r3, [r3]
 2263 012e 5B68     		ldr	r3, [r3, #4]
 2264 0130 BB60     		str	r3, [r7, #8]
 2265 0132 BB68     		ldr	r3, [r7, #8]
 2266              	.LBE7:
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_ORE;
 2267              		.loc 1 1194 0
 2268 0134 7B68     		ldr	r3, [r7, #4]
 2269 0136 DB6B     		ldr	r3, [r3, #60]
 2270 0138 43F00802 		orr	r2, r3, #8
 2271 013c 7B68     		ldr	r3, [r7, #4]
 2272 013e DA63     		str	r2, [r3, #60]
 2273              	.L120:
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE);
 2274              		.loc 1 1197 0
 2275 0140 7B68     		ldr	r3, [r7, #4]
 2276 0142 1B68     		ldr	r3, [r3]
 2277 0144 1B68     		ldr	r3, [r3]
 2278 0146 03F02003 		and	r3, r3, #32
 2279 014a 002B     		cmp	r3, #0
 2280 014c 0CBF     		ite	eq
 2281 014e 0023     		moveq	r3, #0
 2282 0150 0123     		movne	r3, #1
 2283 0152 DBB2     		uxtb	r3, r3
 2284 0154 FB61     		str	r3, [r7, #28]
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_RXNE);
 2285              		.loc 1 1198 0
 2286 0156 7B68     		ldr	r3, [r7, #4]
 2287 0158 1B68     		ldr	r3, [r3]
 2288 015a DB68     		ldr	r3, [r3, #12]
 2289 015c 03F02003 		and	r3, r3, #32
 2290 0160 BB61     		str	r3, [r7, #24]
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Receiver ---------------------------------------------------*/
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 2291              		.loc 1 1200 0
 2292 0162 FB69     		ldr	r3, [r7, #28]
 2293 0164 002B     		cmp	r3, #0
 2294 0166 05D0     		beq	.L121
 2295              		.loc 1 1200 0 is_stmt 0 discriminator 1
 2296 0168 BB69     		ldr	r3, [r7, #24]
 2297 016a 002B     		cmp	r3, #0
 2298 016c 02D0     		beq	.L121
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Receive_IT(huart);
 2299              		.loc 1 1202 0 is_stmt 1
 2300 016e 7868     		ldr	r0, [r7, #4]
 2301 0170 FFF7FEFF 		bl	UART_Receive_IT
 2302              	.L121:
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_TXE);
 2303              		.loc 1 1205 0
ARM GAS  /tmp/ccfrOaPN.s 			page 62


 2304 0174 7B68     		ldr	r3, [r7, #4]
 2305 0176 1B68     		ldr	r3, [r3]
 2306 0178 1B68     		ldr	r3, [r3]
 2307 017a 03F08003 		and	r3, r3, #128
 2308 017e 002B     		cmp	r3, #0
 2309 0180 0CBF     		ite	eq
 2310 0182 0023     		moveq	r3, #0
 2311 0184 0123     		movne	r3, #1
 2312 0186 DBB2     		uxtb	r3, r3
 2313 0188 FB61     		str	r3, [r7, #28]
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TXE);
 2314              		.loc 1 1206 0
 2315 018a 7B68     		ldr	r3, [r7, #4]
 2316 018c 1B68     		ldr	r3, [r3]
 2317 018e DB68     		ldr	r3, [r3, #12]
 2318 0190 03F08003 		and	r3, r3, #128
 2319 0194 BB61     		str	r3, [r7, #24]
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 2320              		.loc 1 1208 0
 2321 0196 FB69     		ldr	r3, [r7, #28]
 2322 0198 002B     		cmp	r3, #0
 2323 019a 05D0     		beq	.L122
 2324              		.loc 1 1208 0 is_stmt 0 discriminator 1
 2325 019c BB69     		ldr	r3, [r7, #24]
 2326 019e 002B     		cmp	r3, #0
 2327 01a0 02D0     		beq	.L122
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 2328              		.loc 1 1210 0 is_stmt 1
 2329 01a2 7868     		ldr	r0, [r7, #4]
 2330 01a4 FFF7FEFF 		bl	UART_Transmit_IT
 2331              	.L122:
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_TC);
 2332              		.loc 1 1213 0
 2333 01a8 7B68     		ldr	r3, [r7, #4]
 2334 01aa 1B68     		ldr	r3, [r3]
 2335 01ac 1B68     		ldr	r3, [r3]
 2336 01ae 03F04003 		and	r3, r3, #64
 2337 01b2 002B     		cmp	r3, #0
 2338 01b4 0CBF     		ite	eq
 2339 01b6 0023     		moveq	r3, #0
 2340 01b8 0123     		movne	r3, #1
 2341 01ba DBB2     		uxtb	r3, r3
 2342 01bc FB61     		str	r3, [r7, #28]
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC);
 2343              		.loc 1 1214 0
 2344 01be 7B68     		ldr	r3, [r7, #4]
 2345 01c0 1B68     		ldr	r3, [r3]
 2346 01c2 DB68     		ldr	r3, [r3, #12]
 2347 01c4 03F04003 		and	r3, r3, #64
 2348 01c8 BB61     		str	r3, [r7, #24]
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 != RESET) && (tmp2 != RESET))
 2349              		.loc 1 1216 0
ARM GAS  /tmp/ccfrOaPN.s 			page 63


 2350 01ca FB69     		ldr	r3, [r7, #28]
 2351 01cc 002B     		cmp	r3, #0
 2352 01ce 05D0     		beq	.L123
 2353              		.loc 1 1216 0 is_stmt 0 discriminator 1
 2354 01d0 BB69     		ldr	r3, [r7, #24]
 2355 01d2 002B     		cmp	r3, #0
 2356 01d4 02D0     		beq	.L123
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 2357              		.loc 1 1218 0 is_stmt 1
 2358 01d6 7868     		ldr	r0, [r7, #4]
 2359 01d8 FFF7FEFF 		bl	UART_EndTransmit_IT
 2360              	.L123:
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 2361              		.loc 1 1221 0
 2362 01dc 7B68     		ldr	r3, [r7, #4]
 2363 01de DB6B     		ldr	r3, [r3, #60]
 2364 01e0 002B     		cmp	r3, #0
 2365 01e2 06D0     		beq	.L116
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 2366              		.loc 1 1224 0
 2367 01e4 7B68     		ldr	r3, [r7, #4]
 2368 01e6 0122     		movs	r2, #1
 2369 01e8 83F83920 		strb	r2, [r3, #57]
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
 2370              		.loc 1 1226 0
 2371 01ec 7868     		ldr	r0, [r7, #4]
 2372 01ee FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2373              	.L116:
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }  
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2374              		.loc 1 1228 0
 2375 01f2 2037     		adds	r7, r7, #32
 2376 01f4 BD46     		mov	sp, r7
 2377              		@ sp needed
 2378 01f6 80BD     		pop	{r7, pc}
 2379              		.cfi_endproc
 2380              	.LFE141:
 2382              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2383              		.align	2
 2384              		.weak	HAL_UART_TxCpltCallback
 2385              		.thumb
 2386              		.thumb_func
 2388              	HAL_UART_TxCpltCallback:
 2389              	.LFB142:
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccfrOaPN.s 			page 64


1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2390              		.loc 1 1237 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 8
 2393              		@ frame_needed = 1, uses_anonymous_args = 0
 2394              		@ link register save eliminated.
 2395 0000 80B4     		push	{r7}
 2396              	.LCFI51:
 2397              		.cfi_def_cfa_offset 4
 2398              		.cfi_offset 7, -4
 2399 0002 83B0     		sub	sp, sp, #12
 2400              	.LCFI52:
 2401              		.cfi_def_cfa_offset 16
 2402 0004 00AF     		add	r7, sp, #0
 2403              	.LCFI53:
 2404              		.cfi_def_cfa_register 7
 2405 0006 7860     		str	r0, [r7, #4]
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2406              		.loc 1 1241 0
 2407 0008 0C37     		adds	r7, r7, #12
 2408 000a BD46     		mov	sp, r7
 2409              		@ sp needed
 2410 000c 5DF8047B 		ldr	r7, [sp], #4
 2411 0010 7047     		bx	lr
 2412              		.cfi_endproc
 2413              	.LFE142:
 2415 0012 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2416              		.align	2
 2417              		.weak	HAL_UART_TxHalfCpltCallback
 2418              		.thumb
 2419              		.thumb_func
 2421              	HAL_UART_TxHalfCpltCallback:
 2422              	.LFB143:
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2423              		.loc 1 1250 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 8
 2426              		@ frame_needed = 1, uses_anonymous_args = 0
 2427              		@ link register save eliminated.
 2428 0000 80B4     		push	{r7}
 2429              	.LCFI54:
 2430              		.cfi_def_cfa_offset 4
 2431              		.cfi_offset 7, -4
 2432 0002 83B0     		sub	sp, sp, #12
 2433              	.LCFI55:
ARM GAS  /tmp/ccfrOaPN.s 			page 65


 2434              		.cfi_def_cfa_offset 16
 2435 0004 00AF     		add	r7, sp, #0
 2436              	.LCFI56:
 2437              		.cfi_def_cfa_register 7
 2438 0006 7860     		str	r0, [r7, #4]
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2439              		.loc 1 1254 0
 2440 0008 0C37     		adds	r7, r7, #12
 2441 000a BD46     		mov	sp, r7
 2442              		@ sp needed
 2443 000c 5DF8047B 		ldr	r7, [sp], #4
 2444 0010 7047     		bx	lr
 2445              		.cfi_endproc
 2446              	.LFE143:
 2448 0012 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2449              		.align	2
 2450              		.weak	HAL_UART_RxCpltCallback
 2451              		.thumb
 2452              		.thumb_func
 2454              	HAL_UART_RxCpltCallback:
 2455              	.LFB144:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2456              		.loc 1 1263 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 8
 2459              		@ frame_needed = 1, uses_anonymous_args = 0
 2460              		@ link register save eliminated.
 2461 0000 80B4     		push	{r7}
 2462              	.LCFI57:
 2463              		.cfi_def_cfa_offset 4
 2464              		.cfi_offset 7, -4
 2465 0002 83B0     		sub	sp, sp, #12
 2466              	.LCFI58:
 2467              		.cfi_def_cfa_offset 16
 2468 0004 00AF     		add	r7, sp, #0
 2469              	.LCFI59:
 2470              		.cfi_def_cfa_register 7
 2471 0006 7860     		str	r0, [r7, #4]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2472              		.loc 1 1267 0
 2473 0008 0C37     		adds	r7, r7, #12
 2474 000a BD46     		mov	sp, r7
 2475              		@ sp needed
ARM GAS  /tmp/ccfrOaPN.s 			page 66


 2476 000c 5DF8047B 		ldr	r7, [sp], #4
 2477 0010 7047     		bx	lr
 2478              		.cfi_endproc
 2479              	.LFE144:
 2481 0012 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2482              		.align	2
 2483              		.weak	HAL_UART_RxHalfCpltCallback
 2484              		.thumb
 2485              		.thumb_func
 2487              	HAL_UART_RxHalfCpltCallback:
 2488              	.LFB145:
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2489              		.loc 1 1276 0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 8
 2492              		@ frame_needed = 1, uses_anonymous_args = 0
 2493              		@ link register save eliminated.
 2494 0000 80B4     		push	{r7}
 2495              	.LCFI60:
 2496              		.cfi_def_cfa_offset 4
 2497              		.cfi_offset 7, -4
 2498 0002 83B0     		sub	sp, sp, #12
 2499              	.LCFI61:
 2500              		.cfi_def_cfa_offset 16
 2501 0004 00AF     		add	r7, sp, #0
 2502              	.LCFI62:
 2503              		.cfi_def_cfa_register 7
 2504 0006 7860     		str	r0, [r7, #4]
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2505              		.loc 1 1280 0
 2506 0008 0C37     		adds	r7, r7, #12
 2507 000a BD46     		mov	sp, r7
 2508              		@ sp needed
 2509 000c 5DF8047B 		ldr	r7, [sp], #4
 2510 0010 7047     		bx	lr
 2511              		.cfi_endproc
 2512              	.LFE145:
 2514 0012 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2515              		.align	2
 2516              		.weak	HAL_UART_ErrorCallback
 2517              		.thumb
 2518              		.thumb_func
 2520              	HAL_UART_ErrorCallback:
 2521              	.LFB146:
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccfrOaPN.s 			page 67


1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2522              		.loc 1 1289 0
 2523              		.cfi_startproc
 2524              		@ args = 0, pretend = 0, frame = 8
 2525              		@ frame_needed = 1, uses_anonymous_args = 0
 2526              		@ link register save eliminated.
 2527 0000 80B4     		push	{r7}
 2528              	.LCFI63:
 2529              		.cfi_def_cfa_offset 4
 2530              		.cfi_offset 7, -4
 2531 0002 83B0     		sub	sp, sp, #12
 2532              	.LCFI64:
 2533              		.cfi_def_cfa_offset 16
 2534 0004 00AF     		add	r7, sp, #0
 2535              	.LCFI65:
 2536              		.cfi_def_cfa_register 7
 2537 0006 7860     		str	r0, [r7, #4]
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2538              		.loc 1 1293 0
 2539 0008 0C37     		adds	r7, r7, #12
 2540 000a BD46     		mov	sp, r7
 2541              		@ sp needed
 2542 000c 5DF8047B 		ldr	r7, [sp], #4
 2543 0010 7047     		bx	lr
 2544              		.cfi_endproc
 2545              	.LFE146:
 2547 0012 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2548              		.align	2
 2549              		.global	HAL_LIN_SendBreak
 2550              		.thumb
 2551              		.thumb_func
 2553              	HAL_LIN_SendBreak:
 2554              	.LFB147:
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
ARM GAS  /tmp/ccfrOaPN.s 			page 68


1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2555              		.loc 1 1323 0
 2556              		.cfi_startproc
 2557              		@ args = 0, pretend = 0, frame = 8
 2558              		@ frame_needed = 1, uses_anonymous_args = 0
 2559              		@ link register save eliminated.
 2560 0000 80B4     		push	{r7}
 2561              	.LCFI66:
 2562              		.cfi_def_cfa_offset 4
 2563              		.cfi_offset 7, -4
 2564 0002 83B0     		sub	sp, sp, #12
 2565              	.LCFI67:
 2566              		.cfi_def_cfa_offset 16
 2567 0004 00AF     		add	r7, sp, #0
 2568              	.LCFI68:
 2569              		.cfi_def_cfa_register 7
 2570 0006 7860     		str	r0, [r7, #4]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2571              		.loc 1 1328 0
 2572 0008 7B68     		ldr	r3, [r7, #4]
 2573 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2574 000e 012B     		cmp	r3, #1
 2575 0010 01D1     		bne	.L131
 2576              		.loc 1 1328 0 is_stmt 0 discriminator 1
 2577 0012 0223     		movs	r3, #2
 2578 0014 18E0     		b	.L132
 2579              	.L131:
 2580              		.loc 1 1328 0 discriminator 2
 2581 0016 7B68     		ldr	r3, [r7, #4]
 2582 0018 0122     		movs	r2, #1
 2583 001a 83F83820 		strb	r2, [r3, #56]
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2584              		.loc 1 1330 0 is_stmt 1 discriminator 2
 2585 001e 7B68     		ldr	r3, [r7, #4]
 2586 0020 0222     		movs	r2, #2
 2587 0022 83F83920 		strb	r2, [r3, #57]
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
ARM GAS  /tmp/ccfrOaPN.s 			page 69


1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 |= USART_CR1_SBK;
 2588              		.loc 1 1333 0 discriminator 2
 2589 0026 7B68     		ldr	r3, [r7, #4]
 2590 0028 1B68     		ldr	r3, [r3]
 2591 002a 7A68     		ldr	r2, [r7, #4]
 2592 002c 1268     		ldr	r2, [r2]
 2593 002e D268     		ldr	r2, [r2, #12]
 2594 0030 42F00102 		orr	r2, r2, #1
 2595 0034 DA60     		str	r2, [r3, #12]
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2596              		.loc 1 1335 0 discriminator 2
 2597 0036 7B68     		ldr	r3, [r7, #4]
 2598 0038 0122     		movs	r2, #1
 2599 003a 83F83920 		strb	r2, [r3, #57]
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2600              		.loc 1 1338 0 discriminator 2
 2601 003e 7B68     		ldr	r3, [r7, #4]
 2602 0040 0022     		movs	r2, #0
 2603 0042 83F83820 		strb	r2, [r3, #56]
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2604              		.loc 1 1340 0 discriminator 2
 2605 0046 0023     		movs	r3, #0
 2606              	.L132:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2607              		.loc 1 1341 0
 2608 0048 1846     		mov	r0, r3
 2609 004a 0C37     		adds	r7, r7, #12
 2610 004c BD46     		mov	sp, r7
 2611              		@ sp needed
 2612 004e 5DF8047B 		ldr	r7, [sp], #4
 2613 0052 7047     		bx	lr
 2614              		.cfi_endproc
 2615              	.LFE147:
 2617              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2618              		.align	2
 2619              		.global	HAL_MultiProcessor_EnterMuteMode
 2620              		.thumb
 2621              		.thumb_func
 2623              	HAL_MultiProcessor_EnterMuteMode:
 2624              	.LFB148:
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2625              		.loc 1 1350 0
 2626              		.cfi_startproc
 2627              		@ args = 0, pretend = 0, frame = 8
 2628              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccfrOaPN.s 			page 70


 2629              		@ link register save eliminated.
 2630 0000 80B4     		push	{r7}
 2631              	.LCFI69:
 2632              		.cfi_def_cfa_offset 4
 2633              		.cfi_offset 7, -4
 2634 0002 83B0     		sub	sp, sp, #12
 2635              	.LCFI70:
 2636              		.cfi_def_cfa_offset 16
 2637 0004 00AF     		add	r7, sp, #0
 2638              	.LCFI71:
 2639              		.cfi_def_cfa_register 7
 2640 0006 7860     		str	r0, [r7, #4]
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2641              		.loc 1 1355 0
 2642 0008 7B68     		ldr	r3, [r7, #4]
 2643 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2644 000e 012B     		cmp	r3, #1
 2645 0010 01D1     		bne	.L134
 2646              		.loc 1 1355 0 is_stmt 0 discriminator 1
 2647 0012 0223     		movs	r3, #2
 2648 0014 18E0     		b	.L135
 2649              	.L134:
 2650              		.loc 1 1355 0 discriminator 2
 2651 0016 7B68     		ldr	r3, [r7, #4]
 2652 0018 0122     		movs	r2, #1
 2653 001a 83F83820 		strb	r2, [r3, #56]
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2654              		.loc 1 1357 0 is_stmt 1 discriminator 2
 2655 001e 7B68     		ldr	r3, [r7, #4]
 2656 0020 0222     		movs	r2, #2
 2657 0022 83F83920 		strb	r2, [r3, #57]
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 |= USART_CR1_RWU;
 2658              		.loc 1 1360 0 discriminator 2
 2659 0026 7B68     		ldr	r3, [r7, #4]
 2660 0028 1B68     		ldr	r3, [r3]
 2661 002a 7A68     		ldr	r2, [r7, #4]
 2662 002c 1268     		ldr	r2, [r2]
 2663 002e D268     		ldr	r2, [r2, #12]
 2664 0030 42F00202 		orr	r2, r2, #2
 2665 0034 DA60     		str	r2, [r3, #12]
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2666              		.loc 1 1362 0 discriminator 2
 2667 0036 7B68     		ldr	r3, [r7, #4]
 2668 0038 0122     		movs	r2, #1
 2669 003a 83F83920 		strb	r2, [r3, #57]
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2670              		.loc 1 1365 0 discriminator 2
ARM GAS  /tmp/ccfrOaPN.s 			page 71


 2671 003e 7B68     		ldr	r3, [r7, #4]
 2672 0040 0022     		movs	r2, #0
 2673 0042 83F83820 		strb	r2, [r3, #56]
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2674              		.loc 1 1367 0 discriminator 2
 2675 0046 0023     		movs	r3, #0
 2676              	.L135:
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2677              		.loc 1 1368 0
 2678 0048 1846     		mov	r0, r3
 2679 004a 0C37     		adds	r7, r7, #12
 2680 004c BD46     		mov	sp, r7
 2681              		@ sp needed
 2682 004e 5DF8047B 		ldr	r7, [sp], #4
 2683 0052 7047     		bx	lr
 2684              		.cfi_endproc
 2685              	.LFE148:
 2687              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 2688              		.align	2
 2689              		.global	HAL_MultiProcessor_ExitMuteMode
 2690              		.thumb
 2691              		.thumb_func
 2693              	HAL_MultiProcessor_ExitMuteMode:
 2694              	.LFB149:
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2695              		.loc 1 1377 0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 8
 2698              		@ frame_needed = 1, uses_anonymous_args = 0
 2699              		@ link register save eliminated.
 2700 0000 80B4     		push	{r7}
 2701              	.LCFI72:
 2702              		.cfi_def_cfa_offset 4
 2703              		.cfi_offset 7, -4
 2704 0002 83B0     		sub	sp, sp, #12
 2705              	.LCFI73:
 2706              		.cfi_def_cfa_offset 16
 2707 0004 00AF     		add	r7, sp, #0
 2708              	.LCFI74:
 2709              		.cfi_def_cfa_register 7
 2710 0006 7860     		str	r0, [r7, #4]
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2711              		.loc 1 1382 0
 2712 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 72


 2713 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2714 000e 012B     		cmp	r3, #1
 2715 0010 01D1     		bne	.L137
 2716              		.loc 1 1382 0 is_stmt 0 discriminator 1
 2717 0012 0223     		movs	r3, #2
 2718 0014 18E0     		b	.L138
 2719              	.L137:
 2720              		.loc 1 1382 0 discriminator 2
 2721 0016 7B68     		ldr	r3, [r7, #4]
 2722 0018 0122     		movs	r2, #1
 2723 001a 83F83820 		strb	r2, [r3, #56]
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2724              		.loc 1 1384 0 is_stmt 1 discriminator 2
 2725 001e 7B68     		ldr	r3, [r7, #4]
 2726 0020 0222     		movs	r2, #2
 2727 0022 83F83920 		strb	r2, [r3, #57]
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 &= (uint32_t)~((uint32_t)USART_CR1_RWU);
 2728              		.loc 1 1387 0 discriminator 2
 2729 0026 7B68     		ldr	r3, [r7, #4]
 2730 0028 1B68     		ldr	r3, [r3]
 2731 002a 7A68     		ldr	r2, [r7, #4]
 2732 002c 1268     		ldr	r2, [r2]
 2733 002e D268     		ldr	r2, [r2, #12]
 2734 0030 22F00202 		bic	r2, r2, #2
 2735 0034 DA60     		str	r2, [r3, #12]
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2736              		.loc 1 1389 0 discriminator 2
 2737 0036 7B68     		ldr	r3, [r7, #4]
 2738 0038 0122     		movs	r2, #1
 2739 003a 83F83920 		strb	r2, [r3, #57]
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2740              		.loc 1 1392 0 discriminator 2
 2741 003e 7B68     		ldr	r3, [r7, #4]
 2742 0040 0022     		movs	r2, #0
 2743 0042 83F83820 		strb	r2, [r3, #56]
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2744              		.loc 1 1394 0 discriminator 2
 2745 0046 0023     		movs	r3, #0
 2746              	.L138:
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2747              		.loc 1 1395 0
 2748 0048 1846     		mov	r0, r3
 2749 004a 0C37     		adds	r7, r7, #12
 2750 004c BD46     		mov	sp, r7
 2751              		@ sp needed
 2752 004e 5DF8047B 		ldr	r7, [sp], #4
 2753 0052 7047     		bx	lr
 2754              		.cfi_endproc
 2755              	.LFE149:
 2757              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
ARM GAS  /tmp/ccfrOaPN.s 			page 73


 2758              		.align	2
 2759              		.global	HAL_HalfDuplex_EnableTransmitter
 2760              		.thumb
 2761              		.thumb_func
 2763              	HAL_HalfDuplex_EnableTransmitter:
 2764              	.LFB150:
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2765              		.loc 1 1404 0
 2766              		.cfi_startproc
 2767              		@ args = 0, pretend = 0, frame = 16
 2768              		@ frame_needed = 1, uses_anonymous_args = 0
 2769              		@ link register save eliminated.
 2770 0000 80B4     		push	{r7}
 2771              	.LCFI75:
 2772              		.cfi_def_cfa_offset 4
 2773              		.cfi_offset 7, -4
 2774 0002 85B0     		sub	sp, sp, #20
 2775              	.LCFI76:
 2776              		.cfi_def_cfa_offset 24
 2777 0004 00AF     		add	r7, sp, #0
 2778              	.LCFI77:
 2779              		.cfi_def_cfa_register 7
 2780 0006 7860     		str	r0, [r7, #4]
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00;
 2781              		.loc 1 1405 0
 2782 0008 0023     		movs	r3, #0
 2783 000a FB60     		str	r3, [r7, #12]
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2784              		.loc 1 1408 0
 2785 000c 7B68     		ldr	r3, [r7, #4]
 2786 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2787 0012 012B     		cmp	r3, #1
 2788 0014 01D1     		bne	.L140
 2789              		.loc 1 1408 0 is_stmt 0 discriminator 1
 2790 0016 0223     		movs	r3, #2
 2791 0018 20E0     		b	.L141
 2792              	.L140:
 2793              		.loc 1 1408 0 discriminator 2
 2794 001a 7B68     		ldr	r3, [r7, #4]
 2795 001c 0122     		movs	r2, #1
 2796 001e 83F83820 		strb	r2, [r3, #56]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2797              		.loc 1 1410 0 is_stmt 1 discriminator 2
 2798 0022 7B68     		ldr	r3, [r7, #4]
 2799 0024 0222     		movs	r2, #2
 2800 0026 83F83920 		strb	r2, [r3, #57]
ARM GAS  /tmp/ccfrOaPN.s 			page 74


1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 2801              		.loc 1 1413 0 discriminator 2
 2802 002a 7B68     		ldr	r3, [r7, #4]
 2803 002c 1B68     		ldr	r3, [r3]
 2804 002e DB68     		ldr	r3, [r3, #12]
 2805 0030 FB60     		str	r3, [r7, #12]
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 2806              		.loc 1 1416 0 discriminator 2
 2807 0032 FB68     		ldr	r3, [r7, #12]
 2808 0034 23F00C03 		bic	r3, r3, #12
 2809 0038 FB60     		str	r3, [r7, #12]
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 2810              		.loc 1 1419 0 discriminator 2
 2811 003a FB68     		ldr	r3, [r7, #12]
 2812 003c 43F00803 		orr	r3, r3, #8
 2813 0040 FB60     		str	r3, [r7, #12]
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 = (uint32_t)tmpreg;
 2814              		.loc 1 1422 0 discriminator 2
 2815 0042 7B68     		ldr	r3, [r7, #4]
 2816 0044 1B68     		ldr	r3, [r3]
 2817 0046 FA68     		ldr	r2, [r7, #12]
 2818 0048 DA60     		str	r2, [r3, #12]
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2819              		.loc 1 1424 0 discriminator 2
 2820 004a 7B68     		ldr	r3, [r7, #4]
 2821 004c 0122     		movs	r2, #1
 2822 004e 83F83920 		strb	r2, [r3, #57]
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2823              		.loc 1 1427 0 discriminator 2
 2824 0052 7B68     		ldr	r3, [r7, #4]
 2825 0054 0022     		movs	r2, #0
 2826 0056 83F83820 		strb	r2, [r3, #56]
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2827              		.loc 1 1429 0 discriminator 2
 2828 005a 0023     		movs	r3, #0
 2829              	.L141:
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2830              		.loc 1 1430 0
 2831 005c 1846     		mov	r0, r3
 2832 005e 1437     		adds	r7, r7, #20
 2833 0060 BD46     		mov	sp, r7
 2834              		@ sp needed
 2835 0062 5DF8047B 		ldr	r7, [sp], #4
 2836 0066 7047     		bx	lr
 2837              		.cfi_endproc
ARM GAS  /tmp/ccfrOaPN.s 			page 75


 2838              	.LFE150:
 2840              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2841              		.align	2
 2842              		.global	HAL_HalfDuplex_EnableReceiver
 2843              		.thumb
 2844              		.thumb_func
 2846              	HAL_HalfDuplex_EnableReceiver:
 2847              	.LFB151:
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2848              		.loc 1 1439 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 16
 2851              		@ frame_needed = 1, uses_anonymous_args = 0
 2852              		@ link register save eliminated.
 2853 0000 80B4     		push	{r7}
 2854              	.LCFI78:
 2855              		.cfi_def_cfa_offset 4
 2856              		.cfi_offset 7, -4
 2857 0002 85B0     		sub	sp, sp, #20
 2858              	.LCFI79:
 2859              		.cfi_def_cfa_offset 24
 2860 0004 00AF     		add	r7, sp, #0
 2861              	.LCFI80:
 2862              		.cfi_def_cfa_register 7
 2863 0006 7860     		str	r0, [r7, #4]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00;
 2864              		.loc 1 1440 0
 2865 0008 0023     		movs	r3, #0
 2866 000a FB60     		str	r3, [r7, #12]
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2867              		.loc 1 1443 0
 2868 000c 7B68     		ldr	r3, [r7, #4]
 2869 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2870 0012 012B     		cmp	r3, #1
 2871 0014 01D1     		bne	.L143
 2872              		.loc 1 1443 0 is_stmt 0 discriminator 1
 2873 0016 0223     		movs	r3, #2
 2874 0018 20E0     		b	.L144
 2875              	.L143:
 2876              		.loc 1 1443 0 discriminator 2
 2877 001a 7B68     		ldr	r3, [r7, #4]
 2878 001c 0122     		movs	r2, #1
 2879 001e 83F83820 		strb	r2, [r3, #56]
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_BUSY;
 2880              		.loc 1 1445 0 is_stmt 1 discriminator 2
 2881 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 76


 2882 0024 0222     		movs	r2, #2
 2883 0026 83F83920 		strb	r2, [r3, #57]
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 2884              		.loc 1 1448 0 discriminator 2
 2885 002a 7B68     		ldr	r3, [r7, #4]
 2886 002c 1B68     		ldr	r3, [r3]
 2887 002e DB68     		ldr	r3, [r3, #12]
 2888 0030 FB60     		str	r3, [r7, #12]
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 2889              		.loc 1 1451 0 discriminator 2
 2890 0032 FB68     		ldr	r3, [r7, #12]
 2891 0034 23F00C03 		bic	r3, r3, #12
 2892 0038 FB60     		str	r3, [r7, #12]
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 2893              		.loc 1 1454 0 discriminator 2
 2894 003a FB68     		ldr	r3, [r7, #12]
 2895 003c 43F00403 		orr	r3, r3, #4
 2896 0040 FB60     		str	r3, [r7, #12]
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 = (uint32_t)tmpreg;
 2897              		.loc 1 1457 0 discriminator 2
 2898 0042 7B68     		ldr	r3, [r7, #4]
 2899 0044 1B68     		ldr	r3, [r3]
 2900 0046 FA68     		ldr	r2, [r7, #12]
 2901 0048 DA60     		str	r2, [r3, #12]
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State = HAL_UART_STATE_READY;
 2902              		.loc 1 1459 0 discriminator 2
 2903 004a 7B68     		ldr	r3, [r7, #4]
 2904 004c 0122     		movs	r2, #1
 2905 004e 83F83920 		strb	r2, [r3, #57]
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2906              		.loc 1 1462 0 discriminator 2
 2907 0052 7B68     		ldr	r3, [r7, #4]
 2908 0054 0022     		movs	r2, #0
 2909 0056 83F83820 		strb	r2, [r3, #56]
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
 2910              		.loc 1 1464 0 discriminator 2
 2911 005a 0023     		movs	r3, #0
 2912              	.L144:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2913              		.loc 1 1465 0
 2914 005c 1846     		mov	r0, r3
 2915 005e 1437     		adds	r7, r7, #20
 2916 0060 BD46     		mov	sp, r7
 2917              		@ sp needed
 2918 0062 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccfrOaPN.s 			page 77


 2919 0066 7047     		bx	lr
 2920              		.cfi_endproc
 2921              	.LFE151:
 2923              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2924              		.align	2
 2925              		.global	HAL_UART_GetState
 2926              		.thumb
 2927              		.thumb_func
 2929              	HAL_UART_GetState:
 2930              	.LFB152:
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2931              		.loc 1 1496 0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 8
 2934              		@ frame_needed = 1, uses_anonymous_args = 0
 2935              		@ link register save eliminated.
 2936 0000 80B4     		push	{r7}
 2937              	.LCFI81:
 2938              		.cfi_def_cfa_offset 4
 2939              		.cfi_offset 7, -4
 2940 0002 83B0     		sub	sp, sp, #12
 2941              	.LCFI82:
 2942              		.cfi_def_cfa_offset 16
 2943 0004 00AF     		add	r7, sp, #0
 2944              	.LCFI83:
 2945              		.cfi_def_cfa_register 7
 2946 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 78


1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->State;
 2947              		.loc 1 1497 0
 2948 0008 7B68     		ldr	r3, [r7, #4]
 2949 000a 93F83930 		ldrb	r3, [r3, #57]
 2950 000e DBB2     		uxtb	r3, r3
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2951              		.loc 1 1498 0
 2952 0010 1846     		mov	r0, r3
 2953 0012 0C37     		adds	r7, r7, #12
 2954 0014 BD46     		mov	sp, r7
 2955              		@ sp needed
 2956 0016 5DF8047B 		ldr	r7, [sp], #4
 2957 001a 7047     		bx	lr
 2958              		.cfi_endproc
 2959              	.LFE152:
 2961              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2962              		.align	2
 2963              		.global	HAL_UART_GetError
 2964              		.thumb
 2965              		.thumb_func
 2967              	HAL_UART_GetError:
 2968              	.LFB153:
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** * @brief  Return the UART error code
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** * @param  huart : pointer to a UART_HandleTypeDef structure that contains
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** * @retval UART Error Code
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2969              		.loc 1 1507 0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 8
 2972              		@ frame_needed = 1, uses_anonymous_args = 0
 2973              		@ link register save eliminated.
 2974 0000 80B4     		push	{r7}
 2975              	.LCFI84:
 2976              		.cfi_def_cfa_offset 4
 2977              		.cfi_offset 7, -4
 2978 0002 83B0     		sub	sp, sp, #12
 2979              	.LCFI85:
 2980              		.cfi_def_cfa_offset 16
 2981 0004 00AF     		add	r7, sp, #0
 2982              	.LCFI86:
 2983              		.cfi_def_cfa_register 7
 2984 0006 7860     		str	r0, [r7, #4]
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 2985              		.loc 1 1508 0
 2986 0008 7B68     		ldr	r3, [r7, #4]
 2987 000a DB6B     		ldr	r3, [r3, #60]
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2988              		.loc 1 1509 0
 2989 000c 1846     		mov	r0, r3
 2990 000e 0C37     		adds	r7, r7, #12
 2991 0010 BD46     		mov	sp, r7
 2992              		@ sp needed
ARM GAS  /tmp/ccfrOaPN.s 			page 79


 2993 0012 5DF8047B 		ldr	r7, [sp], #4
 2994 0016 7047     		bx	lr
 2995              		.cfi_endproc
 2996              	.LFE153:
 2998              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2999              		.align	2
 3000              		.thumb
 3001              		.thumb_func
 3003              	UART_DMATransmitCplt:
 3004              	.LFB154:
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3005              		.loc 1 1521 0
 3006              		.cfi_startproc
 3007              		@ args = 0, pretend = 0, frame = 16
 3008              		@ frame_needed = 1, uses_anonymous_args = 0
 3009 0000 80B5     		push	{r7, lr}
 3010              	.LCFI87:
 3011              		.cfi_def_cfa_offset 8
 3012              		.cfi_offset 7, -8
 3013              		.cfi_offset 14, -4
 3014 0002 84B0     		sub	sp, sp, #16
 3015              	.LCFI88:
 3016              		.cfi_def_cfa_offset 24
 3017 0004 00AF     		add	r7, sp, #0
 3018              	.LCFI89:
 3019              		.cfi_def_cfa_register 7
 3020 0006 7860     		str	r0, [r7, #4]
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3021              		.loc 1 1522 0
 3022 0008 7B68     		ldr	r3, [r7, #4]
 3023 000a 9B6B     		ldr	r3, [r3, #56]
 3024 000c FB60     		str	r3, [r7, #12]
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 3025              		.loc 1 1524 0
 3026 000e 7B68     		ldr	r3, [r7, #4]
 3027 0010 1B68     		ldr	r3, [r3]
 3028 0012 1B68     		ldr	r3, [r3]
 3029 0014 03F48073 		and	r3, r3, #256
 3030 0018 002B     		cmp	r3, #0
 3031 001a 13D1     		bne	.L150
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0;
 3032              		.loc 1 1526 0
 3033 001c FB68     		ldr	r3, [r7, #12]
 3034 001e 0022     		movs	r2, #0
ARM GAS  /tmp/ccfrOaPN.s 			page 80


 3035 0020 DA84     		strh	r2, [r3, #38]	@ movhi
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAT);
 3036              		.loc 1 1530 0
 3037 0022 FB68     		ldr	r3, [r7, #12]
 3038 0024 1B68     		ldr	r3, [r3]
 3039 0026 FA68     		ldr	r2, [r7, #12]
 3040 0028 1268     		ldr	r2, [r2]
 3041 002a 5269     		ldr	r2, [r2, #20]
 3042 002c 22F08002 		bic	r2, r2, #128
 3043 0030 5A61     		str	r2, [r3, #20]
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 3044              		.loc 1 1533 0
 3045 0032 FB68     		ldr	r3, [r7, #12]
 3046 0034 1B68     		ldr	r3, [r3]
 3047 0036 FA68     		ldr	r2, [r7, #12]
 3048 0038 1268     		ldr	r2, [r2]
 3049 003a D268     		ldr	r2, [r2, #12]
 3050 003c 42F04002 		orr	r2, r2, #64
 3051 0040 DA60     		str	r2, [r3, #12]
 3052 0042 02E0     		b	.L149
 3053              	.L150:
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 3054              		.loc 1 1538 0
 3055 0044 F868     		ldr	r0, [r7, #12]
 3056 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3057              	.L149:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3058              		.loc 1 1540 0
 3059 004a 1037     		adds	r7, r7, #16
 3060 004c BD46     		mov	sp, r7
 3061              		@ sp needed
 3062 004e 80BD     		pop	{r7, pc}
 3063              		.cfi_endproc
 3064              	.LFE154:
 3066              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3067              		.align	2
 3068              		.thumb
 3069              		.thumb_func
 3071              	UART_DMATxHalfCplt:
 3072              	.LFB155:
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccfrOaPN.s 			page 81


1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3073              		.loc 1 1549 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 16
 3076              		@ frame_needed = 1, uses_anonymous_args = 0
 3077 0000 80B5     		push	{r7, lr}
 3078              	.LCFI90:
 3079              		.cfi_def_cfa_offset 8
 3080              		.cfi_offset 7, -8
 3081              		.cfi_offset 14, -4
 3082 0002 84B0     		sub	sp, sp, #16
 3083              	.LCFI91:
 3084              		.cfi_def_cfa_offset 24
 3085 0004 00AF     		add	r7, sp, #0
 3086              	.LCFI92:
 3087              		.cfi_def_cfa_register 7
 3088 0006 7860     		str	r0, [r7, #4]
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3089              		.loc 1 1550 0
 3090 0008 7B68     		ldr	r3, [r7, #4]
 3091 000a 9B6B     		ldr	r3, [r3, #56]
 3092 000c FB60     		str	r3, [r7, #12]
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 3093              		.loc 1 1552 0
 3094 000e F868     		ldr	r0, [r7, #12]
 3095 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3096              		.loc 1 1553 0
 3097 0014 1037     		adds	r7, r7, #16
 3098 0016 BD46     		mov	sp, r7
 3099              		@ sp needed
 3100 0018 80BD     		pop	{r7, pc}
 3101              		.cfi_endproc
 3102              	.LFE155:
 3104 001a 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 3105              		.align	2
 3106              		.thumb
 3107              		.thumb_func
 3109              	UART_DMAReceiveCplt:
 3110              	.LFB156:
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)  
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3111              		.loc 1 1561 0
 3112              		.cfi_startproc
 3113              		@ args = 0, pretend = 0, frame = 16
 3114              		@ frame_needed = 1, uses_anonymous_args = 0
 3115 0000 80B5     		push	{r7, lr}
 3116              	.LCFI93:
 3117              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccfrOaPN.s 			page 82


 3118              		.cfi_offset 7, -8
 3119              		.cfi_offset 14, -4
 3120 0002 84B0     		sub	sp, sp, #16
 3121              	.LCFI94:
 3122              		.cfi_def_cfa_offset 24
 3123 0004 00AF     		add	r7, sp, #0
 3124              	.LCFI95:
 3125              		.cfi_def_cfa_register 7
 3126 0006 7860     		str	r0, [r7, #4]
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3127              		.loc 1 1562 0
 3128 0008 7B68     		ldr	r3, [r7, #4]
 3129 000a 9B6B     		ldr	r3, [r3, #56]
 3130 000c FB60     		str	r3, [r7, #12]
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 3131              		.loc 1 1564 0
 3132 000e 7B68     		ldr	r3, [r7, #4]
 3133 0010 1B68     		ldr	r3, [r3]
 3134 0012 1B68     		ldr	r3, [r3]
 3135 0014 03F48073 		and	r3, r3, #256
 3136 0018 002B     		cmp	r3, #0
 3137 001a 19D1     		bne	.L154
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0;
 3138              		.loc 1 1566 0
 3139 001c FB68     		ldr	r3, [r7, #12]
 3140 001e 0022     		movs	r2, #0
 3141 0020 DA85     		strh	r2, [r3, #46]	@ movhi
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAR);
 3142              		.loc 1 1570 0
 3143 0022 FB68     		ldr	r3, [r7, #12]
 3144 0024 1B68     		ldr	r3, [r3]
 3145 0026 FA68     		ldr	r2, [r7, #12]
 3146 0028 1268     		ldr	r2, [r2]
 3147 002a 5269     		ldr	r2, [r2, #20]
 3148 002c 22F04002 		bic	r2, r2, #64
 3149 0030 5A61     		str	r2, [r3, #20]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if a transmit process is ongoing or not */
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 3150              		.loc 1 1573 0
 3151 0032 FB68     		ldr	r3, [r7, #12]
 3152 0034 93F83930 		ldrb	r3, [r3, #57]
 3153 0038 DBB2     		uxtb	r3, r3
 3154 003a 322B     		cmp	r3, #50
 3155 003c 04D1     		bne	.L155
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_BUSY_TX;
 3156              		.loc 1 1575 0
 3157 003e FB68     		ldr	r3, [r7, #12]
 3158 0040 1222     		movs	r2, #18
 3159 0042 83F83920 		strb	r2, [r3, #57]
 3160 0046 03E0     		b	.L154
ARM GAS  /tmp/ccfrOaPN.s 			page 83


 3161              	.L155:
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->State = HAL_UART_STATE_READY;
 3162              		.loc 1 1579 0
 3163 0048 FB68     		ldr	r3, [r7, #12]
 3164 004a 0122     		movs	r2, #1
 3165 004c 83F83920 		strb	r2, [r3, #57]
 3166              	.L154:
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 3167              		.loc 1 1582 0
 3168 0050 F868     		ldr	r0, [r7, #12]
 3169 0052 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3170              		.loc 1 1583 0
 3171 0056 1037     		adds	r7, r7, #16
 3172 0058 BD46     		mov	sp, r7
 3173              		@ sp needed
 3174 005a 80BD     		pop	{r7, pc}
 3175              		.cfi_endproc
 3176              	.LFE156:
 3178              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 3179              		.align	2
 3180              		.thumb
 3181              		.thumb_func
 3183              	UART_DMARxHalfCplt:
 3184              	.LFB157:
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3185              		.loc 1 1592 0
 3186              		.cfi_startproc
 3187              		@ args = 0, pretend = 0, frame = 16
 3188              		@ frame_needed = 1, uses_anonymous_args = 0
 3189 0000 80B5     		push	{r7, lr}
 3190              	.LCFI96:
 3191              		.cfi_def_cfa_offset 8
 3192              		.cfi_offset 7, -8
 3193              		.cfi_offset 14, -4
 3194 0002 84B0     		sub	sp, sp, #16
 3195              	.LCFI97:
 3196              		.cfi_def_cfa_offset 24
 3197 0004 00AF     		add	r7, sp, #0
 3198              	.LCFI98:
 3199              		.cfi_def_cfa_register 7
 3200 0006 7860     		str	r0, [r7, #4]
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3201              		.loc 1 1593 0
ARM GAS  /tmp/ccfrOaPN.s 			page 84


 3202 0008 7B68     		ldr	r3, [r7, #4]
 3203 000a 9B6B     		ldr	r3, [r3, #56]
 3204 000c FB60     		str	r3, [r7, #12]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
 3205              		.loc 1 1595 0
 3206 000e F868     		ldr	r0, [r7, #12]
 3207 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3208              		.loc 1 1596 0
 3209 0014 1037     		adds	r7, r7, #16
 3210 0016 BD46     		mov	sp, r7
 3211              		@ sp needed
 3212 0018 80BD     		pop	{r7, pc}
 3213              		.cfi_endproc
 3214              	.LFE157:
 3216 001a 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 3217              		.align	2
 3218              		.thumb
 3219              		.thumb_func
 3221              	UART_DMAError:
 3222              	.LFB158:
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)   
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3223              		.loc 1 1604 0
 3224              		.cfi_startproc
 3225              		@ args = 0, pretend = 0, frame = 16
 3226              		@ frame_needed = 1, uses_anonymous_args = 0
 3227 0000 80B5     		push	{r7, lr}
 3228              	.LCFI99:
 3229              		.cfi_def_cfa_offset 8
 3230              		.cfi_offset 7, -8
 3231              		.cfi_offset 14, -4
 3232 0002 84B0     		sub	sp, sp, #16
 3233              	.LCFI100:
 3234              		.cfi_def_cfa_offset 24
 3235 0004 00AF     		add	r7, sp, #0
 3236              	.LCFI101:
 3237              		.cfi_def_cfa_register 7
 3238 0006 7860     		str	r0, [r7, #4]
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3239              		.loc 1 1605 0
 3240 0008 7B68     		ldr	r3, [r7, #4]
 3241 000a 9B6B     		ldr	r3, [r3, #56]
 3242 000c FB60     		str	r3, [r7, #12]
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0;
 3243              		.loc 1 1606 0
 3244 000e FB68     		ldr	r3, [r7, #12]
 3245 0010 0022     		movs	r2, #0
 3246 0012 DA85     		strh	r2, [r3, #46]	@ movhi
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0;
ARM GAS  /tmp/ccfrOaPN.s 			page 85


 3247              		.loc 1 1607 0
 3248 0014 FB68     		ldr	r3, [r7, #12]
 3249 0016 0022     		movs	r2, #0
 3250 0018 DA84     		strh	r2, [r3, #38]	@ movhi
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->State= HAL_UART_STATE_READY;
 3251              		.loc 1 1608 0
 3252 001a FB68     		ldr	r3, [r7, #12]
 3253 001c 0122     		movs	r2, #1
 3254 001e 83F83920 		strb	r2, [r3, #57]
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 3255              		.loc 1 1609 0
 3256 0022 FB68     		ldr	r3, [r7, #12]
 3257 0024 DB6B     		ldr	r3, [r3, #60]
 3258 0026 43F01002 		orr	r2, r3, #16
 3259 002a FB68     		ldr	r3, [r7, #12]
 3260 002c DA63     		str	r2, [r3, #60]
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3261              		.loc 1 1610 0
 3262 002e F868     		ldr	r0, [r7, #12]
 3263 0030 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3264              		.loc 1 1611 0
 3265 0034 1037     		adds	r7, r7, #16
 3266 0036 BD46     		mov	sp, r7
 3267              		@ sp needed
 3268 0038 80BD     		pop	{r7, pc}
 3269              		.cfi_endproc
 3270              	.LFE158:
 3272 003a 00BF     		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3273              		.align	2
 3274              		.thumb
 3275              		.thumb_func
 3277              	UART_WaitOnFlagUntilTimeout:
 3278              	.LFB159:
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3279              		.loc 1 1623 0
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 24
 3282              		@ frame_needed = 1, uses_anonymous_args = 0
 3283 0000 80B5     		push	{r7, lr}
 3284              	.LCFI102:
 3285              		.cfi_def_cfa_offset 8
 3286              		.cfi_offset 7, -8
 3287              		.cfi_offset 14, -4
 3288 0002 86B0     		sub	sp, sp, #24
 3289              	.LCFI103:
ARM GAS  /tmp/ccfrOaPN.s 			page 86


 3290              		.cfi_def_cfa_offset 32
 3291 0004 00AF     		add	r7, sp, #0
 3292              	.LCFI104:
 3293              		.cfi_def_cfa_register 7
 3294 0006 F860     		str	r0, [r7, #12]
 3295 0008 B960     		str	r1, [r7, #8]
 3296 000a 3B60     		str	r3, [r7]
 3297 000c 1346     		mov	r3, r2
 3298 000e FB71     		strb	r3, [r7, #7]
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0;
 3299              		.loc 1 1624 0
 3300 0010 0023     		movs	r3, #0
 3301 0012 7B61     		str	r3, [r7, #20]
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Get tick */ 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tickstart = HAL_GetTick();
 3302              		.loc 1 1627 0
 3303 0014 FFF7FEFF 		bl	HAL_GetTick
 3304 0018 7861     		str	r0, [r7, #20]
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(Status == RESET)
 3305              		.loc 1 1630 0
 3306 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3307 001c 002B     		cmp	r3, #0
 3308 001e 42D1     		bne	.L159
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) == RESET)
 3309              		.loc 1 1632 0
 3310 0020 38E0     		b	.L160
 3311              	.L163:
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
 3312              		.loc 1 1635 0
 3313 0022 3B68     		ldr	r3, [r7]
 3314 0024 B3F1FF3F 		cmp	r3, #-1
 3315 0028 34D0     		beq	.L160
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 3316              		.loc 1 1637 0
 3317 002a 3B68     		ldr	r3, [r7]
 3318 002c 002B     		cmp	r3, #0
 3319 002e 07D0     		beq	.L161
 3320              		.loc 1 1637 0 is_stmt 0 discriminator 1
 3321 0030 FFF7FEFF 		bl	HAL_GetTick
 3322 0034 0246     		mov	r2, r0
 3323 0036 7B69     		ldr	r3, [r7, #20]
 3324 0038 D21A     		subs	r2, r2, r3
 3325 003a 3B68     		ldr	r3, [r7]
 3326 003c 9A42     		cmp	r2, r3
 3327 003e 29D9     		bls	.L160
 3328              	.L161:
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 3329              		.loc 1 1640 0 is_stmt 1
ARM GAS  /tmp/ccfrOaPN.s 			page 87


 3330 0040 FB68     		ldr	r3, [r7, #12]
 3331 0042 1B68     		ldr	r3, [r3]
 3332 0044 FA68     		ldr	r2, [r7, #12]
 3333 0046 1268     		ldr	r2, [r2]
 3334 0048 D268     		ldr	r2, [r2, #12]
 3335 004a 22F08002 		bic	r2, r2, #128
 3336 004e DA60     		str	r2, [r3, #12]
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 3337              		.loc 1 1641 0
 3338 0050 FB68     		ldr	r3, [r7, #12]
 3339 0052 1B68     		ldr	r3, [r3]
 3340 0054 FA68     		ldr	r2, [r7, #12]
 3341 0056 1268     		ldr	r2, [r2]
 3342 0058 D268     		ldr	r2, [r2, #12]
 3343 005a 22F02002 		bic	r2, r2, #32
 3344 005e DA60     		str	r2, [r3, #12]
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 3345              		.loc 1 1642 0
 3346 0060 FB68     		ldr	r3, [r7, #12]
 3347 0062 1B68     		ldr	r3, [r3]
 3348 0064 FA68     		ldr	r2, [r7, #12]
 3349 0066 1268     		ldr	r2, [r2]
 3350 0068 D268     		ldr	r2, [r2, #12]
 3351 006a 22F48072 		bic	r2, r2, #256
 3352 006e DA60     		str	r2, [r3, #12]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 3353              		.loc 1 1643 0
 3354 0070 FB68     		ldr	r3, [r7, #12]
 3355 0072 1B68     		ldr	r3, [r3]
 3356 0074 FA68     		ldr	r2, [r7, #12]
 3357 0076 1268     		ldr	r2, [r2]
 3358 0078 5269     		ldr	r2, [r2, #20]
 3359 007a 22F00102 		bic	r2, r2, #1
 3360 007e 5A61     		str	r2, [r3, #20]
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->State= HAL_UART_STATE_READY;
 3361              		.loc 1 1645 0
 3362 0080 FB68     		ldr	r3, [r7, #12]
 3363 0082 0122     		movs	r2, #1
 3364 0084 83F83920 		strb	r2, [r3, #57]
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Process Unlocked */
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 3365              		.loc 1 1648 0
 3366 0088 FB68     		ldr	r3, [r7, #12]
 3367 008a 0022     		movs	r2, #0
 3368 008c 83F83820 		strb	r2, [r3, #56]
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3369              		.loc 1 1650 0
 3370 0090 0323     		movs	r3, #3
 3371 0092 4BE0     		b	.L162
 3372              	.L160:
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3373              		.loc 1 1632 0 discriminator 1
 3374 0094 FB68     		ldr	r3, [r7, #12]
 3375 0096 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfrOaPN.s 			page 88


 3376 0098 1A68     		ldr	r2, [r3]
 3377 009a BB68     		ldr	r3, [r7, #8]
 3378 009c 1A40     		ands	r2, r2, r3
 3379 009e BB68     		ldr	r3, [r7, #8]
 3380 00a0 9A42     		cmp	r2, r3
 3381 00a2 BED1     		bne	.L163
 3382 00a4 41E0     		b	.L164
 3383              	.L159:
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(__HAL_UART_GET_FLAG(huart, Flag) != RESET)
 3384              		.loc 1 1657 0
 3385 00a6 38E0     		b	.L165
 3386              	.L167:
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(Timeout != HAL_MAX_DELAY)
 3387              		.loc 1 1660 0
 3388 00a8 3B68     		ldr	r3, [r7]
 3389 00aa B3F1FF3F 		cmp	r3, #-1
 3390 00ae 34D0     		beq	.L165
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 3391              		.loc 1 1662 0
 3392 00b0 3B68     		ldr	r3, [r7]
 3393 00b2 002B     		cmp	r3, #0
 3394 00b4 07D0     		beq	.L166
 3395              		.loc 1 1662 0 is_stmt 0 discriminator 1
 3396 00b6 FFF7FEFF 		bl	HAL_GetTick
 3397 00ba 0246     		mov	r2, r0
 3398 00bc 7B69     		ldr	r3, [r7, #20]
 3399 00be D21A     		subs	r2, r2, r3
 3400 00c0 3B68     		ldr	r3, [r7]
 3401 00c2 9A42     		cmp	r2, r3
 3402 00c4 29D9     		bls	.L165
 3403              	.L166:
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 3404              		.loc 1 1665 0 is_stmt 1
 3405 00c6 FB68     		ldr	r3, [r7, #12]
 3406 00c8 1B68     		ldr	r3, [r3]
 3407 00ca FA68     		ldr	r2, [r7, #12]
 3408 00cc 1268     		ldr	r2, [r2]
 3409 00ce D268     		ldr	r2, [r2, #12]
 3410 00d0 22F08002 		bic	r2, r2, #128
 3411 00d4 DA60     		str	r2, [r3, #12]
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 3412              		.loc 1 1666 0
 3413 00d6 FB68     		ldr	r3, [r7, #12]
 3414 00d8 1B68     		ldr	r3, [r3]
 3415 00da FA68     		ldr	r2, [r7, #12]
 3416 00dc 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccfrOaPN.s 			page 89


 3417 00de D268     		ldr	r2, [r2, #12]
 3418 00e0 22F02002 		bic	r2, r2, #32
 3419 00e4 DA60     		str	r2, [r3, #12]
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 3420              		.loc 1 1667 0
 3421 00e6 FB68     		ldr	r3, [r7, #12]
 3422 00e8 1B68     		ldr	r3, [r3]
 3423 00ea FA68     		ldr	r2, [r7, #12]
 3424 00ec 1268     		ldr	r2, [r2]
 3425 00ee D268     		ldr	r2, [r2, #12]
 3426 00f0 22F48072 		bic	r2, r2, #256
 3427 00f4 DA60     		str	r2, [r3, #12]
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 3428              		.loc 1 1668 0
 3429 00f6 FB68     		ldr	r3, [r7, #12]
 3430 00f8 1B68     		ldr	r3, [r3]
 3431 00fa FA68     		ldr	r2, [r7, #12]
 3432 00fc 1268     		ldr	r2, [r2]
 3433 00fe 5269     		ldr	r2, [r2, #20]
 3434 0100 22F00102 		bic	r2, r2, #1
 3435 0104 5A61     		str	r2, [r3, #20]
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->State= HAL_UART_STATE_READY;
 3436              		.loc 1 1670 0
 3437 0106 FB68     		ldr	r3, [r7, #12]
 3438 0108 0122     		movs	r2, #1
 3439 010a 83F83920 		strb	r2, [r3, #57]
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Process Unlocked */
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 3440              		.loc 1 1673 0
 3441 010e FB68     		ldr	r3, [r7, #12]
 3442 0110 0022     		movs	r2, #0
 3443 0112 83F83820 		strb	r2, [r3, #56]
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3444              		.loc 1 1675 0
 3445 0116 0323     		movs	r3, #3
 3446 0118 08E0     		b	.L162
 3447              	.L165:
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3448              		.loc 1 1657 0 discriminator 1
 3449 011a FB68     		ldr	r3, [r7, #12]
 3450 011c 1B68     		ldr	r3, [r3]
 3451 011e 1A68     		ldr	r2, [r3]
 3452 0120 BB68     		ldr	r3, [r7, #8]
 3453 0122 1A40     		ands	r2, r2, r3
 3454 0124 BB68     		ldr	r3, [r7, #8]
 3455 0126 9A42     		cmp	r2, r3
 3456 0128 BED0     		beq	.L167
 3457              	.L164:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3458              		.loc 1 1680 0
ARM GAS  /tmp/ccfrOaPN.s 			page 90


 3459 012a 0023     		movs	r3, #0
 3460              	.L162:
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3461              		.loc 1 1681 0
 3462 012c 1846     		mov	r0, r3
 3463 012e 1837     		adds	r7, r7, #24
 3464 0130 BD46     		mov	sp, r7
 3465              		@ sp needed
 3466 0132 80BD     		pop	{r7, pc}
 3467              		.cfi_endproc
 3468              	.LFE159:
 3470              		.section	.text.UART_Transmit_IT,"ax",%progbits
 3471              		.align	2
 3472              		.thumb
 3473              		.thumb_func
 3475              	UART_Transmit_IT:
 3476              	.LFB160:
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3477              		.loc 1 1690 0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 16
 3480              		@ frame_needed = 1, uses_anonymous_args = 0
 3481              		@ link register save eliminated.
 3482 0000 80B4     		push	{r7}
 3483              	.LCFI105:
 3484              		.cfi_def_cfa_offset 4
 3485              		.cfi_offset 7, -4
 3486 0002 85B0     		sub	sp, sp, #20
 3487              	.LCFI106:
 3488              		.cfi_def_cfa_offset 24
 3489 0004 00AF     		add	r7, sp, #0
 3490              	.LCFI107:
 3491              		.cfi_def_cfa_register 7
 3492 0006 7860     		str	r0, [r7, #4]
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp1 = 0;
 3493              		.loc 1 1692 0
 3494 0008 0023     		movs	r3, #0
 3495 000a FB60     		str	r3, [r7, #12]
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = huart->State;
 3496              		.loc 1 1694 0
 3497 000c 7B68     		ldr	r3, [r7, #4]
 3498 000e 93F83930 		ldrb	r3, [r3, #57]
 3499 0012 DBB2     		uxtb	r3, r3
 3500 0014 FB60     		str	r3, [r7, #12]
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 == HAL_UART_STATE_BUSY_TX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
 3501              		.loc 1 1695 0
 3502 0016 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccfrOaPN.s 			page 91


 3503 0018 122B     		cmp	r3, #18
 3504 001a 02D0     		beq	.L169
 3505              		.loc 1 1695 0 is_stmt 0 discriminator 1
 3506 001c FB68     		ldr	r3, [r7, #12]
 3507 001e 322B     		cmp	r3, #50
 3508 0020 43D1     		bne	.L170
 3509              	.L169:
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 3510              		.loc 1 1697 0 is_stmt 1
 3511 0022 7B68     		ldr	r3, [r7, #4]
 3512 0024 9B68     		ldr	r3, [r3, #8]
 3513 0026 B3F5805F 		cmp	r3, #4096
 3514 002a 19D1     		bne	.L171
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
 3515              		.loc 1 1699 0
 3516 002c 7B68     		ldr	r3, [r7, #4]
 3517 002e 1B6A     		ldr	r3, [r3, #32]
 3518 0030 BB60     		str	r3, [r7, #8]
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 3519              		.loc 1 1700 0
 3520 0032 7B68     		ldr	r3, [r7, #4]
 3521 0034 1B68     		ldr	r3, [r3]
 3522 0036 BA68     		ldr	r2, [r7, #8]
 3523 0038 1288     		ldrh	r2, [r2]
 3524 003a C2F30802 		ubfx	r2, r2, #0, #9
 3525 003e 5A60     		str	r2, [r3, #4]
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3526              		.loc 1 1701 0
 3527 0040 7B68     		ldr	r3, [r7, #4]
 3528 0042 1B69     		ldr	r3, [r3, #16]
 3529 0044 002B     		cmp	r3, #0
 3530 0046 05D1     		bne	.L172
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
 3531              		.loc 1 1703 0
 3532 0048 7B68     		ldr	r3, [r7, #4]
 3533 004a 1B6A     		ldr	r3, [r3, #32]
 3534 004c 9A1C     		adds	r2, r3, #2
 3535 004e 7B68     		ldr	r3, [r7, #4]
 3536 0050 1A62     		str	r2, [r3, #32]
 3537 0052 0EE0     		b	.L174
 3538              	.L172:
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1;
 3539              		.loc 1 1707 0
 3540 0054 7B68     		ldr	r3, [r7, #4]
 3541 0056 1B6A     		ldr	r3, [r3, #32]
 3542 0058 5A1C     		adds	r2, r3, #1
 3543 005a 7B68     		ldr	r3, [r7, #4]
 3544 005c 1A62     		str	r2, [r3, #32]
 3545 005e 08E0     		b	.L174
 3546              	.L171:
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  /tmp/ccfrOaPN.s 			page 92


1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 3547              		.loc 1 1712 0
 3548 0060 7B68     		ldr	r3, [r7, #4]
 3549 0062 1A68     		ldr	r2, [r3]
 3550 0064 7B68     		ldr	r3, [r7, #4]
 3551 0066 1B6A     		ldr	r3, [r3, #32]
 3552 0068 581C     		adds	r0, r3, #1
 3553 006a 7968     		ldr	r1, [r7, #4]
 3554 006c 0862     		str	r0, [r1, #32]
 3555 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3556 0070 5360     		str	r3, [r2, #4]
 3557              	.L174:
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0)
 3558              		.loc 1 1715 0
 3559 0072 7B68     		ldr	r3, [r7, #4]
 3560 0074 DB8C     		ldrh	r3, [r3, #38]
 3561 0076 013B     		subs	r3, r3, #1
 3562 0078 9AB2     		uxth	r2, r3
 3563 007a 7B68     		ldr	r3, [r7, #4]
 3564 007c DA84     		strh	r2, [r3, #38]	@ movhi
 3565 007e 7B68     		ldr	r3, [r7, #4]
 3566 0080 DB8C     		ldrh	r3, [r3, #38]
 3567 0082 002B     		cmp	r3, #0
 3568 0084 0FD1     		bne	.L175
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 3569              		.loc 1 1718 0
 3570 0086 7B68     		ldr	r3, [r7, #4]
 3571 0088 1B68     		ldr	r3, [r3]
 3572 008a 7A68     		ldr	r2, [r7, #4]
 3573 008c 1268     		ldr	r2, [r2]
 3574 008e D268     		ldr	r2, [r2, #12]
 3575 0090 22F08002 		bic	r2, r2, #128
 3576 0094 DA60     		str	r2, [r3, #12]
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 3577              		.loc 1 1721 0
 3578 0096 7B68     		ldr	r3, [r7, #4]
 3579 0098 1B68     		ldr	r3, [r3]
 3580 009a 7A68     		ldr	r2, [r7, #4]
 3581 009c 1268     		ldr	r2, [r2]
 3582 009e D268     		ldr	r2, [r2, #12]
 3583 00a0 42F04002 		orr	r2, r2, #64
 3584 00a4 DA60     		str	r2, [r3, #12]
 3585              	.L175:
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 3586              		.loc 1 1723 0
 3587 00a6 0023     		movs	r3, #0
 3588 00a8 00E0     		b	.L176
ARM GAS  /tmp/ccfrOaPN.s 			page 93


 3589              	.L170:
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3590              		.loc 1 1727 0
 3591 00aa 0223     		movs	r3, #2
 3592              	.L176:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3593              		.loc 1 1729 0
 3594 00ac 1846     		mov	r0, r3
 3595 00ae 1437     		adds	r7, r7, #20
 3596 00b0 BD46     		mov	sp, r7
 3597              		@ sp needed
 3598 00b2 5DF8047B 		ldr	r7, [sp], #4
 3599 00b6 7047     		bx	lr
 3600              		.cfi_endproc
 3601              	.LFE160:
 3603              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3604              		.align	2
 3605              		.thumb
 3606              		.thumb_func
 3608              	UART_EndTransmit_IT:
 3609              	.LFB161:
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3610              		.loc 1 1739 0
 3611              		.cfi_startproc
 3612              		@ args = 0, pretend = 0, frame = 8
 3613              		@ frame_needed = 1, uses_anonymous_args = 0
 3614 0000 80B5     		push	{r7, lr}
 3615              	.LCFI108:
 3616              		.cfi_def_cfa_offset 8
 3617              		.cfi_offset 7, -8
 3618              		.cfi_offset 14, -4
 3619 0002 82B0     		sub	sp, sp, #8
 3620              	.LCFI109:
 3621              		.cfi_def_cfa_offset 16
 3622 0004 00AF     		add	r7, sp, #0
 3623              	.LCFI110:
 3624              		.cfi_def_cfa_register 7
 3625 0006 7860     		str	r0, [r7, #4]
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 3626              		.loc 1 1741 0
 3627 0008 7B68     		ldr	r3, [r7, #4]
 3628 000a 1B68     		ldr	r3, [r3]
 3629 000c 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 94


 3630 000e 1268     		ldr	r2, [r2]
 3631 0010 D268     		ldr	r2, [r2, #12]
 3632 0012 22F04002 		bic	r2, r2, #64
 3633 0016 DA60     		str	r2, [r3, #12]
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if a receive process is ongoing or not */
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 3634              		.loc 1 1744 0
 3635 0018 7B68     		ldr	r3, [r7, #4]
 3636 001a 93F83930 		ldrb	r3, [r3, #57]
 3637 001e DBB2     		uxtb	r3, r3
 3638 0020 322B     		cmp	r3, #50
 3639 0022 04D1     		bne	.L178
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->State = HAL_UART_STATE_BUSY_RX;
 3640              		.loc 1 1746 0
 3641 0024 7B68     		ldr	r3, [r7, #4]
 3642 0026 2222     		movs	r2, #34
 3643 0028 83F83920 		strb	r2, [r3, #57]
 3644 002c 13E0     		b	.L179
 3645              	.L178:
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART Parity Error Interrupt */
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 3646              		.loc 1 1751 0
 3647 002e 7B68     		ldr	r3, [r7, #4]
 3648 0030 1B68     		ldr	r3, [r3]
 3649 0032 7A68     		ldr	r2, [r7, #4]
 3650 0034 1268     		ldr	r2, [r2]
 3651 0036 D268     		ldr	r2, [r2, #12]
 3652 0038 22F48072 		bic	r2, r2, #256
 3653 003c DA60     		str	r2, [r3, #12]
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 3654              		.loc 1 1754 0
 3655 003e 7B68     		ldr	r3, [r7, #4]
 3656 0040 1B68     		ldr	r3, [r3]
 3657 0042 7A68     		ldr	r2, [r7, #4]
 3658 0044 1268     		ldr	r2, [r2]
 3659 0046 5269     		ldr	r2, [r2, #20]
 3660 0048 22F00102 		bic	r2, r2, #1
 3661 004c 5A61     		str	r2, [r3, #20]
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->State = HAL_UART_STATE_READY;
 3662              		.loc 1 1756 0
 3663 004e 7B68     		ldr	r3, [r7, #4]
 3664 0050 0122     		movs	r2, #1
 3665 0052 83F83920 		strb	r2, [r3, #57]
 3666              	.L179:
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 3667              		.loc 1 1759 0
 3668 0056 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 95


 3669 0058 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3670              		.loc 1 1761 0
 3671 005c 0023     		movs	r3, #0
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3672              		.loc 1 1762 0
 3673 005e 1846     		mov	r0, r3
 3674 0060 0837     		adds	r7, r7, #8
 3675 0062 BD46     		mov	sp, r7
 3676              		@ sp needed
 3677 0064 80BD     		pop	{r7, pc}
 3678              		.cfi_endproc
 3679              	.LFE161:
 3681 0066 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 3682              		.align	2
 3683              		.thumb
 3684              		.thumb_func
 3686              	UART_Receive_IT:
 3687              	.LFB162:
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3688              		.loc 1 1771 0
 3689              		.cfi_startproc
 3690              		@ args = 0, pretend = 0, frame = 16
 3691              		@ frame_needed = 1, uses_anonymous_args = 0
 3692 0000 80B5     		push	{r7, lr}
 3693              	.LCFI111:
 3694              		.cfi_def_cfa_offset 8
 3695              		.cfi_offset 7, -8
 3696              		.cfi_offset 14, -4
 3697 0002 84B0     		sub	sp, sp, #16
 3698              	.LCFI112:
 3699              		.cfi_def_cfa_offset 24
 3700 0004 00AF     		add	r7, sp, #0
 3701              	.LCFI113:
 3702              		.cfi_def_cfa_register 7
 3703 0006 7860     		str	r0, [r7, #4]
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmp1 = 0;
 3704              		.loc 1 1773 0
 3705 0008 0023     		movs	r3, #0
 3706 000a FB60     		str	r3, [r7, #12]
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp1 = huart->State; 
 3707              		.loc 1 1775 0
 3708 000c 7B68     		ldr	r3, [r7, #4]
 3709 000e 93F83930 		ldrb	r3, [r3, #57]
 3710 0012 DBB2     		uxtb	r3, r3
 3711 0014 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccfrOaPN.s 			page 96


1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((tmp1 == HAL_UART_STATE_BUSY_RX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
 3712              		.loc 1 1776 0
 3713 0016 FB68     		ldr	r3, [r7, #12]
 3714 0018 222B     		cmp	r3, #34
 3715 001a 02D0     		beq	.L182
 3716              		.loc 1 1776 0 is_stmt 0 discriminator 1
 3717 001c FB68     		ldr	r3, [r7, #12]
 3718 001e 322B     		cmp	r3, #50
 3719 0020 7CD1     		bne	.L183
 3720              	.L182:
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 3721              		.loc 1 1778 0 is_stmt 1
 3722 0022 7B68     		ldr	r3, [r7, #4]
 3723 0024 9B68     		ldr	r3, [r3, #8]
 3724 0026 B3F5805F 		cmp	r3, #4096
 3725 002a 23D1     		bne	.L184
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
 3726              		.loc 1 1780 0
 3727 002c 7B68     		ldr	r3, [r7, #4]
 3728 002e 9B6A     		ldr	r3, [r3, #40]
 3729 0030 BB60     		str	r3, [r7, #8]
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3730              		.loc 1 1781 0
 3731 0032 7B68     		ldr	r3, [r7, #4]
 3732 0034 1B69     		ldr	r3, [r3, #16]
 3733 0036 002B     		cmp	r3, #0
 3734 0038 0ED1     		bne	.L185
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 3735              		.loc 1 1783 0
 3736 003a 7B68     		ldr	r3, [r7, #4]
 3737 003c 1B68     		ldr	r3, [r3]
 3738 003e 5B68     		ldr	r3, [r3, #4]
 3739 0040 9BB2     		uxth	r3, r3
 3740 0042 C3F30803 		ubfx	r3, r3, #0, #9
 3741 0046 9AB2     		uxth	r2, r3
 3742 0048 BB68     		ldr	r3, [r7, #8]
 3743 004a 1A80     		strh	r2, [r3]	@ movhi
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2;
 3744              		.loc 1 1784 0
 3745 004c 7B68     		ldr	r3, [r7, #4]
 3746 004e 9B6A     		ldr	r3, [r3, #40]
 3747 0050 9A1C     		adds	r2, r3, #2
 3748 0052 7B68     		ldr	r3, [r7, #4]
 3749 0054 9A62     		str	r2, [r3, #40]
 3750 0056 29E0     		b	.L187
 3751              	.L185:
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 3752              		.loc 1 1788 0
 3753 0058 7B68     		ldr	r3, [r7, #4]
 3754 005a 1B68     		ldr	r3, [r3]
 3755 005c 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 97


 3756 005e 9BB2     		uxth	r3, r3
 3757 0060 DBB2     		uxtb	r3, r3
 3758 0062 9AB2     		uxth	r2, r3
 3759 0064 BB68     		ldr	r3, [r7, #8]
 3760 0066 1A80     		strh	r2, [r3]	@ movhi
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1;
 3761              		.loc 1 1789 0
 3762 0068 7B68     		ldr	r3, [r7, #4]
 3763 006a 9B6A     		ldr	r3, [r3, #40]
 3764 006c 5A1C     		adds	r2, r3, #1
 3765 006e 7B68     		ldr	r3, [r7, #4]
 3766 0070 9A62     		str	r2, [r3, #40]
 3767 0072 1BE0     		b	.L187
 3768              	.L184:
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3769              		.loc 1 1794 0
 3770 0074 7B68     		ldr	r3, [r7, #4]
 3771 0076 1B69     		ldr	r3, [r3, #16]
 3772 0078 002B     		cmp	r3, #0
 3773 007a 0AD1     		bne	.L188
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 3774              		.loc 1 1796 0
 3775 007c 7B68     		ldr	r3, [r7, #4]
 3776 007e 9B6A     		ldr	r3, [r3, #40]
 3777 0080 591C     		adds	r1, r3, #1
 3778 0082 7A68     		ldr	r2, [r7, #4]
 3779 0084 9162     		str	r1, [r2, #40]
 3780 0086 7A68     		ldr	r2, [r7, #4]
 3781 0088 1268     		ldr	r2, [r2]
 3782 008a 5268     		ldr	r2, [r2, #4]
 3783 008c D2B2     		uxtb	r2, r2
 3784 008e 1A70     		strb	r2, [r3]
 3785 0090 0CE0     		b	.L187
 3786              	.L188:
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 3787              		.loc 1 1800 0
 3788 0092 7B68     		ldr	r3, [r7, #4]
 3789 0094 9B6A     		ldr	r3, [r3, #40]
 3790 0096 591C     		adds	r1, r3, #1
 3791 0098 7A68     		ldr	r2, [r7, #4]
 3792 009a 9162     		str	r1, [r2, #40]
 3793 009c 7A68     		ldr	r2, [r7, #4]
 3794 009e 1268     		ldr	r2, [r2]
 3795 00a0 5268     		ldr	r2, [r2, #4]
 3796 00a2 D2B2     		uxtb	r2, r2
 3797 00a4 02F07F02 		and	r2, r2, #127
 3798 00a8 D2B2     		uxtb	r2, r2
 3799 00aa 1A70     		strb	r2, [r3]
 3800              	.L187:
ARM GAS  /tmp/ccfrOaPN.s 			page 98


1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 3801              		.loc 1 1804 0
 3802 00ac 7B68     		ldr	r3, [r7, #4]
 3803 00ae DB8D     		ldrh	r3, [r3, #46]
 3804 00b0 013B     		subs	r3, r3, #1
 3805 00b2 9AB2     		uxth	r2, r3
 3806 00b4 7B68     		ldr	r3, [r7, #4]
 3807 00b6 DA85     		strh	r2, [r3, #46]	@ movhi
 3808 00b8 7B68     		ldr	r3, [r7, #4]
 3809 00ba DB8D     		ldrh	r3, [r3, #46]
 3810 00bc 002B     		cmp	r3, #0
 3811 00be 2BD1     		bne	.L189
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 3812              		.loc 1 1806 0
 3813 00c0 7B68     		ldr	r3, [r7, #4]
 3814 00c2 1B68     		ldr	r3, [r3]
 3815 00c4 7A68     		ldr	r2, [r7, #4]
 3816 00c6 1268     		ldr	r2, [r2]
 3817 00c8 D268     		ldr	r2, [r2, #12]
 3818 00ca 22F02002 		bic	r2, r2, #32
 3819 00ce DA60     		str	r2, [r3, #12]
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if a transmit process is ongoing or not */
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 3820              		.loc 1 1809 0
 3821 00d0 7B68     		ldr	r3, [r7, #4]
 3822 00d2 93F83930 		ldrb	r3, [r3, #57]
 3823 00d6 DBB2     		uxtb	r3, r3
 3824 00d8 322B     		cmp	r3, #50
 3825 00da 04D1     		bne	.L190
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->State = HAL_UART_STATE_BUSY_TX;
 3826              		.loc 1 1811 0
 3827 00dc 7B68     		ldr	r3, [r7, #4]
 3828 00de 1222     		movs	r2, #18
 3829 00e0 83F83920 		strb	r2, [r3, #57]
 3830 00e4 13E0     		b	.L191
 3831              	.L190:
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt */
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 3832              		.loc 1 1816 0
 3833 00e6 7B68     		ldr	r3, [r7, #4]
 3834 00e8 1B68     		ldr	r3, [r3]
 3835 00ea 7A68     		ldr	r2, [r7, #4]
 3836 00ec 1268     		ldr	r2, [r2]
 3837 00ee D268     		ldr	r2, [r2, #12]
 3838 00f0 22F48072 		bic	r2, r2, #256
 3839 00f4 DA60     		str	r2, [r3, #12]
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
ARM GAS  /tmp/ccfrOaPN.s 			page 99


1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 3840              		.loc 1 1819 0
 3841 00f6 7B68     		ldr	r3, [r7, #4]
 3842 00f8 1B68     		ldr	r3, [r3]
 3843 00fa 7A68     		ldr	r2, [r7, #4]
 3844 00fc 1268     		ldr	r2, [r2]
 3845 00fe 5269     		ldr	r2, [r2, #20]
 3846 0100 22F00102 		bic	r2, r2, #1
 3847 0104 5A61     		str	r2, [r3, #20]
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->State = HAL_UART_STATE_READY;
 3848              		.loc 1 1821 0
 3849 0106 7B68     		ldr	r3, [r7, #4]
 3850 0108 0122     		movs	r2, #1
 3851 010a 83F83920 		strb	r2, [r3, #57]
 3852              	.L191:
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 3853              		.loc 1 1823 0
 3854 010e 7868     		ldr	r0, [r7, #4]
 3855 0110 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 3856              		.loc 1 1825 0
 3857 0114 0023     		movs	r3, #0
 3858 0116 02E0     		b	.L192
 3859              	.L189:
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 3860              		.loc 1 1827 0
 3861 0118 0023     		movs	r3, #0
 3862 011a 00E0     		b	.L192
 3863              	.L183:
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 3864              		.loc 1 1831 0
 3865 011c 0223     		movs	r3, #2
 3866              	.L192:
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3867              		.loc 1 1833 0
 3868 011e 1846     		mov	r0, r3
 3869 0120 1037     		adds	r7, r7, #16
 3870 0122 BD46     		mov	sp, r7
 3871              		@ sp needed
 3872 0124 80BD     		pop	{r7, pc}
 3873              		.cfi_endproc
 3874              	.LFE162:
 3876 0126 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 3877              		.align	2
 3878              		.thumb
 3879              		.thumb_func
 3881              	UART_SetConfig:
 3882              	.LFB163:
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccfrOaPN.s 			page 100


1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3883              		.loc 1 1842 0
 3884              		.cfi_startproc
 3885              		@ args = 0, pretend = 0, frame = 16
 3886              		@ frame_needed = 1, uses_anonymous_args = 0
 3887 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3888              	.LCFI114:
 3889              		.cfi_def_cfa_offset 20
 3890              		.cfi_offset 4, -20
 3891              		.cfi_offset 5, -16
 3892              		.cfi_offset 6, -12
 3893              		.cfi_offset 7, -8
 3894              		.cfi_offset 14, -4
 3895 0002 85B0     		sub	sp, sp, #20
 3896              	.LCFI115:
 3897              		.cfi_def_cfa_offset 40
 3898 0004 00AF     		add	r7, sp, #0
 3899              	.LCFI116:
 3900              		.cfi_def_cfa_register 7
 3901 0006 7860     		str	r0, [r7, #4]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00;
 3902              		.loc 1 1843 0
 3903 0008 0023     		movs	r3, #0
 3904 000a FB60     		str	r3, [r7, #12]
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
 3905              		.loc 1 1852 0
 3906 000c 7B68     		ldr	r3, [r7, #4]
 3907 000e 1B68     		ldr	r3, [r3]
 3908 0010 1B69     		ldr	r3, [r3, #16]
 3909 0012 FB60     		str	r3, [r7, #12]
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 3910              		.loc 1 1855 0
 3911 0014 FB68     		ldr	r3, [r7, #12]
 3912 0016 23F44053 		bic	r3, r3, #12288
 3913 001a FB60     		str	r3, [r7, #12]
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 3914              		.loc 1 1858 0
 3915 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccfrOaPN.s 			page 101


 3916 001e DB68     		ldr	r3, [r3, #12]
 3917 0020 FA68     		ldr	r2, [r7, #12]
 3918 0022 1343     		orrs	r3, r3, r2
 3919 0024 FB60     		str	r3, [r7, #12]
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR2 = (uint32_t)tmpreg;
 3920              		.loc 1 1861 0
 3921 0026 7B68     		ldr	r3, [r7, #4]
 3922 0028 1B68     		ldr	r3, [r3]
 3923 002a FA68     		ldr	r2, [r7, #12]
 3924 002c 1A61     		str	r2, [r3, #16]
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 3925              		.loc 1 1864 0
 3926 002e 7B68     		ldr	r3, [r7, #4]
 3927 0030 1B68     		ldr	r3, [r3]
 3928 0032 DB68     		ldr	r3, [r3, #12]
 3929 0034 FB60     		str	r3, [r7, #12]
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 3930              		.loc 1 1867 0
 3931 0036 FB68     		ldr	r3, [r7, #12]
 3932 0038 23F41643 		bic	r3, r3, #38400
 3933 003c 23F00C03 		bic	r3, r3, #12
 3934 0040 FB60     		str	r3, [r7, #12]
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 3935              		.loc 1 1875 0
 3936 0042 7B68     		ldr	r3, [r7, #4]
 3937 0044 9A68     		ldr	r2, [r3, #8]
 3938 0046 7B68     		ldr	r3, [r7, #4]
 3939 0048 1B69     		ldr	r3, [r3, #16]
 3940 004a 1A43     		orrs	r2, r2, r3
 3941 004c 7B68     		ldr	r3, [r7, #4]
 3942 004e 5B69     		ldr	r3, [r3, #20]
 3943 0050 1A43     		orrs	r2, r2, r3
 3944 0052 7B68     		ldr	r3, [r7, #4]
 3945 0054 DB69     		ldr	r3, [r3, #28]
 3946 0056 1343     		orrs	r3, r3, r2
 3947 0058 FA68     		ldr	r2, [r7, #12]
 3948 005a 1343     		orrs	r3, r3, r2
 3949 005c FB60     		str	r3, [r7, #12]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR1 = (uint32_t)tmpreg;
 3950              		.loc 1 1878 0
 3951 005e 7B68     		ldr	r3, [r7, #4]
 3952 0060 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccfrOaPN.s 			page 102


 3953 0062 FA68     		ldr	r2, [r7, #12]
 3954 0064 DA60     		str	r2, [r3, #12]
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 3955              		.loc 1 1881 0
 3956 0066 7B68     		ldr	r3, [r7, #4]
 3957 0068 1B68     		ldr	r3, [r3]
 3958 006a 5B69     		ldr	r3, [r3, #20]
 3959 006c FB60     		str	r3, [r7, #12]
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 3960              		.loc 1 1884 0
 3961 006e FB68     		ldr	r3, [r7, #12]
 3962 0070 23F44073 		bic	r3, r3, #768
 3963 0074 FB60     		str	r3, [r7, #12]
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 3964              		.loc 1 1887 0
 3965 0076 7B68     		ldr	r3, [r7, #4]
 3966 0078 9B69     		ldr	r3, [r3, #24]
 3967 007a FA68     		ldr	r2, [r7, #12]
 3968 007c 1343     		orrs	r3, r3, r2
 3969 007e FB60     		str	r3, [r7, #12]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->Instance->CR3 = (uint32_t)tmpreg;
 3970              		.loc 1 1890 0
 3971 0080 7B68     		ldr	r3, [r7, #4]
 3972 0082 1B68     		ldr	r3, [r3]
 3973 0084 FA68     		ldr	r2, [r7, #12]
 3974 0086 5A61     		str	r2, [r3, #20]
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 3975              		.loc 1 1893 0
 3976 0088 7B68     		ldr	r3, [r7, #4]
 3977 008a DB69     		ldr	r3, [r3, #28]
 3978 008c B3F5004F 		cmp	r3, #32768
 3979 0090 40F08E80 		bne	.L194
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 3980              		.loc 1 1896 0
 3981 0094 7B68     		ldr	r3, [r7, #4]
 3982 0096 1A68     		ldr	r2, [r3]
 3983 0098 8D4B     		ldr	r3, .L201
 3984 009a 9A42     		cmp	r2, r3
 3985 009c 04D0     		beq	.L195
 3986              		.loc 1 1896 0 is_stmt 0 discriminator 1
 3987 009e 7B68     		ldr	r3, [r7, #4]
 3988 00a0 1A68     		ldr	r2, [r3]
 3989 00a2 8C4B     		ldr	r3, .L201+4
 3990 00a4 9A42     		cmp	r2, r3
 3991 00a6 41D1     		bne	.L196
ARM GAS  /tmp/ccfrOaPN.s 			page 103


 3992              	.L195:
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 3993              		.loc 1 1898 0 is_stmt 1
 3994 00a8 7B68     		ldr	r3, [r7, #4]
 3995 00aa 1C68     		ldr	r4, [r3]
 3996 00ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3997 00b0 0246     		mov	r2, r0
 3998 00b2 1346     		mov	r3, r2
 3999 00b4 9B00     		lsls	r3, r3, #2
 4000 00b6 1344     		add	r3, r3, r2
 4001 00b8 9A00     		lsls	r2, r3, #2
 4002 00ba 1A44     		add	r2, r2, r3
 4003 00bc 7B68     		ldr	r3, [r7, #4]
 4004 00be 5B68     		ldr	r3, [r3, #4]
 4005 00c0 5B00     		lsls	r3, r3, #1
 4006 00c2 B2FBF3F2 		udiv	r2, r2, r3
 4007 00c6 844B     		ldr	r3, .L201+8
 4008 00c8 A3FB0213 		umull	r1, r3, r3, r2
 4009 00cc 5B09     		lsrs	r3, r3, #5
 4010 00ce 1D01     		lsls	r5, r3, #4
 4011 00d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4012 00d4 0246     		mov	r2, r0
 4013 00d6 1346     		mov	r3, r2
 4014 00d8 9B00     		lsls	r3, r3, #2
 4015 00da 1344     		add	r3, r3, r2
 4016 00dc 9A00     		lsls	r2, r3, #2
 4017 00de 1A44     		add	r2, r2, r3
 4018 00e0 7B68     		ldr	r3, [r7, #4]
 4019 00e2 5B68     		ldr	r3, [r3, #4]
 4020 00e4 5B00     		lsls	r3, r3, #1
 4021 00e6 B2FBF3F6 		udiv	r6, r2, r3
 4022 00ea FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4023 00ee 0246     		mov	r2, r0
 4024 00f0 1346     		mov	r3, r2
 4025 00f2 9B00     		lsls	r3, r3, #2
 4026 00f4 1344     		add	r3, r3, r2
 4027 00f6 9A00     		lsls	r2, r3, #2
 4028 00f8 1A44     		add	r2, r2, r3
 4029 00fa 7B68     		ldr	r3, [r7, #4]
 4030 00fc 5B68     		ldr	r3, [r3, #4]
 4031 00fe 5B00     		lsls	r3, r3, #1
 4032 0100 B2FBF3F2 		udiv	r2, r2, r3
 4033 0104 744B     		ldr	r3, .L201+8
 4034 0106 A3FB0213 		umull	r1, r3, r3, r2
 4035 010a 5B09     		lsrs	r3, r3, #5
 4036 010c 6422     		movs	r2, #100
 4037 010e 02FB03F3 		mul	r3, r2, r3
 4038 0112 F31A     		subs	r3, r6, r3
 4039 0114 1B01     		lsls	r3, r3, #4
 4040 0116 03F13202 		add	r2, r3, #50
 4041 011a 6F4B     		ldr	r3, .L201+8
 4042 011c A3FB0213 		umull	r1, r3, r3, r2
 4043 0120 5B09     		lsrs	r3, r3, #5
 4044 0122 03F00F03 		and	r3, r3, #15
 4045 0126 2B43     		orrs	r3, r3, r5
 4046 0128 A360     		str	r3, [r4, #8]
ARM GAS  /tmp/ccfrOaPN.s 			page 104


 4047 012a CEE0     		b	.L193
 4048              	.L196:
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 4049              		.loc 1 1902 0
 4050 012c 7B68     		ldr	r3, [r7, #4]
 4051 012e 1C68     		ldr	r4, [r3]
 4052 0130 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4053 0134 0246     		mov	r2, r0
 4054 0136 1346     		mov	r3, r2
 4055 0138 9B00     		lsls	r3, r3, #2
 4056 013a 1344     		add	r3, r3, r2
 4057 013c 9A00     		lsls	r2, r3, #2
 4058 013e 1A44     		add	r2, r2, r3
 4059 0140 7B68     		ldr	r3, [r7, #4]
 4060 0142 5B68     		ldr	r3, [r3, #4]
 4061 0144 5B00     		lsls	r3, r3, #1
 4062 0146 B2FBF3F2 		udiv	r2, r2, r3
 4063 014a 634B     		ldr	r3, .L201+8
 4064 014c A3FB0213 		umull	r1, r3, r3, r2
 4065 0150 5B09     		lsrs	r3, r3, #5
 4066 0152 1D01     		lsls	r5, r3, #4
 4067 0154 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4068 0158 0246     		mov	r2, r0
 4069 015a 1346     		mov	r3, r2
 4070 015c 9B00     		lsls	r3, r3, #2
 4071 015e 1344     		add	r3, r3, r2
 4072 0160 9A00     		lsls	r2, r3, #2
 4073 0162 1A44     		add	r2, r2, r3
 4074 0164 7B68     		ldr	r3, [r7, #4]
 4075 0166 5B68     		ldr	r3, [r3, #4]
 4076 0168 5B00     		lsls	r3, r3, #1
 4077 016a B2FBF3F6 		udiv	r6, r2, r3
 4078 016e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4079 0172 0246     		mov	r2, r0
 4080 0174 1346     		mov	r3, r2
 4081 0176 9B00     		lsls	r3, r3, #2
 4082 0178 1344     		add	r3, r3, r2
 4083 017a 9A00     		lsls	r2, r3, #2
 4084 017c 1A44     		add	r2, r2, r3
 4085 017e 7B68     		ldr	r3, [r7, #4]
 4086 0180 5B68     		ldr	r3, [r3, #4]
 4087 0182 5B00     		lsls	r3, r3, #1
 4088 0184 B2FBF3F2 		udiv	r2, r2, r3
 4089 0188 534B     		ldr	r3, .L201+8
 4090 018a A3FB0213 		umull	r1, r3, r3, r2
 4091 018e 5B09     		lsrs	r3, r3, #5
 4092 0190 6422     		movs	r2, #100
 4093 0192 02FB03F3 		mul	r3, r2, r3
 4094 0196 F31A     		subs	r3, r6, r3
 4095 0198 1B01     		lsls	r3, r3, #4
 4096 019a 03F13202 		add	r2, r3, #50
 4097 019e 4E4B     		ldr	r3, .L201+8
 4098 01a0 A3FB0213 		umull	r1, r3, r3, r2
 4099 01a4 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccfrOaPN.s 			page 105


 4100 01a6 03F00F03 		and	r3, r3, #15
 4101 01aa 2B43     		orrs	r3, r3, r5
 4102 01ac A360     		str	r3, [r4, #8]
 4103 01ae 8CE0     		b	.L193
 4104              	.L194:
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 4105              		.loc 1 1908 0
 4106 01b0 7B68     		ldr	r3, [r7, #4]
 4107 01b2 1A68     		ldr	r2, [r3]
 4108 01b4 464B     		ldr	r3, .L201
 4109 01b6 9A42     		cmp	r2, r3
 4110 01b8 04D0     		beq	.L199
 4111              		.loc 1 1908 0 is_stmt 0 discriminator 1
 4112 01ba 7B68     		ldr	r3, [r7, #4]
 4113 01bc 1A68     		ldr	r2, [r3]
 4114 01be 454B     		ldr	r3, .L201+4
 4115 01c0 9A42     		cmp	r2, r3
 4116 01c2 41D1     		bne	.L200
 4117              	.L199:
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 4118              		.loc 1 1910 0 is_stmt 1
 4119 01c4 7B68     		ldr	r3, [r7, #4]
 4120 01c6 1C68     		ldr	r4, [r3]
 4121 01c8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4122 01cc 0246     		mov	r2, r0
 4123 01ce 1346     		mov	r3, r2
 4124 01d0 9B00     		lsls	r3, r3, #2
 4125 01d2 1344     		add	r3, r3, r2
 4126 01d4 9A00     		lsls	r2, r3, #2
 4127 01d6 1A44     		add	r2, r2, r3
 4128 01d8 7B68     		ldr	r3, [r7, #4]
 4129 01da 5B68     		ldr	r3, [r3, #4]
 4130 01dc 9B00     		lsls	r3, r3, #2
 4131 01de B2FBF3F2 		udiv	r2, r2, r3
 4132 01e2 3D4B     		ldr	r3, .L201+8
 4133 01e4 A3FB0213 		umull	r1, r3, r3, r2
 4134 01e8 5B09     		lsrs	r3, r3, #5
 4135 01ea 1D01     		lsls	r5, r3, #4
 4136 01ec FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4137 01f0 0246     		mov	r2, r0
 4138 01f2 1346     		mov	r3, r2
 4139 01f4 9B00     		lsls	r3, r3, #2
 4140 01f6 1344     		add	r3, r3, r2
 4141 01f8 9A00     		lsls	r2, r3, #2
 4142 01fa 1A44     		add	r2, r2, r3
 4143 01fc 7B68     		ldr	r3, [r7, #4]
 4144 01fe 5B68     		ldr	r3, [r3, #4]
 4145 0200 9B00     		lsls	r3, r3, #2
 4146 0202 B2FBF3F6 		udiv	r6, r2, r3
 4147 0206 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4148 020a 0246     		mov	r2, r0
ARM GAS  /tmp/ccfrOaPN.s 			page 106


 4149 020c 1346     		mov	r3, r2
 4150 020e 9B00     		lsls	r3, r3, #2
 4151 0210 1344     		add	r3, r3, r2
 4152 0212 9A00     		lsls	r2, r3, #2
 4153 0214 1A44     		add	r2, r2, r3
 4154 0216 7B68     		ldr	r3, [r7, #4]
 4155 0218 5B68     		ldr	r3, [r3, #4]
 4156 021a 9B00     		lsls	r3, r3, #2
 4157 021c B2FBF3F2 		udiv	r2, r2, r3
 4158 0220 2D4B     		ldr	r3, .L201+8
 4159 0222 A3FB0213 		umull	r1, r3, r3, r2
 4160 0226 5B09     		lsrs	r3, r3, #5
 4161 0228 6422     		movs	r2, #100
 4162 022a 02FB03F3 		mul	r3, r2, r3
 4163 022e F31A     		subs	r3, r6, r3
 4164 0230 1B01     		lsls	r3, r3, #4
 4165 0232 03F13202 		add	r2, r3, #50
 4166 0236 284B     		ldr	r3, .L201+8
 4167 0238 A3FB0213 		umull	r1, r3, r3, r2
 4168 023c 5B09     		lsrs	r3, r3, #5
 4169 023e 03F00F03 		and	r3, r3, #15
 4170 0242 2B43     		orrs	r3, r3, r5
 4171 0244 A360     		str	r3, [r4, #8]
 4172 0246 40E0     		b	.L193
 4173              	.L200:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 4174              		.loc 1 1914 0
 4175 0248 7B68     		ldr	r3, [r7, #4]
 4176 024a 1C68     		ldr	r4, [r3]
 4177 024c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4178 0250 0246     		mov	r2, r0
 4179 0252 1346     		mov	r3, r2
 4180 0254 9B00     		lsls	r3, r3, #2
 4181 0256 1344     		add	r3, r3, r2
 4182 0258 9A00     		lsls	r2, r3, #2
 4183 025a 1A44     		add	r2, r2, r3
 4184 025c 7B68     		ldr	r3, [r7, #4]
 4185 025e 5B68     		ldr	r3, [r3, #4]
 4186 0260 9B00     		lsls	r3, r3, #2
 4187 0262 B2FBF3F2 		udiv	r2, r2, r3
 4188 0266 1C4B     		ldr	r3, .L201+8
 4189 0268 A3FB0213 		umull	r1, r3, r3, r2
 4190 026c 5B09     		lsrs	r3, r3, #5
 4191 026e 1D01     		lsls	r5, r3, #4
 4192 0270 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4193 0274 0246     		mov	r2, r0
 4194 0276 1346     		mov	r3, r2
 4195 0278 9B00     		lsls	r3, r3, #2
 4196 027a 1344     		add	r3, r3, r2
 4197 027c 9A00     		lsls	r2, r3, #2
 4198 027e 1A44     		add	r2, r2, r3
 4199 0280 7B68     		ldr	r3, [r7, #4]
 4200 0282 5B68     		ldr	r3, [r3, #4]
 4201 0284 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccfrOaPN.s 			page 107


 4202 0286 B2FBF3F6 		udiv	r6, r2, r3
 4203 028a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4204 028e 0246     		mov	r2, r0
 4205 0290 1346     		mov	r3, r2
 4206 0292 9B00     		lsls	r3, r3, #2
 4207 0294 1344     		add	r3, r3, r2
 4208 0296 9A00     		lsls	r2, r3, #2
 4209 0298 1A44     		add	r2, r2, r3
 4210 029a 7B68     		ldr	r3, [r7, #4]
 4211 029c 5B68     		ldr	r3, [r3, #4]
 4212 029e 9B00     		lsls	r3, r3, #2
 4213 02a0 B2FBF3F2 		udiv	r2, r2, r3
 4214 02a4 0C4B     		ldr	r3, .L201+8
 4215 02a6 A3FB0213 		umull	r1, r3, r3, r2
 4216 02aa 5B09     		lsrs	r3, r3, #5
 4217 02ac 6422     		movs	r2, #100
 4218 02ae 02FB03F3 		mul	r3, r2, r3
 4219 02b2 F31A     		subs	r3, r6, r3
 4220 02b4 1B01     		lsls	r3, r3, #4
 4221 02b6 03F13202 		add	r2, r3, #50
 4222 02ba 074B     		ldr	r3, .L201+8
 4223 02bc A3FB0213 		umull	r1, r3, r3, r2
 4224 02c0 5B09     		lsrs	r3, r3, #5
 4225 02c2 03F00F03 		and	r3, r3, #15
 4226 02c6 2B43     		orrs	r3, r3, r5
 4227 02c8 A360     		str	r3, [r4, #8]
 4228              	.L193:
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4229              		.loc 1 1917 0
 4230 02ca 1437     		adds	r7, r7, #20
 4231 02cc BD46     		mov	sp, r7
 4232              		@ sp needed
 4233 02ce F0BD     		pop	{r4, r5, r6, r7, pc}
 4234              	.L202:
 4235              		.align	2
 4236              	.L201:
 4237 02d0 00100140 		.word	1073811456
 4238 02d4 00140140 		.word	1073812480
 4239 02d8 1F85EB51 		.word	1374389535
 4240              		.cfi_endproc
 4241              	.LFE163:
 4243              		.text
 4244              	.Letext0:
 4245              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 4246              		.file 3 "/usr/include/newlib/stdint.h"
 4247              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 4248              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4249              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4250              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4251              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4252              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccfrOaPN.s 			page 108


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/ccfrOaPN.s:20     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccfrOaPN.s:25     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccfrOaPN.s:580    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccfrOaPN.s:3881   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccfrOaPN.s:126    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccfrOaPN.s:131    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccfrOaPN.s:239    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccfrOaPN.s:244    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccfrOaPN.s:370    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccfrOaPN.s:375    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccfrOaPN.s:512    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccfrOaPN.s:517    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccfrOaPN.s:613    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccfrOaPN.s:575    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccfrOaPN.s:608    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccfrOaPN.s:641    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccfrOaPN.s:646    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccfrOaPN.s:3277   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccfrOaPN.s:873    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccfrOaPN.s:878    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccfrOaPN.s:1122   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccfrOaPN.s:1127   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccfrOaPN.s:1270   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccfrOaPN.s:1275   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccfrOaPN.s:1418   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccfrOaPN.s:1423   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccfrOaPN.s:1582   .text.HAL_UART_Transmit_DMA:00000000000000e8 $d
     /tmp/ccfrOaPN.s:3003   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccfrOaPN.s:3071   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccfrOaPN.s:3221   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccfrOaPN.s:1589   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccfrOaPN.s:1594   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccfrOaPN.s:1744   .text.HAL_UART_Receive_DMA:00000000000000d8 $d
     /tmp/ccfrOaPN.s:3109   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccfrOaPN.s:3183   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccfrOaPN.s:1751   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccfrOaPN.s:1756   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccfrOaPN.s:1860   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccfrOaPN.s:1865   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccfrOaPN.s:1993   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccfrOaPN.s:1998   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccfrOaPN.s:2070   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccfrOaPN.s:2075   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccfrOaPN.s:3686   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccfrOaPN.s:3475   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccfrOaPN.s:3608   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccfrOaPN.s:2520   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccfrOaPN.s:2383   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccfrOaPN.s:2388   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccfrOaPN.s:2416   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccfrOaPN.s:2421   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccfrOaPN.s:2449   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccfrOaPN.s:2454   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccfrOaPN.s:2482   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccfrOaPN.s:2487   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/ccfrOaPN.s 			page 109


     /tmp/ccfrOaPN.s:2515   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccfrOaPN.s:2548   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccfrOaPN.s:2553   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccfrOaPN.s:2618   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccfrOaPN.s:2623   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccfrOaPN.s:2688   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccfrOaPN.s:2693   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccfrOaPN.s:2758   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccfrOaPN.s:2763   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccfrOaPN.s:2841   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccfrOaPN.s:2846   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccfrOaPN.s:2924   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccfrOaPN.s:2929   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccfrOaPN.s:2962   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccfrOaPN.s:2967   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccfrOaPN.s:2999   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccfrOaPN.s:3067   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccfrOaPN.s:3105   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccfrOaPN.s:3179   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccfrOaPN.s:3217   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccfrOaPN.s:3273   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccfrOaPN.s:3471   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccfrOaPN.s:3604   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccfrOaPN.s:3682   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccfrOaPN.s:3877   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccfrOaPN.s:4237   .text.UART_SetConfig:00000000000002d0 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_GetTick
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
